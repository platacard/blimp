// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// - Remark: HTTP `GET /v1/apps`.
    /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)`.
    func apps_getCollection(_ input: Operations.apps_getCollection.Input) async throws -> Operations.apps_getCollection.Output
    /// - Remark: HTTP `GET /v1/apps/{id}/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)`.
    func apps_betaGroups_getToManyRelated(_ input: Operations.apps_betaGroups_getToManyRelated.Input) async throws -> Operations.apps_betaGroups_getToManyRelated.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// - Remark: HTTP `GET /v1/apps`.
    /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)`.
    internal func apps_getCollection(
        query: Operations.apps_getCollection.Input.Query = .init(),
        headers: Operations.apps_getCollection.Input.Headers = .init()
    ) async throws -> Operations.apps_getCollection.Output {
        try await apps_getCollection(Operations.apps_getCollection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/apps/{id}/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)`.
    internal func apps_betaGroups_getToManyRelated(
        path: Operations.apps_betaGroups_getToManyRelated.Input.Path,
        query: Operations.apps_betaGroups_getToManyRelated.Input.Query = .init(),
        headers: Operations.apps_betaGroups_getToManyRelated.Input.Headers = .init()
    ) async throws -> Operations.apps_betaGroups_getToManyRelated.Output {
        try await apps_betaGroups_getToManyRelated(Operations.apps_betaGroups_getToManyRelated.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal enum Server1 {
        internal static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
                variables: []
            )
        }
    }
    @available(*, deprecated, renamed: "Servers.Server1.url")
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/AppClip`.
        internal struct AppClip: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppClip/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appClips = "appClips"
            }
            /// - Remark: Generated from `#/components/schemas/AppClip/type`.
            internal var _type: Components.Schemas.AppClip._typePayload
            /// - Remark: Generated from `#/components/schemas/AppClip/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppClip/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppClip/attributes/bundleId`.
                internal var bundleId: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - bundleId:
                internal init(bundleId: Swift.String? = nil) {
                    self.bundleId = bundleId
                }
                internal enum CodingKeys: String, CodingKey {
                    case bundleId
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppClip/attributes`.
            internal var attributes: Components.Schemas.AppClip.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppClip/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppClip.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppClip.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app/data`.
                    internal var data: Components.Schemas.AppClip.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppClip.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/app`.
                internal var app: Components.Schemas.AppClip.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences`.
                internal struct appClipDefaultExperiencesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClipDefaultExperiences = "appClipDefaultExperiences"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/dataPayload/type`.
                        internal var _type: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/data`.
                    internal typealias dataPayload = [Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences/data`.
                    internal var data: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload.dataPayload?
                    /// Creates a new `appClipDefaultExperiencesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipDefaultExperiences`.
                internal var appClipDefaultExperiences: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload?
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipAdvancedExperiences`.
                internal struct appClipAdvancedExperiencesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipAdvancedExperiences/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appClipAdvancedExperiencesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppClip/relationships/appClipAdvancedExperiences`.
                internal var appClipAdvancedExperiences: Components.Schemas.AppClip.relationshipsPayload.appClipAdvancedExperiencesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - appClipDefaultExperiences:
                ///   - appClipAdvancedExperiences:
                internal init(
                    app: Components.Schemas.AppClip.relationshipsPayload.appPayload? = nil,
                    appClipDefaultExperiences: Components.Schemas.AppClip.relationshipsPayload.appClipDefaultExperiencesPayload? = nil,
                    appClipAdvancedExperiences: Components.Schemas.AppClip.relationshipsPayload.appClipAdvancedExperiencesPayload? = nil
                ) {
                    self.app = app
                    self.appClipDefaultExperiences = appClipDefaultExperiences
                    self.appClipAdvancedExperiences = appClipAdvancedExperiences
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case appClipDefaultExperiences
                    case appClipAdvancedExperiences
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppClip/relationships`.
            internal var relationships: Components.Schemas.AppClip.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppClip/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppClip`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppClip._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppClip.attributesPayload? = nil,
                relationships: Components.Schemas.AppClip.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage`.
        internal struct AppCustomProductPage: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appCustomProductPages = "appCustomProductPages"
            }
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/type`.
            internal var _type: Components.Schemas.AppCustomProductPage._typePayload
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/attributes/url`.
                internal var url: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/attributes/visible`.
                internal var visible: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - url:
                ///   - visible:
                internal init(
                    name: Swift.String? = nil,
                    url: Swift.String? = nil,
                    visible: Swift.Bool? = nil
                ) {
                    self.name = name
                    self.url = url
                    self.visible = visible
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case url
                    case visible
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/attributes`.
            internal var attributes: Components.Schemas.AppCustomProductPage.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app/data`.
                    internal var data: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/app`.
                internal var app: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions`.
                internal struct appCustomProductPageVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCustomProductPageVersions = "appCustomProductPageVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions/data`.
                    internal var data: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload.dataPayload?
                    /// Creates a new `appCustomProductPageVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships/appCustomProductPageVersions`.
                internal var appCustomProductPageVersions: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - appCustomProductPageVersions:
                internal init(
                    app: Components.Schemas.AppCustomProductPage.relationshipsPayload.appPayload? = nil,
                    appCustomProductPageVersions: Components.Schemas.AppCustomProductPage.relationshipsPayload.appCustomProductPageVersionsPayload? = nil
                ) {
                    self.app = app
                    self.appCustomProductPageVersions = appCustomProductPageVersions
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case appCustomProductPageVersions
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/relationships`.
            internal var relationships: Components.Schemas.AppCustomProductPage.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppCustomProductPage/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppCustomProductPage`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppCustomProductPage._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppCustomProductPage.attributesPayload? = nil,
                relationships: Components.Schemas.AppCustomProductPage.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration`.
        internal struct AppEncryptionDeclaration: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appEncryptionDeclarations = "appEncryptionDeclarations"
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/type`.
            internal var _type: Components.Schemas.AppEncryptionDeclaration._typePayload
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/appDescription`.
                internal var appDescription: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/usesEncryption`.
                @available(*, deprecated)
                internal var usesEncryption: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/exempt`.
                internal var exempt: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/containsProprietaryCryptography`.
                internal var containsProprietaryCryptography: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/containsThirdPartyCryptography`.
                internal var containsThirdPartyCryptography: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/availableOnFrenchStore`.
                internal var availableOnFrenchStore: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/uploadedDate`.
                @available(*, deprecated)
                internal var uploadedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentUrl`.
                @available(*, deprecated)
                internal var documentUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentName`.
                @available(*, deprecated)
                internal var documentName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentType`.
                @available(*, deprecated)
                internal var documentType: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/appEncryptionDeclarationState`.
                internal var appEncryptionDeclarationState: Components.Schemas.AppEncryptionDeclarationState?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/codeValue`.
                internal var codeValue: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - appDescription:
                ///   - createdDate:
                ///   - usesEncryption:
                ///   - exempt:
                ///   - containsProprietaryCryptography:
                ///   - containsThirdPartyCryptography:
                ///   - availableOnFrenchStore:
                ///   - platform:
                ///   - uploadedDate:
                ///   - documentUrl:
                ///   - documentName:
                ///   - documentType:
                ///   - appEncryptionDeclarationState:
                ///   - codeValue:
                internal init(
                    appDescription: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    usesEncryption: Swift.Bool? = nil,
                    exempt: Swift.Bool? = nil,
                    containsProprietaryCryptography: Swift.Bool? = nil,
                    containsThirdPartyCryptography: Swift.Bool? = nil,
                    availableOnFrenchStore: Swift.Bool? = nil,
                    platform: Components.Schemas.Platform? = nil,
                    uploadedDate: Foundation.Date? = nil,
                    documentUrl: Swift.String? = nil,
                    documentName: Swift.String? = nil,
                    documentType: Swift.String? = nil,
                    appEncryptionDeclarationState: Components.Schemas.AppEncryptionDeclarationState? = nil,
                    codeValue: Swift.String? = nil
                ) {
                    self.appDescription = appDescription
                    self.createdDate = createdDate
                    self.usesEncryption = usesEncryption
                    self.exempt = exempt
                    self.containsProprietaryCryptography = containsProprietaryCryptography
                    self.containsThirdPartyCryptography = containsThirdPartyCryptography
                    self.availableOnFrenchStore = availableOnFrenchStore
                    self.platform = platform
                    self.uploadedDate = uploadedDate
                    self.documentUrl = documentUrl
                    self.documentName = documentName
                    self.documentType = documentType
                    self.appEncryptionDeclarationState = appEncryptionDeclarationState
                    self.codeValue = codeValue
                }
                internal enum CodingKeys: String, CodingKey {
                    case appDescription
                    case createdDate
                    case usesEncryption
                    case exempt
                    case containsProprietaryCryptography
                    case containsThirdPartyCryptography
                    case availableOnFrenchStore
                    case platform
                    case uploadedDate
                    case documentUrl
                    case documentName
                    case documentType
                    case appEncryptionDeclarationState
                    case codeValue
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes`.
            internal var attributes: Components.Schemas.AppEncryptionDeclaration.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app`.
                @available(*, deprecated)
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app`.
                @available(*, deprecated)
                internal var app: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds`.
                @available(*, deprecated)
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds`.
                @available(*, deprecated)
                internal var builds: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument`.
                internal struct appEncryptionDeclarationDocumentPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarationDocuments = "appEncryptionDeclarationDocuments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationDocumentPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument`.
                internal var appEncryptionDeclarationDocument: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - builds:
                ///   - appEncryptionDeclarationDocument:
                internal init(
                    app: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload? = nil,
                    builds: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload? = nil,
                    appEncryptionDeclarationDocument: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload? = nil
                ) {
                    self.app = app
                    self.builds = builds
                    self.appEncryptionDeclarationDocument = appEncryptionDeclarationDocument
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case builds
                    case appEncryptionDeclarationDocument
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships`.
            internal var relationships: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppEncryptionDeclaration`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppEncryptionDeclaration._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppEncryptionDeclaration.attributesPayload? = nil,
                relationships: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppEvent`.
        internal struct AppEvent: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppEvent/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appEvents = "appEvents"
            }
            /// - Remark: Generated from `#/components/schemas/AppEvent/type`.
            internal var _type: Components.Schemas.AppEvent._typePayload
            /// - Remark: Generated from `#/components/schemas/AppEvent/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppEvent/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/referenceName`.
                internal var referenceName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/badge`.
                internal enum badgePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case LIVE_EVENT = "LIVE_EVENT"
                    case PREMIERE = "PREMIERE"
                    case CHALLENGE = "CHALLENGE"
                    case COMPETITION = "COMPETITION"
                    case NEW_SEASON = "NEW_SEASON"
                    case MAJOR_UPDATE = "MAJOR_UPDATE"
                    case SPECIAL_EVENT = "SPECIAL_EVENT"
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/badge`.
                internal var badge: Components.Schemas.AppEvent.attributesPayload.badgePayload?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/eventState`.
                internal enum eventStatePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case DRAFT = "DRAFT"
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case REJECTED = "REJECTED"
                    case ACCEPTED = "ACCEPTED"
                    case APPROVED = "APPROVED"
                    case PUBLISHED = "PUBLISHED"
                    case PAST = "PAST"
                    case ARCHIVED = "ARCHIVED"
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/eventState`.
                internal var eventState: Components.Schemas.AppEvent.attributesPayload.eventStatePayload?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/deepLink`.
                internal var deepLink: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/purchaseRequirement`.
                internal var purchaseRequirement: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/primaryLocale`.
                internal var primaryLocale: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/priority`.
                internal enum priorityPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case HIGH = "HIGH"
                    case NORMAL = "NORMAL"
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/priority`.
                internal var priority: Components.Schemas.AppEvent.attributesPayload.priorityPayload?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/purpose`.
                internal enum purposePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APPROPRIATE_FOR_ALL_USERS = "APPROPRIATE_FOR_ALL_USERS"
                    case ATTRACT_NEW_USERS = "ATTRACT_NEW_USERS"
                    case KEEP_ACTIVE_USERS_INFORMED = "KEEP_ACTIVE_USERS_INFORMED"
                    case BRING_BACK_LAPSED_USERS = "BRING_BACK_LAPSED_USERS"
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/purpose`.
                internal var purpose: Components.Schemas.AppEvent.attributesPayload.purposePayload?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedulesPayload`.
                internal struct territorySchedulesPayloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedulesPayload/territories`.
                    internal var territories: [Swift.String]?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedulesPayload/publishStart`.
                    internal var publishStart: Foundation.Date?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedulesPayload/eventStart`.
                    internal var eventStart: Foundation.Date?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedulesPayload/eventEnd`.
                    internal var eventEnd: Foundation.Date?
                    /// Creates a new `territorySchedulesPayloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - territories:
                    ///   - publishStart:
                    ///   - eventStart:
                    ///   - eventEnd:
                    internal init(
                        territories: [Swift.String]? = nil,
                        publishStart: Foundation.Date? = nil,
                        eventStart: Foundation.Date? = nil,
                        eventEnd: Foundation.Date? = nil
                    ) {
                        self.territories = territories
                        self.publishStart = publishStart
                        self.eventStart = eventStart
                        self.eventEnd = eventEnd
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case territories
                        case publishStart
                        case eventStart
                        case eventEnd
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedules`.
                internal typealias territorySchedulesPayload = [Components.Schemas.AppEvent.attributesPayload.territorySchedulesPayloadPayload]
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/territorySchedules`.
                internal var territorySchedules: Components.Schemas.AppEvent.attributesPayload.territorySchedulesPayload?
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedulesPayload`.
                internal struct archivedTerritorySchedulesPayloadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedulesPayload/territories`.
                    internal var territories: [Swift.String]?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedulesPayload/publishStart`.
                    internal var publishStart: Foundation.Date?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedulesPayload/eventStart`.
                    internal var eventStart: Foundation.Date?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedulesPayload/eventEnd`.
                    internal var eventEnd: Foundation.Date?
                    /// Creates a new `archivedTerritorySchedulesPayloadPayload`.
                    ///
                    /// - Parameters:
                    ///   - territories:
                    ///   - publishStart:
                    ///   - eventStart:
                    ///   - eventEnd:
                    internal init(
                        territories: [Swift.String]? = nil,
                        publishStart: Foundation.Date? = nil,
                        eventStart: Foundation.Date? = nil,
                        eventEnd: Foundation.Date? = nil
                    ) {
                        self.territories = territories
                        self.publishStart = publishStart
                        self.eventStart = eventStart
                        self.eventEnd = eventEnd
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case territories
                        case publishStart
                        case eventStart
                        case eventEnd
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedules`.
                internal typealias archivedTerritorySchedulesPayload = [Components.Schemas.AppEvent.attributesPayload.archivedTerritorySchedulesPayloadPayload]
                /// - Remark: Generated from `#/components/schemas/AppEvent/attributes/archivedTerritorySchedules`.
                internal var archivedTerritorySchedules: Components.Schemas.AppEvent.attributesPayload.archivedTerritorySchedulesPayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - referenceName:
                ///   - badge:
                ///   - eventState:
                ///   - deepLink:
                ///   - purchaseRequirement:
                ///   - primaryLocale:
                ///   - priority:
                ///   - purpose:
                ///   - territorySchedules:
                ///   - archivedTerritorySchedules:
                internal init(
                    referenceName: Swift.String? = nil,
                    badge: Components.Schemas.AppEvent.attributesPayload.badgePayload? = nil,
                    eventState: Components.Schemas.AppEvent.attributesPayload.eventStatePayload? = nil,
                    deepLink: Swift.String? = nil,
                    purchaseRequirement: Swift.String? = nil,
                    primaryLocale: Swift.String? = nil,
                    priority: Components.Schemas.AppEvent.attributesPayload.priorityPayload? = nil,
                    purpose: Components.Schemas.AppEvent.attributesPayload.purposePayload? = nil,
                    territorySchedules: Components.Schemas.AppEvent.attributesPayload.territorySchedulesPayload? = nil,
                    archivedTerritorySchedules: Components.Schemas.AppEvent.attributesPayload.archivedTerritorySchedulesPayload? = nil
                ) {
                    self.referenceName = referenceName
                    self.badge = badge
                    self.eventState = eventState
                    self.deepLink = deepLink
                    self.purchaseRequirement = purchaseRequirement
                    self.primaryLocale = primaryLocale
                    self.priority = priority
                    self.purpose = purpose
                    self.territorySchedules = territorySchedules
                    self.archivedTerritorySchedules = archivedTerritorySchedules
                }
                internal enum CodingKeys: String, CodingKey {
                    case referenceName
                    case badge
                    case eventState
                    case deepLink
                    case purchaseRequirement
                    case primaryLocale
                    case priority
                    case purpose
                    case territorySchedules
                    case archivedTerritorySchedules
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEvent/attributes`.
            internal var attributes: Components.Schemas.AppEvent.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppEvent/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations`.
                internal struct localizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEventLocalizations = "appEventLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/dataPayload/type`.
                        internal var _type: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/data`.
                    internal typealias dataPayload = [Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations/data`.
                    internal var data: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload.dataPayload?
                    /// Creates a new `localizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEvent/relationships/localizations`.
                internal var localizations: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - localizations:
                internal init(localizations: Components.Schemas.AppEvent.relationshipsPayload.localizationsPayload? = nil) {
                    self.localizations = localizations
                }
                internal enum CodingKeys: String, CodingKey {
                    case localizations
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEvent/relationships`.
            internal var relationships: Components.Schemas.AppEvent.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppEvent/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppEvent`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppEvent._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppEvent.attributesPayload? = nil,
                relationships: Components.Schemas.AppEvent.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppInfo`.
        internal struct AppInfo: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppInfo/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appInfos = "appInfos"
            }
            /// - Remark: Generated from `#/components/schemas/AppInfo/type`.
            internal var _type: Components.Schemas.AppInfo._typePayload
            /// - Remark: Generated from `#/components/schemas/AppInfo/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppInfo/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/appStoreState`.
                internal var appStoreState: Components.Schemas.AppStoreVersionState?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/state`.
                internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ACCEPTED = "ACCEPTED"
                    case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
                    case IN_REVIEW = "IN_REVIEW"
                    case PENDING_RELEASE = "PENDING_RELEASE"
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case READY_FOR_DISTRIBUTION = "READY_FOR_DISTRIBUTION"
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case REJECTED = "REJECTED"
                    case REPLACED_WITH_NEW_INFO = "REPLACED_WITH_NEW_INFO"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/state`.
                internal var state: Components.Schemas.AppInfo.attributesPayload.statePayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/appStoreAgeRating`.
                internal var appStoreAgeRating: Components.Schemas.AppStoreAgeRating?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/australiaAgeRating`.
                internal enum australiaAgeRatingPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case FIFTEEN = "FIFTEEN"
                    case EIGHTEEN = "EIGHTEEN"
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/australiaAgeRating`.
                @available(*, deprecated)
                internal var australiaAgeRating: Components.Schemas.AppInfo.attributesPayload.australiaAgeRatingPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/brazilAgeRating`.
                internal var brazilAgeRating: Components.Schemas.BrazilAgeRating?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/brazilAgeRatingV2`.
                internal enum brazilAgeRatingV2Payload: String, Codable, Hashable, Sendable, CaseIterable {
                    case SELF_RATED_L = "SELF_RATED_L"
                    case SELF_RATED_TEN = "SELF_RATED_TEN"
                    case SELF_RATED_TWELVE = "SELF_RATED_TWELVE"
                    case SELF_RATED_FOURTEEN = "SELF_RATED_FOURTEEN"
                    case SELF_RATED_SIXTEEN = "SELF_RATED_SIXTEEN"
                    case SELF_RATED_EIGHTEEN = "SELF_RATED_EIGHTEEN"
                    case OFFICIAL_L = "OFFICIAL_L"
                    case OFFICIAL_TEN = "OFFICIAL_TEN"
                    case OFFICIAL_TWELVE = "OFFICIAL_TWELVE"
                    case OFFICIAL_FOURTEEN = "OFFICIAL_FOURTEEN"
                    case OFFICIAL_SIXTEEN = "OFFICIAL_SIXTEEN"
                    case OFFICIAL_EIGHTEEN = "OFFICIAL_EIGHTEEN"
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/brazilAgeRatingV2`.
                @available(*, deprecated)
                internal var brazilAgeRatingV2: Components.Schemas.AppInfo.attributesPayload.brazilAgeRatingV2Payload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/franceAgeRating`.
                internal enum franceAgeRatingPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case EIGHTEEN = "EIGHTEEN"
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/franceAgeRating`.
                @available(*, deprecated)
                internal var franceAgeRating: Components.Schemas.AppInfo.attributesPayload.franceAgeRatingPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/koreaAgeRating`.
                internal enum koreaAgeRatingPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ALL = "ALL"
                    case TWELVE = "TWELVE"
                    case FIFTEEN = "FIFTEEN"
                    case NINETEEN = "NINETEEN"
                    case NOT_APPLICABLE = "NOT_APPLICABLE"
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/koreaAgeRating`.
                @available(*, deprecated)
                internal var koreaAgeRating: Components.Schemas.AppInfo.attributesPayload.koreaAgeRatingPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/attributes/kidsAgeBand`.
                internal var kidsAgeBand: Components.Schemas.KidsAgeBand?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - appStoreState:
                ///   - state:
                ///   - appStoreAgeRating:
                ///   - australiaAgeRating:
                ///   - brazilAgeRating:
                ///   - brazilAgeRatingV2:
                ///   - franceAgeRating:
                ///   - koreaAgeRating:
                ///   - kidsAgeBand:
                internal init(
                    appStoreState: Components.Schemas.AppStoreVersionState? = nil,
                    state: Components.Schemas.AppInfo.attributesPayload.statePayload? = nil,
                    appStoreAgeRating: Components.Schemas.AppStoreAgeRating? = nil,
                    australiaAgeRating: Components.Schemas.AppInfo.attributesPayload.australiaAgeRatingPayload? = nil,
                    brazilAgeRating: Components.Schemas.BrazilAgeRating? = nil,
                    brazilAgeRatingV2: Components.Schemas.AppInfo.attributesPayload.brazilAgeRatingV2Payload? = nil,
                    franceAgeRating: Components.Schemas.AppInfo.attributesPayload.franceAgeRatingPayload? = nil,
                    koreaAgeRating: Components.Schemas.AppInfo.attributesPayload.koreaAgeRatingPayload? = nil,
                    kidsAgeBand: Components.Schemas.KidsAgeBand? = nil
                ) {
                    self.appStoreState = appStoreState
                    self.state = state
                    self.appStoreAgeRating = appStoreAgeRating
                    self.australiaAgeRating = australiaAgeRating
                    self.brazilAgeRating = brazilAgeRating
                    self.brazilAgeRatingV2 = brazilAgeRatingV2
                    self.franceAgeRating = franceAgeRating
                    self.koreaAgeRating = koreaAgeRating
                    self.kidsAgeBand = kidsAgeBand
                }
                internal enum CodingKeys: String, CodingKey {
                    case appStoreState
                    case state
                    case appStoreAgeRating
                    case australiaAgeRating
                    case brazilAgeRating
                    case brazilAgeRatingV2
                    case franceAgeRating
                    case koreaAgeRating
                    case kidsAgeBand
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppInfo/attributes`.
            internal var attributes: Components.Schemas.AppInfo.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppInfo/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppInfo.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/app`.
                internal var app: Components.Schemas.AppInfo.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration`.
                internal struct ageRatingDeclarationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case ageRatingDeclarations = "ageRatingDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload.dataPayload?
                    /// Creates a new `ageRatingDeclarationPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/ageRatingDeclaration`.
                internal var ageRatingDeclaration: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations`.
                internal struct appInfoLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appInfoLocalizations = "appInfoLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload.dataPayload?
                    /// Creates a new `appInfoLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/appInfoLocalizations`.
                internal var appInfoLocalizations: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory`.
                internal struct primaryCategoryPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload.dataPayload?
                    /// Creates a new `primaryCategoryPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primaryCategory`.
                internal var primaryCategory: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne`.
                internal struct primarySubcategoryOnePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload.dataPayload?
                    /// Creates a new `primarySubcategoryOnePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryOne`.
                internal var primarySubcategoryOne: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo`.
                internal struct primarySubcategoryTwoPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload.dataPayload?
                    /// Creates a new `primarySubcategoryTwoPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/primarySubcategoryTwo`.
                internal var primarySubcategoryTwo: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory`.
                internal struct secondaryCategoryPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload.dataPayload?
                    /// Creates a new `secondaryCategoryPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondaryCategory`.
                internal var secondaryCategory: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne`.
                internal struct secondarySubcategoryOnePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload.dataPayload?
                    /// Creates a new `secondarySubcategoryOnePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryOne`.
                internal var secondarySubcategoryOne: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo`.
                internal struct secondarySubcategoryTwoPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCategories = "appCategories"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/data/type`.
                        internal var _type: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo/data`.
                    internal var data: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload.dataPayload?
                    /// Creates a new `secondarySubcategoryTwoPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/secondarySubcategoryTwo`.
                internal var secondarySubcategoryTwo: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload?
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/territoryAgeRatings`.
                internal struct territoryAgeRatingsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/territoryAgeRatings/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `territoryAgeRatingsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppInfo/relationships/territoryAgeRatings`.
                internal var territoryAgeRatings: Components.Schemas.AppInfo.relationshipsPayload.territoryAgeRatingsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - ageRatingDeclaration:
                ///   - appInfoLocalizations:
                ///   - primaryCategory:
                ///   - primarySubcategoryOne:
                ///   - primarySubcategoryTwo:
                ///   - secondaryCategory:
                ///   - secondarySubcategoryOne:
                ///   - secondarySubcategoryTwo:
                ///   - territoryAgeRatings:
                internal init(
                    app: Components.Schemas.AppInfo.relationshipsPayload.appPayload? = nil,
                    ageRatingDeclaration: Components.Schemas.AppInfo.relationshipsPayload.ageRatingDeclarationPayload? = nil,
                    appInfoLocalizations: Components.Schemas.AppInfo.relationshipsPayload.appInfoLocalizationsPayload? = nil,
                    primaryCategory: Components.Schemas.AppInfo.relationshipsPayload.primaryCategoryPayload? = nil,
                    primarySubcategoryOne: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryOnePayload? = nil,
                    primarySubcategoryTwo: Components.Schemas.AppInfo.relationshipsPayload.primarySubcategoryTwoPayload? = nil,
                    secondaryCategory: Components.Schemas.AppInfo.relationshipsPayload.secondaryCategoryPayload? = nil,
                    secondarySubcategoryOne: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryOnePayload? = nil,
                    secondarySubcategoryTwo: Components.Schemas.AppInfo.relationshipsPayload.secondarySubcategoryTwoPayload? = nil,
                    territoryAgeRatings: Components.Schemas.AppInfo.relationshipsPayload.territoryAgeRatingsPayload? = nil
                ) {
                    self.app = app
                    self.ageRatingDeclaration = ageRatingDeclaration
                    self.appInfoLocalizations = appInfoLocalizations
                    self.primaryCategory = primaryCategory
                    self.primarySubcategoryOne = primarySubcategoryOne
                    self.primarySubcategoryTwo = primarySubcategoryTwo
                    self.secondaryCategory = secondaryCategory
                    self.secondarySubcategoryOne = secondarySubcategoryOne
                    self.secondarySubcategoryTwo = secondarySubcategoryTwo
                    self.territoryAgeRatings = territoryAgeRatings
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case ageRatingDeclaration
                    case appInfoLocalizations
                    case primaryCategory
                    case primarySubcategoryOne
                    case primarySubcategoryTwo
                    case secondaryCategory
                    case secondarySubcategoryOne
                    case secondarySubcategoryTwo
                    case territoryAgeRatings
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppInfo/relationships`.
            internal var relationships: Components.Schemas.AppInfo.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppInfo/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppInfo`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppInfo._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppInfo.attributesPayload? = nil,
                relationships: Components.Schemas.AppInfo.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2`.
        internal struct AppStoreVersionExperimentV2: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appStoreVersionExperiments = "appStoreVersionExperiments"
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/type`.
            internal var _type: Components.Schemas.AppStoreVersionExperimentV2._typePayload
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/trafficProportion`.
                internal var trafficProportion: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/state`.
                internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case ACCEPTED = "ACCEPTED"
                    case APPROVED = "APPROVED"
                    case REJECTED = "REJECTED"
                    case COMPLETED = "COMPLETED"
                    case STOPPED = "STOPPED"
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/state`.
                internal var state: Components.Schemas.AppStoreVersionExperimentV2.attributesPayload.statePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/reviewRequired`.
                internal var reviewRequired: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/startDate`.
                internal var startDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes/endDate`.
                internal var endDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - platform:
                ///   - trafficProportion:
                ///   - state:
                ///   - reviewRequired:
                ///   - startDate:
                ///   - endDate:
                internal init(
                    name: Swift.String? = nil,
                    platform: Components.Schemas.Platform? = nil,
                    trafficProportion: Swift.Int? = nil,
                    state: Components.Schemas.AppStoreVersionExperimentV2.attributesPayload.statePayload? = nil,
                    reviewRequired: Swift.Bool? = nil,
                    startDate: Foundation.Date? = nil,
                    endDate: Foundation.Date? = nil
                ) {
                    self.name = name
                    self.platform = platform
                    self.trafficProportion = trafficProportion
                    self.state = state
                    self.reviewRequired = reviewRequired
                    self.startDate = startDate
                    self.endDate = endDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case platform
                    case trafficProportion
                    case state
                    case reviewRequired
                    case startDate
                    case endDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/attributes`.
            internal var attributes: Components.Schemas.AppStoreVersionExperimentV2.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app/data`.
                    internal var data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/app`.
                internal var app: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion`.
                internal struct latestControlVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion/data`.
                    internal var data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload.dataPayload?
                    /// Creates a new `latestControlVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/latestControlVersion`.
                internal var latestControlVersion: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions`.
                internal struct controlVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions/data`.
                    internal var data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload.dataPayload?
                    /// Creates a new `controlVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload.dataPayload? = nil
                    ) {
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/controlVersions`.
                internal var controlVersions: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments`.
                internal struct appStoreVersionExperimentTreatmentsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperimentTreatments = "appStoreVersionExperimentTreatments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments/data`.
                    internal var data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentTreatmentsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships/appStoreVersionExperimentTreatments`.
                internal var appStoreVersionExperimentTreatments: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - latestControlVersion:
                ///   - controlVersions:
                ///   - appStoreVersionExperimentTreatments:
                internal init(
                    app: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appPayload? = nil,
                    latestControlVersion: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.latestControlVersionPayload? = nil,
                    controlVersions: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.controlVersionsPayload? = nil,
                    appStoreVersionExperimentTreatments: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload.appStoreVersionExperimentTreatmentsPayload? = nil
                ) {
                    self.app = app
                    self.latestControlVersion = latestControlVersion
                    self.controlVersions = controlVersions
                    self.appStoreVersionExperimentTreatments = appStoreVersionExperimentTreatments
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case latestControlVersion
                    case controlVersions
                    case appStoreVersionExperimentTreatments
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/relationships`.
            internal var relationships: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersionExperimentV2/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppStoreVersionExperimentV2`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppStoreVersionExperimentV2._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppStoreVersionExperimentV2.attributesPayload? = nil,
                relationships: Components.Schemas.AppStoreVersionExperimentV2.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreVersion`.
        internal struct AppStoreVersion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appStoreVersions = "appStoreVersions"
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/type`.
            internal var _type: Components.Schemas.AppStoreVersion._typePayload
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/versionString`.
                internal var versionString: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/appStoreState`.
                internal var appStoreState: Components.Schemas.AppStoreVersionState?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/appVersionState`.
                internal var appVersionState: Components.Schemas.AppVersionState?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/copyright`.
                internal var copyright: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/reviewType`.
                internal enum reviewTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APP_STORE = "APP_STORE"
                    case NOTARIZATION = "NOTARIZATION"
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/reviewType`.
                internal var reviewType: Components.Schemas.AppStoreVersion.attributesPayload.reviewTypePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/releaseType`.
                internal enum releaseTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case MANUAL = "MANUAL"
                    case AFTER_APPROVAL = "AFTER_APPROVAL"
                    case SCHEDULED = "SCHEDULED"
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/releaseType`.
                internal var releaseType: Components.Schemas.AppStoreVersion.attributesPayload.releaseTypePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/earliestReleaseDate`.
                internal var earliestReleaseDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/usesIdfa`.
                @available(*, deprecated)
                internal var usesIdfa: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/downloadable`.
                internal var downloadable: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - platform:
                ///   - versionString:
                ///   - appStoreState:
                ///   - appVersionState:
                ///   - copyright:
                ///   - reviewType:
                ///   - releaseType:
                ///   - earliestReleaseDate:
                ///   - usesIdfa:
                ///   - downloadable:
                ///   - createdDate:
                internal init(
                    platform: Components.Schemas.Platform? = nil,
                    versionString: Swift.String? = nil,
                    appStoreState: Components.Schemas.AppStoreVersionState? = nil,
                    appVersionState: Components.Schemas.AppVersionState? = nil,
                    copyright: Swift.String? = nil,
                    reviewType: Components.Schemas.AppStoreVersion.attributesPayload.reviewTypePayload? = nil,
                    releaseType: Components.Schemas.AppStoreVersion.attributesPayload.releaseTypePayload? = nil,
                    earliestReleaseDate: Foundation.Date? = nil,
                    usesIdfa: Swift.Bool? = nil,
                    downloadable: Swift.Bool? = nil,
                    createdDate: Foundation.Date? = nil
                ) {
                    self.platform = platform
                    self.versionString = versionString
                    self.appStoreState = appStoreState
                    self.appVersionState = appVersionState
                    self.copyright = copyright
                    self.reviewType = reviewType
                    self.releaseType = releaseType
                    self.earliestReleaseDate = earliestReleaseDate
                    self.usesIdfa = usesIdfa
                    self.downloadable = downloadable
                    self.createdDate = createdDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case platform
                    case versionString
                    case appStoreState
                    case appVersionState
                    case copyright
                    case reviewType
                    case releaseType
                    case earliestReleaseDate
                    case usesIdfa
                    case downloadable
                    case createdDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes`.
            internal var attributes: Components.Schemas.AppStoreVersion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app`.
                internal var app: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration`.
                @available(*, deprecated)
                internal struct ageRatingDeclarationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case ageRatingDeclarations = "ageRatingDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload?
                    /// Creates a new `ageRatingDeclarationPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration`.
                @available(*, deprecated)
                internal var ageRatingDeclaration: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations`.
                internal struct appStoreVersionLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayload?
                    /// Creates a new `appStoreVersionLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations`.
                internal var appStoreVersionLocalizations: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build`.
                internal var build: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease`.
                internal struct appStoreVersionPhasedReleasePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionPhasedReleases = "appStoreVersionPhasedReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload?
                    /// Creates a new `appStoreVersionPhasedReleasePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease`.
                internal var appStoreVersionPhasedRelease: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion`.
                internal struct gameCenterAppVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterAppVersions = "gameCenterAppVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload?
                    /// Creates a new `gameCenterAppVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion`.
                internal var gameCenterAppVersion: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage`.
                internal struct routingAppCoveragePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case routingAppCoverages = "routingAppCoverages"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload?
                    /// Creates a new `routingAppCoveragePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage`.
                internal var routingAppCoverage: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail`.
                internal struct appStoreReviewDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreReviewDetails = "appStoreReviewDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload?
                    /// Creates a new `appStoreReviewDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail`.
                internal var appStoreReviewDetail: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission`.
                internal struct appStoreVersionSubmissionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionSubmissions = "appStoreVersionSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload?
                    /// Creates a new `appStoreVersionSubmissionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission`.
                internal var appStoreVersionSubmission: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience`.
                internal struct appClipDefaultExperiencePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClipDefaultExperiences = "appClipDefaultExperiences"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload?
                    /// Creates a new `appClipDefaultExperiencePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience`.
                internal var appClipDefaultExperience: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments`.
                internal struct appStoreVersionExperimentsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments`.
                internal var appStoreVersionExperiments: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2`.
                internal struct appStoreVersionExperimentsV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2`.
                internal var appStoreVersionExperimentsV2: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews`.
                internal struct customerReviewsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews`.
                internal var customerReviews: Components.Schemas.AppStoreVersion.relationshipsPayload.customerReviewsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage`.
                internal struct alternativeDistributionPackagePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case alternativeDistributionPackages = "alternativeDistributionPackages"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload?
                    /// Creates a new `alternativeDistributionPackagePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage`.
                internal var alternativeDistributionPackage: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - ageRatingDeclaration:
                ///   - appStoreVersionLocalizations:
                ///   - build:
                ///   - appStoreVersionPhasedRelease:
                ///   - gameCenterAppVersion:
                ///   - routingAppCoverage:
                ///   - appStoreReviewDetail:
                ///   - appStoreVersionSubmission:
                ///   - appClipDefaultExperience:
                ///   - appStoreVersionExperiments:
                ///   - appStoreVersionExperimentsV2:
                ///   - customerReviews:
                ///   - alternativeDistributionPackage:
                internal init(
                    app: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload? = nil,
                    ageRatingDeclaration: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload? = nil,
                    appStoreVersionLocalizations: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload? = nil,
                    build: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload? = nil,
                    appStoreVersionPhasedRelease: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload? = nil,
                    gameCenterAppVersion: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload? = nil,
                    routingAppCoverage: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload? = nil,
                    appStoreReviewDetail: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload? = nil,
                    appStoreVersionSubmission: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload? = nil,
                    appClipDefaultExperience: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload? = nil,
                    appStoreVersionExperiments: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload? = nil,
                    appStoreVersionExperimentsV2: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload? = nil,
                    customerReviews: Components.Schemas.AppStoreVersion.relationshipsPayload.customerReviewsPayload? = nil,
                    alternativeDistributionPackage: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload? = nil
                ) {
                    self.app = app
                    self.ageRatingDeclaration = ageRatingDeclaration
                    self.appStoreVersionLocalizations = appStoreVersionLocalizations
                    self.build = build
                    self.appStoreVersionPhasedRelease = appStoreVersionPhasedRelease
                    self.gameCenterAppVersion = gameCenterAppVersion
                    self.routingAppCoverage = routingAppCoverage
                    self.appStoreReviewDetail = appStoreReviewDetail
                    self.appStoreVersionSubmission = appStoreVersionSubmission
                    self.appClipDefaultExperience = appClipDefaultExperience
                    self.appStoreVersionExperiments = appStoreVersionExperiments
                    self.appStoreVersionExperimentsV2 = appStoreVersionExperimentsV2
                    self.customerReviews = customerReviews
                    self.alternativeDistributionPackage = alternativeDistributionPackage
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case ageRatingDeclaration
                    case appStoreVersionLocalizations
                    case build
                    case appStoreVersionPhasedRelease
                    case gameCenterAppVersion
                    case routingAppCoverage
                    case appStoreReviewDetail
                    case appStoreVersionSubmission
                    case appClipDefaultExperience
                    case appStoreVersionExperiments
                    case appStoreVersionExperimentsV2
                    case customerReviews
                    case alternativeDistributionPackage
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships`.
            internal var relationships: Components.Schemas.AppStoreVersion.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppStoreVersion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppStoreVersion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppStoreVersion.attributesPayload? = nil,
                relationships: Components.Schemas.AppStoreVersion.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/App`.
        internal struct App: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/App/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case apps = "apps"
            }
            /// - Remark: Generated from `#/components/schemas/App/type`.
            internal var _type: Components.Schemas.App._typePayload
            /// - Remark: Generated from `#/components/schemas/App/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/App/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/App/attributes/accessibilityUrl`.
                internal var accessibilityUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/bundleId`.
                internal var bundleId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/sku`.
                internal var sku: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/primaryLocale`.
                internal var primaryLocale: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/isOrEverWasMadeForKids`.
                internal var isOrEverWasMadeForKids: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrl`.
                internal var subscriptionStatusUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlVersion`.
                internal var subscriptionStatusUrlVersion: Components.Schemas.SubscriptionStatusUrlVersion?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlForSandbox`.
                internal var subscriptionStatusUrlForSandbox: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlVersionForSandbox`.
                internal var subscriptionStatusUrlVersionForSandbox: Components.Schemas.SubscriptionStatusUrlVersion?
                /// - Remark: Generated from `#/components/schemas/App/attributes/contentRightsDeclaration`.
                internal enum contentRightsDeclarationPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case DOES_NOT_USE_THIRD_PARTY_CONTENT = "DOES_NOT_USE_THIRD_PARTY_CONTENT"
                    case USES_THIRD_PARTY_CONTENT = "USES_THIRD_PARTY_CONTENT"
                }
                /// - Remark: Generated from `#/components/schemas/App/attributes/contentRightsDeclaration`.
                internal var contentRightsDeclaration: Components.Schemas.App.attributesPayload.contentRightsDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/App/attributes/streamlinedPurchasingEnabled`.
                internal var streamlinedPurchasingEnabled: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - accessibilityUrl:
                ///   - name:
                ///   - bundleId:
                ///   - sku:
                ///   - primaryLocale:
                ///   - isOrEverWasMadeForKids:
                ///   - subscriptionStatusUrl:
                ///   - subscriptionStatusUrlVersion:
                ///   - subscriptionStatusUrlForSandbox:
                ///   - subscriptionStatusUrlVersionForSandbox:
                ///   - contentRightsDeclaration:
                ///   - streamlinedPurchasingEnabled:
                internal init(
                    accessibilityUrl: Swift.String? = nil,
                    name: Swift.String? = nil,
                    bundleId: Swift.String? = nil,
                    sku: Swift.String? = nil,
                    primaryLocale: Swift.String? = nil,
                    isOrEverWasMadeForKids: Swift.Bool? = nil,
                    subscriptionStatusUrl: Swift.String? = nil,
                    subscriptionStatusUrlVersion: Components.Schemas.SubscriptionStatusUrlVersion? = nil,
                    subscriptionStatusUrlForSandbox: Swift.String? = nil,
                    subscriptionStatusUrlVersionForSandbox: Components.Schemas.SubscriptionStatusUrlVersion? = nil,
                    contentRightsDeclaration: Components.Schemas.App.attributesPayload.contentRightsDeclarationPayload? = nil,
                    streamlinedPurchasingEnabled: Swift.Bool? = nil
                ) {
                    self.accessibilityUrl = accessibilityUrl
                    self.name = name
                    self.bundleId = bundleId
                    self.sku = sku
                    self.primaryLocale = primaryLocale
                    self.isOrEverWasMadeForKids = isOrEverWasMadeForKids
                    self.subscriptionStatusUrl = subscriptionStatusUrl
                    self.subscriptionStatusUrlVersion = subscriptionStatusUrlVersion
                    self.subscriptionStatusUrlForSandbox = subscriptionStatusUrlForSandbox
                    self.subscriptionStatusUrlVersionForSandbox = subscriptionStatusUrlVersionForSandbox
                    self.contentRightsDeclaration = contentRightsDeclaration
                    self.streamlinedPurchasingEnabled = streamlinedPurchasingEnabled
                }
                internal enum CodingKeys: String, CodingKey {
                    case accessibilityUrl
                    case name
                    case bundleId
                    case sku
                    case primaryLocale
                    case isOrEverWasMadeForKids
                    case subscriptionStatusUrl
                    case subscriptionStatusUrlVersion
                    case subscriptionStatusUrlForSandbox
                    case subscriptionStatusUrlVersionForSandbox
                    case contentRightsDeclaration
                    case streamlinedPurchasingEnabled
                }
            }
            /// - Remark: Generated from `#/components/schemas/App/attributes`.
            internal var attributes: Components.Schemas.App.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/App/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations`.
                internal struct accessibilityDeclarationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `accessibilityDeclarationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations`.
                internal var accessibilityDeclarations: Components.Schemas.App.relationshipsPayload.accessibilityDeclarationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations`.
                internal struct appEncryptionDeclarationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarations = "appEncryptionDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations`.
                internal var appEncryptionDeclarations: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct`.
                internal struct ciProductPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case ciProducts = "ciProducts"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload?
                    /// Creates a new `ciProductPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct`.
                internal var ciProduct: Components.Schemas.App.relationshipsPayload.ciProductPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters`.
                internal struct betaTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters`.
                internal var betaTesters: Components.Schemas.App.relationshipsPayload.betaTestersPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups`.
                internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaGroups = "betaGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayload?
                    /// Creates a new `betaGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups`.
                internal var betaGroups: Components.Schemas.App.relationshipsPayload.betaGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions`.
                internal struct appStoreVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayload?
                    /// Creates a new `appStoreVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions`.
                internal var appStoreVersions: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appTags`.
                internal struct appTagsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appTags/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appTagsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appTags`.
                internal var appTags: Components.Schemas.App.relationshipsPayload.appTagsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions`.
                internal struct preReleaseVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case preReleaseVersions = "preReleaseVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayload?
                    /// Creates a new `preReleaseVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions`.
                internal var preReleaseVersions: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations`.
                internal struct betaAppLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppLocalizations = "betaAppLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayload?
                    /// Creates a new `betaAppLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations`.
                internal var betaAppLocalizations: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/builds`.
                internal var builds: Components.Schemas.App.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement`.
                internal struct betaLicenseAgreementPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaLicenseAgreements = "betaLicenseAgreements"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload?
                    /// Creates a new `betaLicenseAgreementPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement`.
                internal var betaLicenseAgreement: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail`.
                internal struct betaAppReviewDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppReviewDetails = "betaAppReviewDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload?
                    /// Creates a new `betaAppReviewDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail`.
                internal var betaAppReviewDetail: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos`.
                internal struct appInfosPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appInfos = "appInfos"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayload?
                    /// Creates a new `appInfosPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos`.
                internal var appInfos: Components.Schemas.App.relationshipsPayload.appInfosPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appClips`.
                internal struct appClipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClips = "appClips"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayload?
                    /// Creates a new `appClipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appClips`.
                internal var appClips: Components.Schemas.App.relationshipsPayload.appClipsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints`.
                internal struct appPricePointsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appPricePointsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints`.
                internal var appPricePoints: Components.Schemas.App.relationshipsPayload.appPricePointsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement`.
                internal struct endUserLicenseAgreementPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case endUserLicenseAgreements = "endUserLicenseAgreements"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload?
                    /// Creates a new `endUserLicenseAgreementPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement`.
                internal var endUserLicenseAgreement: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule`.
                internal struct appPriceSchedulePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appPriceSchedulePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule`.
                internal var appPriceSchedule: Components.Schemas.App.relationshipsPayload.appPriceSchedulePayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2`.
                internal struct appAvailabilityV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appAvailabilityV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2`.
                internal var appAvailabilityV2: Components.Schemas.App.relationshipsPayload.appAvailabilityV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases`.
                @available(*, deprecated)
                internal struct inAppPurchasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case inAppPurchases = "inAppPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayload?
                    /// Creates a new `inAppPurchasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases`.
                @available(*, deprecated)
                internal var inAppPurchases: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups`.
                internal struct subscriptionGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptionGroups = "subscriptionGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayload?
                    /// Creates a new `subscriptionGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups`.
                internal var subscriptionGroups: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions`.
                internal struct gameCenterEnabledVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayload?
                    /// Creates a new `gameCenterEnabledVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions`.
                internal var gameCenterEnabledVersions: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics`.
                internal struct perfPowerMetricsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `perfPowerMetricsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics`.
                internal var perfPowerMetrics: Components.Schemas.App.relationshipsPayload.perfPowerMetricsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages`.
                internal struct appCustomProductPagesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCustomProductPages = "appCustomProductPages"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayload?
                    /// Creates a new `appCustomProductPagesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages`.
                internal var appCustomProductPages: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2`.
                internal struct inAppPurchasesV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case inAppPurchases = "inAppPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayload?
                    /// Creates a new `inAppPurchasesV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2`.
                internal var inAppPurchasesV2: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases`.
                internal struct promotedPurchasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case promotedPurchases = "promotedPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayload?
                    /// Creates a new `promotedPurchasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases`.
                internal var promotedPurchases: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents`.
                internal struct appEventsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEvents = "appEvents"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayload?
                    /// Creates a new `appEventsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents`.
                internal var appEvents: Components.Schemas.App.relationshipsPayload.appEventsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions`.
                internal struct reviewSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case reviewSubmissions = "reviewSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayload?
                    /// Creates a new `reviewSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions`.
                internal var reviewSubmissions: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod`.
                internal struct subscriptionGracePeriodPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptionGracePeriods = "subscriptionGracePeriods"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload?
                    /// Creates a new `subscriptionGracePeriodPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod`.
                internal var subscriptionGracePeriod: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews`.
                internal struct customerReviewsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews`.
                internal var customerReviews: Components.Schemas.App.relationshipsPayload.customerReviewsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations`.
                internal struct customerReviewSummarizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewSummarizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations`.
                internal var customerReviewSummarizations: Components.Schemas.App.relationshipsPayload.customerReviewSummarizationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail`.
                internal struct gameCenterDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterDetails = "gameCenterDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload?
                    /// Creates a new `gameCenterDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail`.
                internal var gameCenterDetail: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2`.
                internal struct appStoreVersionExperimentsV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2`.
                internal var appStoreVersionExperimentsV2: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey`.
                internal struct alternativeDistributionKeyPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `alternativeDistributionKeyPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey`.
                internal var alternativeDistributionKey: Components.Schemas.App.relationshipsPayload.alternativeDistributionKeyPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests`.
                internal struct analyticsReportRequestsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `analyticsReportRequestsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests`.
                internal var analyticsReportRequests: Components.Schemas.App.relationshipsPayload.analyticsReportRequestsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail`.
                internal struct marketplaceSearchDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `marketplaceSearchDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail`.
                internal var marketplaceSearchDetail: Components.Schemas.App.relationshipsPayload.marketplaceSearchDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads`.
                internal struct buildUploadsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `buildUploadsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads`.
                internal var buildUploads: Components.Schemas.App.relationshipsPayload.buildUploadsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets`.
                internal struct backgroundAssetsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `backgroundAssetsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets`.
                internal var backgroundAssets: Components.Schemas.App.relationshipsPayload.backgroundAssetsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions`.
                internal struct betaFeedbackScreenshotSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaFeedbackScreenshotSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions`.
                internal var betaFeedbackScreenshotSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackScreenshotSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions`.
                internal struct betaFeedbackCrashSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaFeedbackCrashSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions`.
                internal var betaFeedbackCrashSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackCrashSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords`.
                internal struct searchKeywordsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `searchKeywordsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords`.
                internal var searchKeywords: Components.Schemas.App.relationshipsPayload.searchKeywordsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks`.
                internal struct webhooksPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `webhooksPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks`.
                internal var webhooks: Components.Schemas.App.relationshipsPayload.webhooksPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - accessibilityDeclarations:
                ///   - appEncryptionDeclarations:
                ///   - ciProduct:
                ///   - betaTesters:
                ///   - betaGroups:
                ///   - appStoreVersions:
                ///   - appTags:
                ///   - preReleaseVersions:
                ///   - betaAppLocalizations:
                ///   - builds:
                ///   - betaLicenseAgreement:
                ///   - betaAppReviewDetail:
                ///   - appInfos:
                ///   - appClips:
                ///   - appPricePoints:
                ///   - endUserLicenseAgreement:
                ///   - appPriceSchedule:
                ///   - appAvailabilityV2:
                ///   - inAppPurchases:
                ///   - subscriptionGroups:
                ///   - gameCenterEnabledVersions:
                ///   - perfPowerMetrics:
                ///   - appCustomProductPages:
                ///   - inAppPurchasesV2:
                ///   - promotedPurchases:
                ///   - appEvents:
                ///   - reviewSubmissions:
                ///   - subscriptionGracePeriod:
                ///   - customerReviews:
                ///   - customerReviewSummarizations:
                ///   - gameCenterDetail:
                ///   - appStoreVersionExperimentsV2:
                ///   - alternativeDistributionKey:
                ///   - analyticsReportRequests:
                ///   - marketplaceSearchDetail:
                ///   - buildUploads:
                ///   - backgroundAssets:
                ///   - betaFeedbackScreenshotSubmissions:
                ///   - betaFeedbackCrashSubmissions:
                ///   - searchKeywords:
                ///   - webhooks:
                internal init(
                    accessibilityDeclarations: Components.Schemas.App.relationshipsPayload.accessibilityDeclarationsPayload? = nil,
                    appEncryptionDeclarations: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload? = nil,
                    ciProduct: Components.Schemas.App.relationshipsPayload.ciProductPayload? = nil,
                    betaTesters: Components.Schemas.App.relationshipsPayload.betaTestersPayload? = nil,
                    betaGroups: Components.Schemas.App.relationshipsPayload.betaGroupsPayload? = nil,
                    appStoreVersions: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload? = nil,
                    appTags: Components.Schemas.App.relationshipsPayload.appTagsPayload? = nil,
                    preReleaseVersions: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload? = nil,
                    betaAppLocalizations: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload? = nil,
                    builds: Components.Schemas.App.relationshipsPayload.buildsPayload? = nil,
                    betaLicenseAgreement: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload? = nil,
                    betaAppReviewDetail: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload? = nil,
                    appInfos: Components.Schemas.App.relationshipsPayload.appInfosPayload? = nil,
                    appClips: Components.Schemas.App.relationshipsPayload.appClipsPayload? = nil,
                    appPricePoints: Components.Schemas.App.relationshipsPayload.appPricePointsPayload? = nil,
                    endUserLicenseAgreement: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload? = nil,
                    appPriceSchedule: Components.Schemas.App.relationshipsPayload.appPriceSchedulePayload? = nil,
                    appAvailabilityV2: Components.Schemas.App.relationshipsPayload.appAvailabilityV2Payload? = nil,
                    inAppPurchases: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload? = nil,
                    subscriptionGroups: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload? = nil,
                    gameCenterEnabledVersions: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload? = nil,
                    perfPowerMetrics: Components.Schemas.App.relationshipsPayload.perfPowerMetricsPayload? = nil,
                    appCustomProductPages: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload? = nil,
                    inAppPurchasesV2: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload? = nil,
                    promotedPurchases: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload? = nil,
                    appEvents: Components.Schemas.App.relationshipsPayload.appEventsPayload? = nil,
                    reviewSubmissions: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload? = nil,
                    subscriptionGracePeriod: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload? = nil,
                    customerReviews: Components.Schemas.App.relationshipsPayload.customerReviewsPayload? = nil,
                    customerReviewSummarizations: Components.Schemas.App.relationshipsPayload.customerReviewSummarizationsPayload? = nil,
                    gameCenterDetail: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload? = nil,
                    appStoreVersionExperimentsV2: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload? = nil,
                    alternativeDistributionKey: Components.Schemas.App.relationshipsPayload.alternativeDistributionKeyPayload? = nil,
                    analyticsReportRequests: Components.Schemas.App.relationshipsPayload.analyticsReportRequestsPayload? = nil,
                    marketplaceSearchDetail: Components.Schemas.App.relationshipsPayload.marketplaceSearchDetailPayload? = nil,
                    buildUploads: Components.Schemas.App.relationshipsPayload.buildUploadsPayload? = nil,
                    backgroundAssets: Components.Schemas.App.relationshipsPayload.backgroundAssetsPayload? = nil,
                    betaFeedbackScreenshotSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackScreenshotSubmissionsPayload? = nil,
                    betaFeedbackCrashSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackCrashSubmissionsPayload? = nil,
                    searchKeywords: Components.Schemas.App.relationshipsPayload.searchKeywordsPayload? = nil,
                    webhooks: Components.Schemas.App.relationshipsPayload.webhooksPayload? = nil
                ) {
                    self.accessibilityDeclarations = accessibilityDeclarations
                    self.appEncryptionDeclarations = appEncryptionDeclarations
                    self.ciProduct = ciProduct
                    self.betaTesters = betaTesters
                    self.betaGroups = betaGroups
                    self.appStoreVersions = appStoreVersions
                    self.appTags = appTags
                    self.preReleaseVersions = preReleaseVersions
                    self.betaAppLocalizations = betaAppLocalizations
                    self.builds = builds
                    self.betaLicenseAgreement = betaLicenseAgreement
                    self.betaAppReviewDetail = betaAppReviewDetail
                    self.appInfos = appInfos
                    self.appClips = appClips
                    self.appPricePoints = appPricePoints
                    self.endUserLicenseAgreement = endUserLicenseAgreement
                    self.appPriceSchedule = appPriceSchedule
                    self.appAvailabilityV2 = appAvailabilityV2
                    self.inAppPurchases = inAppPurchases
                    self.subscriptionGroups = subscriptionGroups
                    self.gameCenterEnabledVersions = gameCenterEnabledVersions
                    self.perfPowerMetrics = perfPowerMetrics
                    self.appCustomProductPages = appCustomProductPages
                    self.inAppPurchasesV2 = inAppPurchasesV2
                    self.promotedPurchases = promotedPurchases
                    self.appEvents = appEvents
                    self.reviewSubmissions = reviewSubmissions
                    self.subscriptionGracePeriod = subscriptionGracePeriod
                    self.customerReviews = customerReviews
                    self.customerReviewSummarizations = customerReviewSummarizations
                    self.gameCenterDetail = gameCenterDetail
                    self.appStoreVersionExperimentsV2 = appStoreVersionExperimentsV2
                    self.alternativeDistributionKey = alternativeDistributionKey
                    self.analyticsReportRequests = analyticsReportRequests
                    self.marketplaceSearchDetail = marketplaceSearchDetail
                    self.buildUploads = buildUploads
                    self.backgroundAssets = backgroundAssets
                    self.betaFeedbackScreenshotSubmissions = betaFeedbackScreenshotSubmissions
                    self.betaFeedbackCrashSubmissions = betaFeedbackCrashSubmissions
                    self.searchKeywords = searchKeywords
                    self.webhooks = webhooks
                }
                internal enum CodingKeys: String, CodingKey {
                    case accessibilityDeclarations
                    case appEncryptionDeclarations
                    case ciProduct
                    case betaTesters
                    case betaGroups
                    case appStoreVersions
                    case appTags
                    case preReleaseVersions
                    case betaAppLocalizations
                    case builds
                    case betaLicenseAgreement
                    case betaAppReviewDetail
                    case appInfos
                    case appClips
                    case appPricePoints
                    case endUserLicenseAgreement
                    case appPriceSchedule
                    case appAvailabilityV2
                    case inAppPurchases
                    case subscriptionGroups
                    case gameCenterEnabledVersions
                    case perfPowerMetrics
                    case appCustomProductPages
                    case inAppPurchasesV2
                    case promotedPurchases
                    case appEvents
                    case reviewSubmissions
                    case subscriptionGracePeriod
                    case customerReviews
                    case customerReviewSummarizations
                    case gameCenterDetail
                    case appStoreVersionExperimentsV2
                    case alternativeDistributionKey
                    case analyticsReportRequests
                    case marketplaceSearchDetail
                    case buildUploads
                    case backgroundAssets
                    case betaFeedbackScreenshotSubmissions
                    case betaFeedbackCrashSubmissions
                    case searchKeywords
                    case webhooks
                }
            }
            /// - Remark: Generated from `#/components/schemas/App/relationships`.
            internal var relationships: Components.Schemas.App.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/App/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `App`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.App._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.App.attributesPayload? = nil,
                relationships: Components.Schemas.App.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppsResponse`.
        internal struct AppsResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppsResponse/data`.
            internal var data: [Components.Schemas.App]
            /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppClip`.
                case appClips(Components.Schemas.AppClip)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppCustomProductPage`.
                case appCustomProductPages(Components.Schemas.AppCustomProductPage)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppEncryptionDeclaration`.
                case appEncryptionDeclarations(Components.Schemas.AppEncryptionDeclaration)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppEvent`.
                case appEvents(Components.Schemas.AppEvent)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppInfo`.
                case appInfos(Components.Schemas.AppInfo)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppStoreVersionExperimentV2`.
                case appStoreVersionExperiments(Components.Schemas.AppStoreVersionExperimentV2)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/AppStoreVersion`.
                case appStoreVersions(Components.Schemas.AppStoreVersion)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/BetaAppLocalization`.
                case betaAppLocalizations(Components.Schemas.BetaAppLocalization)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/BetaAppReviewDetail`.
                case betaAppReviewDetails(Components.Schemas.BetaAppReviewDetail)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/BetaGroup`.
                case betaGroups(Components.Schemas.BetaGroup)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/BetaLicenseAgreement`.
                case betaLicenseAgreements(Components.Schemas.BetaLicenseAgreement)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/CiProduct`.
                case ciProducts(Components.Schemas.CiProduct)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/EndUserLicenseAgreement`.
                case endUserLicenseAgreements(Components.Schemas.EndUserLicenseAgreement)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/GameCenterDetail`.
                case gameCenterDetails(Components.Schemas.GameCenterDetail)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/GameCenterEnabledVersion`.
                case gameCenterEnabledVersions(Components.Schemas.GameCenterEnabledVersion)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/InAppPurchase`.
                case inAppPurchases(Components.Schemas.InAppPurchase)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/PrereleaseVersion`.
                case preReleaseVersions(Components.Schemas.PrereleaseVersion)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/PromotedPurchase`.
                case promotedPurchases(Components.Schemas.PromotedPurchase)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/ReviewSubmission`.
                case reviewSubmissions(Components.Schemas.ReviewSubmission)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/SubscriptionGracePeriod`.
                case subscriptionGracePeriods(Components.Schemas.SubscriptionGracePeriod)
                /// - Remark: Generated from `#/components/schemas/AppsResponse/includedPayload/SubscriptionGroup`.
                case subscriptionGroups(Components.Schemas.SubscriptionGroup)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "appClips":
                        self = .appClips(try .init(from: decoder))
                    case "appCustomProductPages":
                        self = .appCustomProductPages(try .init(from: decoder))
                    case "appEncryptionDeclarations":
                        self = .appEncryptionDeclarations(try .init(from: decoder))
                    case "appEvents":
                        self = .appEvents(try .init(from: decoder))
                    case "appInfos":
                        self = .appInfos(try .init(from: decoder))
                    case "appStoreVersionExperiments":
                        self = .appStoreVersionExperiments(try .init(from: decoder))
                    case "appStoreVersions":
                        self = .appStoreVersions(try .init(from: decoder))
                    case "betaAppLocalizations":
                        self = .betaAppLocalizations(try .init(from: decoder))
                    case "betaAppReviewDetails":
                        self = .betaAppReviewDetails(try .init(from: decoder))
                    case "betaGroups":
                        self = .betaGroups(try .init(from: decoder))
                    case "betaLicenseAgreements":
                        self = .betaLicenseAgreements(try .init(from: decoder))
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    case "ciProducts":
                        self = .ciProducts(try .init(from: decoder))
                    case "endUserLicenseAgreements":
                        self = .endUserLicenseAgreements(try .init(from: decoder))
                    case "gameCenterDetails":
                        self = .gameCenterDetails(try .init(from: decoder))
                    case "gameCenterEnabledVersions":
                        self = .gameCenterEnabledVersions(try .init(from: decoder))
                    case "inAppPurchases":
                        self = .inAppPurchases(try .init(from: decoder))
                    case "preReleaseVersions":
                        self = .preReleaseVersions(try .init(from: decoder))
                    case "promotedPurchases":
                        self = .promotedPurchases(try .init(from: decoder))
                    case "reviewSubmissions":
                        self = .reviewSubmissions(try .init(from: decoder))
                    case "subscriptionGracePeriods":
                        self = .subscriptionGracePeriods(try .init(from: decoder))
                    case "subscriptionGroups":
                        self = .subscriptionGroups(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .appClips(value):
                        try value.encode(to: encoder)
                    case let .appCustomProductPages(value):
                        try value.encode(to: encoder)
                    case let .appEncryptionDeclarations(value):
                        try value.encode(to: encoder)
                    case let .appEvents(value):
                        try value.encode(to: encoder)
                    case let .appInfos(value):
                        try value.encode(to: encoder)
                    case let .appStoreVersionExperiments(value):
                        try value.encode(to: encoder)
                    case let .appStoreVersions(value):
                        try value.encode(to: encoder)
                    case let .betaAppLocalizations(value):
                        try value.encode(to: encoder)
                    case let .betaAppReviewDetails(value):
                        try value.encode(to: encoder)
                    case let .betaGroups(value):
                        try value.encode(to: encoder)
                    case let .betaLicenseAgreements(value):
                        try value.encode(to: encoder)
                    case let .builds(value):
                        try value.encode(to: encoder)
                    case let .ciProducts(value):
                        try value.encode(to: encoder)
                    case let .endUserLicenseAgreements(value):
                        try value.encode(to: encoder)
                    case let .gameCenterDetails(value):
                        try value.encode(to: encoder)
                    case let .gameCenterEnabledVersions(value):
                        try value.encode(to: encoder)
                    case let .inAppPurchases(value):
                        try value.encode(to: encoder)
                    case let .preReleaseVersions(value):
                        try value.encode(to: encoder)
                    case let .promotedPurchases(value):
                        try value.encode(to: encoder)
                    case let .reviewSubmissions(value):
                        try value.encode(to: encoder)
                    case let .subscriptionGracePeriods(value):
                        try value.encode(to: encoder)
                    case let .subscriptionGroups(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppsResponse/included`.
            internal typealias includedPayload = [Components.Schemas.AppsResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/AppsResponse/included`.
            internal var included: Components.Schemas.AppsResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/AppsResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/AppsResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `AppsResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.App],
                included: Components.Schemas.AppsResponse.includedPayload? = nil,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.included = included
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaAppLocalization`.
        internal struct BetaAppLocalization: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaAppLocalizations = "betaAppLocalizations"
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/type`.
            internal var _type: Components.Schemas.BetaAppLocalization._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/feedbackEmail`.
                internal var feedbackEmail: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/marketingUrl`.
                internal var marketingUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/privacyPolicyUrl`.
                internal var privacyPolicyUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/tvOsPrivacyPolicy`.
                internal var tvOsPrivacyPolicy: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/description`.
                internal var description: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes/locale`.
                internal var locale: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - feedbackEmail:
                ///   - marketingUrl:
                ///   - privacyPolicyUrl:
                ///   - tvOsPrivacyPolicy:
                ///   - description:
                ///   - locale:
                internal init(
                    feedbackEmail: Swift.String? = nil,
                    marketingUrl: Swift.String? = nil,
                    privacyPolicyUrl: Swift.String? = nil,
                    tvOsPrivacyPolicy: Swift.String? = nil,
                    description: Swift.String? = nil,
                    locale: Swift.String? = nil
                ) {
                    self.feedbackEmail = feedbackEmail
                    self.marketingUrl = marketingUrl
                    self.privacyPolicyUrl = privacyPolicyUrl
                    self.tvOsPrivacyPolicy = tvOsPrivacyPolicy
                    self.description = description
                    self.locale = locale
                }
                internal enum CodingKeys: String, CodingKey {
                    case feedbackEmail
                    case marketingUrl
                    case privacyPolicyUrl
                    case tvOsPrivacyPolicy
                    case description
                    case locale
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/attributes`.
            internal var attributes: Components.Schemas.BetaAppLocalization.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app/data`.
                    internal var data: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships/app`.
                internal var app: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                internal init(app: Components.Schemas.BetaAppLocalization.relationshipsPayload.appPayload? = nil) {
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/relationships`.
            internal var relationships: Components.Schemas.BetaAppLocalization.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppLocalization/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaAppLocalization`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaAppLocalization._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaAppLocalization.attributesPayload? = nil,
                relationships: Components.Schemas.BetaAppLocalization.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail`.
        internal struct BetaAppReviewDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaAppReviewDetails = "betaAppReviewDetails"
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/type`.
            internal var _type: Components.Schemas.BetaAppReviewDetail._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/contactFirstName`.
                internal var contactFirstName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/contactLastName`.
                internal var contactLastName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/contactPhone`.
                internal var contactPhone: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/contactEmail`.
                internal var contactEmail: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/demoAccountName`.
                internal var demoAccountName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/demoAccountPassword`.
                internal var demoAccountPassword: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/demoAccountRequired`.
                internal var demoAccountRequired: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes/notes`.
                internal var notes: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - contactFirstName:
                ///   - contactLastName:
                ///   - contactPhone:
                ///   - contactEmail:
                ///   - demoAccountName:
                ///   - demoAccountPassword:
                ///   - demoAccountRequired:
                ///   - notes:
                internal init(
                    contactFirstName: Swift.String? = nil,
                    contactLastName: Swift.String? = nil,
                    contactPhone: Swift.String? = nil,
                    contactEmail: Swift.String? = nil,
                    demoAccountName: Swift.String? = nil,
                    demoAccountPassword: Swift.String? = nil,
                    demoAccountRequired: Swift.Bool? = nil,
                    notes: Swift.String? = nil
                ) {
                    self.contactFirstName = contactFirstName
                    self.contactLastName = contactLastName
                    self.contactPhone = contactPhone
                    self.contactEmail = contactEmail
                    self.demoAccountName = demoAccountName
                    self.demoAccountPassword = demoAccountPassword
                    self.demoAccountRequired = demoAccountRequired
                    self.notes = notes
                }
                internal enum CodingKeys: String, CodingKey {
                    case contactFirstName
                    case contactLastName
                    case contactPhone
                    case contactEmail
                    case demoAccountName
                    case demoAccountPassword
                    case demoAccountRequired
                    case notes
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/attributes`.
            internal var attributes: Components.Schemas.BetaAppReviewDetail.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app/data`.
                    internal var data: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships/app`.
                internal var app: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                internal init(app: Components.Schemas.BetaAppReviewDetail.relationshipsPayload.appPayload? = nil) {
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/relationships`.
            internal var relationships: Components.Schemas.BetaAppReviewDetail.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewDetail/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaAppReviewDetail`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaAppReviewDetail._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaAppReviewDetail.attributesPayload? = nil,
                relationships: Components.Schemas.BetaAppReviewDetail.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroup`.
        internal struct BetaGroup: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroup/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaGroups = "betaGroups"
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/type`.
            internal var _type: Components.Schemas.BetaGroup._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaGroup/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/isInternalGroup`.
                internal var isInternalGroup: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/hasAccessToAllBuilds`.
                internal var hasAccessToAllBuilds: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkEnabled`.
                internal var publicLinkEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkId`.
                internal var publicLinkId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkLimitEnabled`.
                internal var publicLinkLimitEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkLimit`.
                internal var publicLinkLimit: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLink`.
                internal var publicLink: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/feedbackEnabled`.
                internal var feedbackEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/iosBuildsAvailableForAppleSiliconMac`.
                internal var iosBuildsAvailableForAppleSiliconMac: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/iosBuildsAvailableForAppleVision`.
                internal var iosBuildsAvailableForAppleVision: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - createdDate:
                ///   - isInternalGroup:
                ///   - hasAccessToAllBuilds:
                ///   - publicLinkEnabled:
                ///   - publicLinkId:
                ///   - publicLinkLimitEnabled:
                ///   - publicLinkLimit:
                ///   - publicLink:
                ///   - feedbackEnabled:
                ///   - iosBuildsAvailableForAppleSiliconMac:
                ///   - iosBuildsAvailableForAppleVision:
                internal init(
                    name: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    isInternalGroup: Swift.Bool? = nil,
                    hasAccessToAllBuilds: Swift.Bool? = nil,
                    publicLinkEnabled: Swift.Bool? = nil,
                    publicLinkId: Swift.String? = nil,
                    publicLinkLimitEnabled: Swift.Bool? = nil,
                    publicLinkLimit: Swift.Int? = nil,
                    publicLink: Swift.String? = nil,
                    feedbackEnabled: Swift.Bool? = nil,
                    iosBuildsAvailableForAppleSiliconMac: Swift.Bool? = nil,
                    iosBuildsAvailableForAppleVision: Swift.Bool? = nil
                ) {
                    self.name = name
                    self.createdDate = createdDate
                    self.isInternalGroup = isInternalGroup
                    self.hasAccessToAllBuilds = hasAccessToAllBuilds
                    self.publicLinkEnabled = publicLinkEnabled
                    self.publicLinkId = publicLinkId
                    self.publicLinkLimitEnabled = publicLinkLimitEnabled
                    self.publicLinkLimit = publicLinkLimit
                    self.publicLink = publicLink
                    self.feedbackEnabled = feedbackEnabled
                    self.iosBuildsAvailableForAppleSiliconMac = iosBuildsAvailableForAppleSiliconMac
                    self.iosBuildsAvailableForAppleVision = iosBuildsAvailableForAppleVision
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case createdDate
                    case isInternalGroup
                    case hasAccessToAllBuilds
                    case publicLinkEnabled
                    case publicLinkId
                    case publicLinkLimitEnabled
                    case publicLinkLimit
                    case publicLink
                    case feedbackEnabled
                    case iosBuildsAvailableForAppleSiliconMac
                    case iosBuildsAvailableForAppleVision
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes`.
            internal var attributes: Components.Schemas.BetaGroup.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app`.
                internal var app: Components.Schemas.BetaGroup.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds`.
                internal var builds: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters`.
                internal struct betaTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaTesters = "betaTesters"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayload?
                    /// Creates a new `betaTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters`.
                internal var betaTesters: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria`.
                internal struct betaRecruitmentCriteriaPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload?
                    /// Creates a new `betaRecruitmentCriteriaPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria`.
                internal var betaRecruitmentCriteria: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck`.
                internal struct betaRecruitmentCriterionCompatibleBuildCheckPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaRecruitmentCriterionCompatibleBuildCheckPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck`.
                internal var betaRecruitmentCriterionCompatibleBuildCheck: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriterionCompatibleBuildCheckPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - builds:
                ///   - betaTesters:
                ///   - betaRecruitmentCriteria:
                ///   - betaRecruitmentCriterionCompatibleBuildCheck:
                internal init(
                    app: Components.Schemas.BetaGroup.relationshipsPayload.appPayload? = nil,
                    builds: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload? = nil,
                    betaTesters: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload? = nil,
                    betaRecruitmentCriteria: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload? = nil,
                    betaRecruitmentCriterionCompatibleBuildCheck: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriterionCompatibleBuildCheckPayload? = nil
                ) {
                    self.app = app
                    self.builds = builds
                    self.betaTesters = betaTesters
                    self.betaRecruitmentCriteria = betaRecruitmentCriteria
                    self.betaRecruitmentCriterionCompatibleBuildCheck = betaRecruitmentCriterionCompatibleBuildCheck
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case builds
                    case betaTesters
                    case betaRecruitmentCriteria
                    case betaRecruitmentCriterionCompatibleBuildCheck
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships`.
            internal var relationships: Components.Schemas.BetaGroup.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroup/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaGroup`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaGroup._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaGroup.attributesPayload? = nil,
                relationships: Components.Schemas.BetaGroup.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement`.
        internal struct BetaLicenseAgreement: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaLicenseAgreements = "betaLicenseAgreements"
            }
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/type`.
            internal var _type: Components.Schemas.BetaLicenseAgreement._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/attributes/agreementText`.
                internal var agreementText: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - agreementText:
                internal init(agreementText: Swift.String? = nil) {
                    self.agreementText = agreementText
                }
                internal enum CodingKeys: String, CodingKey {
                    case agreementText
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/attributes`.
            internal var attributes: Components.Schemas.BetaLicenseAgreement.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app/data`.
                    internal var data: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships/app`.
                internal var app: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                internal init(app: Components.Schemas.BetaLicenseAgreement.relationshipsPayload.appPayload? = nil) {
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/relationships`.
            internal var relationships: Components.Schemas.BetaLicenseAgreement.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaLicenseAgreement/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaLicenseAgreement`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaLicenseAgreement._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaLicenseAgreement.attributesPayload? = nil,
                relationships: Components.Schemas.BetaLicenseAgreement.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/Build`.
        internal struct Build: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Build/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case builds = "builds"
            }
            /// - Remark: Generated from `#/components/schemas/Build/type`.
            internal var _type: Components.Schemas.Build._typePayload
            /// - Remark: Generated from `#/components/schemas/Build/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Build/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Build/attributes/version`.
                internal var version: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/uploadedDate`.
                internal var uploadedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/expirationDate`.
                internal var expirationDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/expired`.
                internal var expired: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/minOsVersion`.
                internal var minOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/lsMinimumSystemVersion`.
                internal var lsMinimumSystemVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/computedMinMacOsVersion`.
                internal var computedMinMacOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/computedMinVisionOsVersion`.
                internal var computedMinVisionOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/iconAssetToken`.
                internal var iconAssetToken: Components.Schemas.ImageAsset?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/processingState`.
                internal enum processingStatePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case PROCESSING = "PROCESSING"
                    case FAILED = "FAILED"
                    case INVALID = "INVALID"
                    case VALID = "VALID"
                }
                /// - Remark: Generated from `#/components/schemas/Build/attributes/processingState`.
                internal var processingState: Components.Schemas.Build.attributesPayload.processingStatePayload?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/buildAudienceType`.
                internal var buildAudienceType: Components.Schemas.BuildAudienceType?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/usesNonExemptEncryption`.
                internal var usesNonExemptEncryption: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - version:
                ///   - uploadedDate:
                ///   - expirationDate:
                ///   - expired:
                ///   - minOsVersion:
                ///   - lsMinimumSystemVersion:
                ///   - computedMinMacOsVersion:
                ///   - computedMinVisionOsVersion:
                ///   - iconAssetToken:
                ///   - processingState:
                ///   - buildAudienceType:
                ///   - usesNonExemptEncryption:
                internal init(
                    version: Swift.String? = nil,
                    uploadedDate: Foundation.Date? = nil,
                    expirationDate: Foundation.Date? = nil,
                    expired: Swift.Bool? = nil,
                    minOsVersion: Swift.String? = nil,
                    lsMinimumSystemVersion: Swift.String? = nil,
                    computedMinMacOsVersion: Swift.String? = nil,
                    computedMinVisionOsVersion: Swift.String? = nil,
                    iconAssetToken: Components.Schemas.ImageAsset? = nil,
                    processingState: Components.Schemas.Build.attributesPayload.processingStatePayload? = nil,
                    buildAudienceType: Components.Schemas.BuildAudienceType? = nil,
                    usesNonExemptEncryption: Swift.Bool? = nil
                ) {
                    self.version = version
                    self.uploadedDate = uploadedDate
                    self.expirationDate = expirationDate
                    self.expired = expired
                    self.minOsVersion = minOsVersion
                    self.lsMinimumSystemVersion = lsMinimumSystemVersion
                    self.computedMinMacOsVersion = computedMinMacOsVersion
                    self.computedMinVisionOsVersion = computedMinVisionOsVersion
                    self.iconAssetToken = iconAssetToken
                    self.processingState = processingState
                    self.buildAudienceType = buildAudienceType
                    self.usesNonExemptEncryption = usesNonExemptEncryption
                }
                internal enum CodingKeys: String, CodingKey {
                    case version
                    case uploadedDate
                    case expirationDate
                    case expired
                    case minOsVersion
                    case lsMinimumSystemVersion
                    case computedMinMacOsVersion
                    case computedMinVisionOsVersion
                    case iconAssetToken
                    case processingState
                    case buildAudienceType
                    case usesNonExemptEncryption
                }
            }
            /// - Remark: Generated from `#/components/schemas/Build/attributes`.
            internal var attributes: Components.Schemas.Build.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/Build/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion`.
                internal struct preReleaseVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case preReleaseVersions = "preReleaseVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload?
                    /// Creates a new `preReleaseVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion`.
                internal var preReleaseVersion: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters`.
                internal struct individualTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaTesters = "betaTesters"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayload?
                    /// Creates a new `individualTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters`.
                internal var individualTesters: Components.Schemas.Build.relationshipsPayload.individualTestersPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups`.
                internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaGroups = "betaGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayload?
                    /// Creates a new `betaGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups`.
                internal var betaGroups: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations`.
                internal struct betaBuildLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaBuildLocalizations = "betaBuildLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayload?
                    /// Creates a new `betaBuildLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations`.
                internal var betaBuildLocalizations: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration`.
                internal struct appEncryptionDeclarationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarations = "appEncryptionDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration`.
                internal var appEncryptionDeclaration: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission`.
                internal struct betaAppReviewSubmissionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppReviewSubmissions = "betaAppReviewSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload?
                    /// Creates a new `betaAppReviewSubmissionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission`.
                internal var betaAppReviewSubmission: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/app`.
                internal var app: Components.Schemas.Build.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail`.
                internal struct buildBetaDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildBetaDetails = "buildBetaDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload?
                    /// Creates a new `buildBetaDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail`.
                internal var buildBetaDetail: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion`.
                internal struct appStoreVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload?
                    /// Creates a new `appStoreVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion`.
                internal var appStoreVersion: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/icons`.
                internal struct iconsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildIcons = "buildIcons"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayload?
                    /// Creates a new `iconsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/icons`.
                internal var icons: Components.Schemas.Build.relationshipsPayload.iconsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles`.
                internal struct buildBundlesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildBundles = "buildBundles"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayload?
                    /// Creates a new `buildBundlesPayload`.
                    ///
                    /// - Parameters:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayload? = nil
                    ) {
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles`.
                internal var buildBundles: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload`.
                internal struct buildUploadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildUploads = "buildUploads"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload?
                    /// Creates a new `buildUploadPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload`.
                internal var buildUpload: Components.Schemas.Build.relationshipsPayload.buildUploadPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics`.
                internal struct perfPowerMetricsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `perfPowerMetricsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics`.
                internal var perfPowerMetrics: Components.Schemas.Build.relationshipsPayload.perfPowerMetricsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures`.
                internal struct diagnosticSignaturesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `diagnosticSignaturesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures`.
                internal var diagnosticSignatures: Components.Schemas.Build.relationshipsPayload.diagnosticSignaturesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - preReleaseVersion:
                ///   - individualTesters:
                ///   - betaGroups:
                ///   - betaBuildLocalizations:
                ///   - appEncryptionDeclaration:
                ///   - betaAppReviewSubmission:
                ///   - app:
                ///   - buildBetaDetail:
                ///   - appStoreVersion:
                ///   - icons:
                ///   - buildBundles:
                ///   - buildUpload:
                ///   - perfPowerMetrics:
                ///   - diagnosticSignatures:
                internal init(
                    preReleaseVersion: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload? = nil,
                    individualTesters: Components.Schemas.Build.relationshipsPayload.individualTestersPayload? = nil,
                    betaGroups: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload? = nil,
                    betaBuildLocalizations: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload? = nil,
                    appEncryptionDeclaration: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload? = nil,
                    betaAppReviewSubmission: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload? = nil,
                    app: Components.Schemas.Build.relationshipsPayload.appPayload? = nil,
                    buildBetaDetail: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload? = nil,
                    appStoreVersion: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload? = nil,
                    icons: Components.Schemas.Build.relationshipsPayload.iconsPayload? = nil,
                    buildBundles: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload? = nil,
                    buildUpload: Components.Schemas.Build.relationshipsPayload.buildUploadPayload? = nil,
                    perfPowerMetrics: Components.Schemas.Build.relationshipsPayload.perfPowerMetricsPayload? = nil,
                    diagnosticSignatures: Components.Schemas.Build.relationshipsPayload.diagnosticSignaturesPayload? = nil
                ) {
                    self.preReleaseVersion = preReleaseVersion
                    self.individualTesters = individualTesters
                    self.betaGroups = betaGroups
                    self.betaBuildLocalizations = betaBuildLocalizations
                    self.appEncryptionDeclaration = appEncryptionDeclaration
                    self.betaAppReviewSubmission = betaAppReviewSubmission
                    self.app = app
                    self.buildBetaDetail = buildBetaDetail
                    self.appStoreVersion = appStoreVersion
                    self.icons = icons
                    self.buildBundles = buildBundles
                    self.buildUpload = buildUpload
                    self.perfPowerMetrics = perfPowerMetrics
                    self.diagnosticSignatures = diagnosticSignatures
                }
                internal enum CodingKeys: String, CodingKey {
                    case preReleaseVersion
                    case individualTesters
                    case betaGroups
                    case betaBuildLocalizations
                    case appEncryptionDeclaration
                    case betaAppReviewSubmission
                    case app
                    case buildBetaDetail
                    case appStoreVersion
                    case icons
                    case buildBundles
                    case buildUpload
                    case perfPowerMetrics
                    case diagnosticSignatures
                }
            }
            /// - Remark: Generated from `#/components/schemas/Build/relationships`.
            internal var relationships: Components.Schemas.Build.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/Build/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `Build`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.Build._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.Build.attributesPayload? = nil,
                relationships: Components.Schemas.Build.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/CiProduct`.
        internal struct CiProduct: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CiProduct/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case ciProducts = "ciProducts"
            }
            /// - Remark: Generated from `#/components/schemas/CiProduct/type`.
            internal var _type: Components.Schemas.CiProduct._typePayload
            /// - Remark: Generated from `#/components/schemas/CiProduct/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/CiProduct/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CiProduct/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/CiProduct/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/CiProduct/attributes/productType`.
                internal enum productTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APP = "APP"
                    case FRAMEWORK = "FRAMEWORK"
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/attributes/productType`.
                internal var productType: Components.Schemas.CiProduct.attributesPayload.productTypePayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - createdDate:
                ///   - productType:
                internal init(
                    name: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    productType: Components.Schemas.CiProduct.attributesPayload.productTypePayload? = nil
                ) {
                    self.name = name
                    self.createdDate = createdDate
                    self.productType = productType
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case createdDate
                    case productType
                }
            }
            /// - Remark: Generated from `#/components/schemas/CiProduct/attributes`.
            internal var attributes: Components.Schemas.CiProduct.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/CiProduct/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/data/type`.
                        internal var _type: Components.Schemas.CiProduct.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.CiProduct.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app/data`.
                    internal var data: Components.Schemas.CiProduct.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.CiProduct.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/app`.
                internal var app: Components.Schemas.CiProduct.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId`.
                internal struct bundleIdPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case bundleIds = "bundleIds"
                        }
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId/data/type`.
                        internal var _type: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId/data`.
                    internal var data: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload.dataPayload?
                    /// Creates a new `bundleIdPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/bundleId`.
                internal var bundleId: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload?
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/workflows`.
                internal struct workflowsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/workflows/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `workflowsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/workflows`.
                internal var workflows: Components.Schemas.CiProduct.relationshipsPayload.workflowsPayload?
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories`.
                internal struct primaryRepositoriesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case scmRepositories = "scmRepositories"
                        }
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/dataPayload/type`.
                        internal var _type: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/data`.
                    internal typealias dataPayload = [Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories/data`.
                    internal var data: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload.dataPayload?
                    /// Creates a new `primaryRepositoriesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/primaryRepositories`.
                internal var primaryRepositories: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload?
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/additionalRepositories`.
                internal struct additionalRepositoriesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/additionalRepositories/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `additionalRepositoriesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/additionalRepositories`.
                internal var additionalRepositories: Components.Schemas.CiProduct.relationshipsPayload.additionalRepositoriesPayload?
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/buildRuns`.
                internal struct buildRunsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/buildRuns/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `buildRunsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/CiProduct/relationships/buildRuns`.
                internal var buildRuns: Components.Schemas.CiProduct.relationshipsPayload.buildRunsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - bundleId:
                ///   - workflows:
                ///   - primaryRepositories:
                ///   - additionalRepositories:
                ///   - buildRuns:
                internal init(
                    app: Components.Schemas.CiProduct.relationshipsPayload.appPayload? = nil,
                    bundleId: Components.Schemas.CiProduct.relationshipsPayload.bundleIdPayload? = nil,
                    workflows: Components.Schemas.CiProduct.relationshipsPayload.workflowsPayload? = nil,
                    primaryRepositories: Components.Schemas.CiProduct.relationshipsPayload.primaryRepositoriesPayload? = nil,
                    additionalRepositories: Components.Schemas.CiProduct.relationshipsPayload.additionalRepositoriesPayload? = nil,
                    buildRuns: Components.Schemas.CiProduct.relationshipsPayload.buildRunsPayload? = nil
                ) {
                    self.app = app
                    self.bundleId = bundleId
                    self.workflows = workflows
                    self.primaryRepositories = primaryRepositories
                    self.additionalRepositories = additionalRepositories
                    self.buildRuns = buildRuns
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case bundleId
                    case workflows
                    case primaryRepositories
                    case additionalRepositories
                    case buildRuns
                }
            }
            /// - Remark: Generated from `#/components/schemas/CiProduct/relationships`.
            internal var relationships: Components.Schemas.CiProduct.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/CiProduct/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `CiProduct`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.CiProduct._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.CiProduct.attributesPayload? = nil,
                relationships: Components.Schemas.CiProduct.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement`.
        internal struct EndUserLicenseAgreement: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case endUserLicenseAgreements = "endUserLicenseAgreements"
            }
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/type`.
            internal var _type: Components.Schemas.EndUserLicenseAgreement._typePayload
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/attributes/agreementText`.
                internal var agreementText: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - agreementText:
                internal init(agreementText: Swift.String? = nil) {
                    self.agreementText = agreementText
                }
                internal enum CodingKeys: String, CodingKey {
                    case agreementText
                }
            }
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/attributes`.
            internal var attributes: Components.Schemas.EndUserLicenseAgreement.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app/data/type`.
                        internal var _type: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app/data`.
                    internal var data: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/app`.
                internal var app: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories`.
                internal struct territoriesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case territories = "territories"
                        }
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/dataPayload/type`.
                        internal var _type: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/data`.
                    internal typealias dataPayload = [Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories/data`.
                    internal var data: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload.dataPayload?
                    /// Creates a new `territoriesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships/territories`.
                internal var territories: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - territories:
                internal init(
                    app: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.appPayload? = nil,
                    territories: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload.territoriesPayload? = nil
                ) {
                    self.app = app
                    self.territories = territories
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case territories
                }
            }
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/relationships`.
            internal var relationships: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/EndUserLicenseAgreement/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `EndUserLicenseAgreement`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.EndUserLicenseAgreement._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.EndUserLicenseAgreement.attributesPayload? = nil,
                relationships: Components.Schemas.EndUserLicenseAgreement.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/GameCenterDetail`.
        internal struct GameCenterDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case gameCenterDetails = "gameCenterDetails"
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/type`.
            internal var _type: Components.Schemas.GameCenterDetail._typePayload
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/attributes/arcadeEnabled`.
                internal var arcadeEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/attributes/challengeEnabled`.
                @available(*, deprecated)
                internal var challengeEnabled: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - arcadeEnabled:
                ///   - challengeEnabled:
                internal init(
                    arcadeEnabled: Swift.Bool? = nil,
                    challengeEnabled: Swift.Bool? = nil
                ) {
                    self.arcadeEnabled = arcadeEnabled
                    self.challengeEnabled = challengeEnabled
                }
                internal enum CodingKeys: String, CodingKey {
                    case arcadeEnabled
                    case challengeEnabled
                }
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/attributes`.
            internal var attributes: Components.Schemas.GameCenterDetail.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app/data/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/app`.
                internal var app: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions`.
                internal struct gameCenterAppVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterAppVersions = "gameCenterAppVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload.dataPayload?
                    /// Creates a new `gameCenterAppVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAppVersions`.
                internal var gameCenterAppVersions: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup`.
                internal struct gameCenterGroupPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterGroups = "gameCenterGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/data/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload.dataPayload?
                    /// Creates a new `gameCenterGroupPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterGroup`.
                internal var gameCenterGroup: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards`.
                internal struct gameCenterLeaderboardsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboards = "gameCenterLeaderboards"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload.dataPayload?
                    /// Creates a new `gameCenterLeaderboardsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboards`.
                internal var gameCenterLeaderboards: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets`.
                internal struct gameCenterLeaderboardSetsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboardSets = "gameCenterLeaderboardSets"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload.dataPayload?
                    /// Creates a new `gameCenterLeaderboardSetsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterLeaderboardSets`.
                internal var gameCenterLeaderboardSets: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements`.
                internal struct gameCenterAchievementsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterAchievements = "gameCenterAchievements"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload.dataPayload?
                    /// Creates a new `gameCenterAchievementsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterAchievements`.
                internal var gameCenterAchievements: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities`.
                internal struct gameCenterActivitiesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterActivities = "gameCenterActivities"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload.dataPayload?
                    /// Creates a new `gameCenterActivitiesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterActivities`.
                internal var gameCenterActivities: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges`.
                internal struct gameCenterChallengesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterChallenges = "gameCenterChallenges"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload.dataPayload?
                    /// Creates a new `gameCenterChallengesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/gameCenterChallenges`.
                internal var gameCenterChallenges: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard`.
                internal struct defaultLeaderboardPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboards = "gameCenterLeaderboards"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard/data/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload.dataPayload?
                    /// Creates a new `defaultLeaderboardPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultLeaderboard`.
                internal var defaultLeaderboard: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard`.
                internal struct defaultGroupLeaderboardPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboards = "gameCenterLeaderboards"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard/data/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload.dataPayload?
                    /// Creates a new `defaultGroupLeaderboardPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/defaultGroupLeaderboard`.
                internal var defaultGroupLeaderboard: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases`.
                internal struct achievementReleasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterAchievementReleases = "gameCenterAchievementReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload.dataPayload?
                    /// Creates a new `achievementReleasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/achievementReleases`.
                internal var achievementReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases`.
                internal struct activityReleasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterActivityVersionReleases = "gameCenterActivityVersionReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload.dataPayload?
                    /// Creates a new `activityReleasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/activityReleases`.
                internal var activityReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases`.
                internal struct challengeReleasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterChallengeVersionReleases = "gameCenterChallengeVersionReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload.dataPayload?
                    /// Creates a new `challengeReleasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengeReleases`.
                internal var challengeReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases`.
                internal struct leaderboardReleasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboardReleases = "gameCenterLeaderboardReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload.dataPayload?
                    /// Creates a new `leaderboardReleasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardReleases`.
                internal var leaderboardReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases`.
                internal struct leaderboardSetReleasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterLeaderboardSetReleases = "gameCenterLeaderboardSetReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload.dataPayload?
                    /// Creates a new `leaderboardSetReleasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/leaderboardSetReleases`.
                internal var leaderboardSetReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions`.
                internal struct challengesMinimumPlatformVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions/data`.
                    internal var data: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload.dataPayload?
                    /// Creates a new `challengesMinimumPlatformVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships/challengesMinimumPlatformVersions`.
                internal var challengesMinimumPlatformVersions: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - gameCenterAppVersions:
                ///   - gameCenterGroup:
                ///   - gameCenterLeaderboards:
                ///   - gameCenterLeaderboardSets:
                ///   - gameCenterAchievements:
                ///   - gameCenterActivities:
                ///   - gameCenterChallenges:
                ///   - defaultLeaderboard:
                ///   - defaultGroupLeaderboard:
                ///   - achievementReleases:
                ///   - activityReleases:
                ///   - challengeReleases:
                ///   - leaderboardReleases:
                ///   - leaderboardSetReleases:
                ///   - challengesMinimumPlatformVersions:
                internal init(
                    app: Components.Schemas.GameCenterDetail.relationshipsPayload.appPayload? = nil,
                    gameCenterAppVersions: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAppVersionsPayload? = nil,
                    gameCenterGroup: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterGroupPayload? = nil,
                    gameCenterLeaderboards: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardsPayload? = nil,
                    gameCenterLeaderboardSets: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterLeaderboardSetsPayload? = nil,
                    gameCenterAchievements: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterAchievementsPayload? = nil,
                    gameCenterActivities: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterActivitiesPayload? = nil,
                    gameCenterChallenges: Components.Schemas.GameCenterDetail.relationshipsPayload.gameCenterChallengesPayload? = nil,
                    defaultLeaderboard: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultLeaderboardPayload? = nil,
                    defaultGroupLeaderboard: Components.Schemas.GameCenterDetail.relationshipsPayload.defaultGroupLeaderboardPayload? = nil,
                    achievementReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.achievementReleasesPayload? = nil,
                    activityReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.activityReleasesPayload? = nil,
                    challengeReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.challengeReleasesPayload? = nil,
                    leaderboardReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardReleasesPayload? = nil,
                    leaderboardSetReleases: Components.Schemas.GameCenterDetail.relationshipsPayload.leaderboardSetReleasesPayload? = nil,
                    challengesMinimumPlatformVersions: Components.Schemas.GameCenterDetail.relationshipsPayload.challengesMinimumPlatformVersionsPayload? = nil
                ) {
                    self.app = app
                    self.gameCenterAppVersions = gameCenterAppVersions
                    self.gameCenterGroup = gameCenterGroup
                    self.gameCenterLeaderboards = gameCenterLeaderboards
                    self.gameCenterLeaderboardSets = gameCenterLeaderboardSets
                    self.gameCenterAchievements = gameCenterAchievements
                    self.gameCenterActivities = gameCenterActivities
                    self.gameCenterChallenges = gameCenterChallenges
                    self.defaultLeaderboard = defaultLeaderboard
                    self.defaultGroupLeaderboard = defaultGroupLeaderboard
                    self.achievementReleases = achievementReleases
                    self.activityReleases = activityReleases
                    self.challengeReleases = challengeReleases
                    self.leaderboardReleases = leaderboardReleases
                    self.leaderboardSetReleases = leaderboardSetReleases
                    self.challengesMinimumPlatformVersions = challengesMinimumPlatformVersions
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case gameCenterAppVersions
                    case gameCenterGroup
                    case gameCenterLeaderboards
                    case gameCenterLeaderboardSets
                    case gameCenterAchievements
                    case gameCenterActivities
                    case gameCenterChallenges
                    case defaultLeaderboard
                    case defaultGroupLeaderboard
                    case achievementReleases
                    case activityReleases
                    case challengeReleases
                    case leaderboardReleases
                    case leaderboardSetReleases
                    case challengesMinimumPlatformVersions
                }
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/relationships`.
            internal var relationships: Components.Schemas.GameCenterDetail.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/GameCenterDetail/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `GameCenterDetail`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.GameCenterDetail._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.GameCenterDetail.attributesPayload? = nil,
                relationships: Components.Schemas.GameCenterDetail.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion`.
        @available(*, deprecated)
        internal struct GameCenterEnabledVersion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case gameCenterEnabledVersions = "gameCenterEnabledVersions"
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/type`.
            internal var _type: Components.Schemas.GameCenterEnabledVersion._typePayload
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/attributes/versionString`.
                internal var versionString: Swift.String?
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/attributes/iconAsset`.
                internal var iconAsset: Components.Schemas.ImageAsset?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - platform:
                ///   - versionString:
                ///   - iconAsset:
                internal init(
                    platform: Components.Schemas.Platform? = nil,
                    versionString: Swift.String? = nil,
                    iconAsset: Components.Schemas.ImageAsset? = nil
                ) {
                    self.platform = platform
                    self.versionString = versionString
                    self.iconAsset = iconAsset
                }
                internal enum CodingKeys: String, CodingKey {
                    case platform
                    case versionString
                    case iconAsset
                }
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/attributes`.
            internal var attributes: Components.Schemas.GameCenterEnabledVersion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions`.
                internal struct compatibleVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions/data`.
                    internal var data: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload.dataPayload?
                    /// Creates a new `compatibleVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/compatibleVersions`.
                internal var compatibleVersions: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app/data/type`.
                        internal var _type: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app/data`.
                    internal var data: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships/app`.
                internal var app: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - compatibleVersions:
                ///   - app:
                internal init(
                    compatibleVersions: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.compatibleVersionsPayload? = nil,
                    app: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload.appPayload? = nil
                ) {
                    self.compatibleVersions = compatibleVersions
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case compatibleVersions
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/relationships`.
            internal var relationships: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/GameCenterEnabledVersion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `GameCenterEnabledVersion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.GameCenterEnabledVersion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.GameCenterEnabledVersion.attributesPayload? = nil,
                relationships: Components.Schemas.GameCenterEnabledVersion.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/InAppPurchase`.
        @available(*, deprecated)
        internal struct InAppPurchase: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case inAppPurchases = "inAppPurchases"
            }
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/type`.
            internal var _type: Components.Schemas.InAppPurchase._typePayload
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/referenceName`.
                internal var referenceName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/productId`.
                internal var productId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/inAppPurchaseType`.
                internal enum inAppPurchaseTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case AUTOMATICALLY_RENEWABLE_SUBSCRIPTION = "AUTOMATICALLY_RENEWABLE_SUBSCRIPTION"
                    case NON_CONSUMABLE = "NON_CONSUMABLE"
                    case CONSUMABLE = "CONSUMABLE"
                    case NON_RENEWING_SUBSCRIPTION = "NON_RENEWING_SUBSCRIPTION"
                    case FREE_SUBSCRIPTION = "FREE_SUBSCRIPTION"
                }
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/inAppPurchaseType`.
                internal var inAppPurchaseType: Components.Schemas.InAppPurchase.attributesPayload.inAppPurchaseTypePayload?
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/state`.
                internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case CREATED = "CREATED"
                    case DEVELOPER_SIGNED_OFF = "DEVELOPER_SIGNED_OFF"
                    case DEVELOPER_ACTION_NEEDED = "DEVELOPER_ACTION_NEEDED"
                    case DELETION_IN_PROGRESS = "DELETION_IN_PROGRESS"
                    case APPROVED = "APPROVED"
                    case DELETED = "DELETED"
                    case REMOVED_FROM_SALE = "REMOVED_FROM_SALE"
                    case DEVELOPER_REMOVED_FROM_SALE = "DEVELOPER_REMOVED_FROM_SALE"
                    case WAITING_FOR_UPLOAD = "WAITING_FOR_UPLOAD"
                    case PROCESSING_CONTENT = "PROCESSING_CONTENT"
                    case REPLACED = "REPLACED"
                    case REJECTED = "REJECTED"
                    case WAITING_FOR_SCREENSHOT = "WAITING_FOR_SCREENSHOT"
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case MISSING_METADATA = "MISSING_METADATA"
                    case READY_TO_SUBMIT = "READY_TO_SUBMIT"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
                }
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes/state`.
                internal var state: Components.Schemas.InAppPurchase.attributesPayload.statePayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - referenceName:
                ///   - productId:
                ///   - inAppPurchaseType:
                ///   - state:
                internal init(
                    referenceName: Swift.String? = nil,
                    productId: Swift.String? = nil,
                    inAppPurchaseType: Components.Schemas.InAppPurchase.attributesPayload.inAppPurchaseTypePayload? = nil,
                    state: Components.Schemas.InAppPurchase.attributesPayload.statePayload? = nil
                ) {
                    self.referenceName = referenceName
                    self.productId = productId
                    self.inAppPurchaseType = inAppPurchaseType
                    self.state = state
                }
                internal enum CodingKeys: String, CodingKey {
                    case referenceName
                    case productId
                    case inAppPurchaseType
                    case state
                }
            }
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/attributes`.
            internal var attributes: Components.Schemas.InAppPurchase.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps`.
                internal struct appsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/dataPayload/type`.
                        internal var _type: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/data`.
                    internal typealias dataPayload = [Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps/data`.
                    internal var data: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload.dataPayload?
                    /// Creates a new `appsPayload`.
                    ///
                    /// - Parameters:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload.dataPayload? = nil
                    ) {
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships/apps`.
                internal var apps: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - apps:
                internal init(apps: Components.Schemas.InAppPurchase.relationshipsPayload.appsPayload? = nil) {
                    self.apps = apps
                }
                internal enum CodingKeys: String, CodingKey {
                    case apps
                }
            }
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/relationships`.
            internal var relationships: Components.Schemas.InAppPurchase.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/InAppPurchase/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `InAppPurchase`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.InAppPurchase._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.InAppPurchase.attributesPayload? = nil,
                relationships: Components.Schemas.InAppPurchase.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion`.
        internal struct PrereleaseVersion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case preReleaseVersions = "preReleaseVersions"
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/type`.
            internal var _type: Components.Schemas.PrereleaseVersion._typePayload
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes/version`.
                internal var version: Swift.String?
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - version:
                ///   - platform:
                internal init(
                    version: Swift.String? = nil,
                    platform: Components.Schemas.Platform? = nil
                ) {
                    self.version = version
                    self.platform = platform
                }
                internal enum CodingKeys: String, CodingKey {
                    case version
                    case platform
                }
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes`.
            internal var attributes: Components.Schemas.PrereleaseVersion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/data`.
                    internal var data: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds`.
                internal var builds: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/type`.
                        internal var _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data`.
                    internal var data: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app`.
                internal var app: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - builds:
                ///   - app:
                internal init(
                    builds: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload? = nil,
                    app: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload? = nil
                ) {
                    self.builds = builds
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case builds
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships`.
            internal var relationships: Components.Schemas.PrereleaseVersion.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `PrereleaseVersion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.PrereleaseVersion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.PrereleaseVersion.attributesPayload? = nil,
                relationships: Components.Schemas.PrereleaseVersion.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/PromotedPurchase`.
        internal struct PromotedPurchase: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case promotedPurchases = "promotedPurchases"
            }
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/type`.
            internal var _type: Components.Schemas.PromotedPurchase._typePayload
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes/visibleForAllUsers`.
                internal var visibleForAllUsers: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes/enabled`.
                internal var enabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes/state`.
                internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APPROVED = "APPROVED"
                    case IN_REVIEW = "IN_REVIEW"
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case REJECTED = "REJECTED"
                }
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes/state`.
                internal var state: Components.Schemas.PromotedPurchase.attributesPayload.statePayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - visibleForAllUsers:
                ///   - enabled:
                ///   - state:
                internal init(
                    visibleForAllUsers: Swift.Bool? = nil,
                    enabled: Swift.Bool? = nil,
                    state: Components.Schemas.PromotedPurchase.attributesPayload.statePayload? = nil
                ) {
                    self.visibleForAllUsers = visibleForAllUsers
                    self.enabled = enabled
                    self.state = state
                }
                internal enum CodingKeys: String, CodingKey {
                    case visibleForAllUsers
                    case enabled
                    case state
                }
            }
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/attributes`.
            internal var attributes: Components.Schemas.PromotedPurchase.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2`.
                internal struct inAppPurchaseV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case inAppPurchases = "inAppPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2/data/type`.
                        internal var _type: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2/data`.
                    internal var data: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload.dataPayload?
                    /// Creates a new `inAppPurchaseV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/inAppPurchaseV2`.
                internal var inAppPurchaseV2: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload?
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription`.
                internal struct subscriptionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptions = "subscriptions"
                        }
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription/data/type`.
                        internal var _type: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription/data`.
                    internal var data: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload.dataPayload?
                    /// Creates a new `subscriptionPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships/subscription`.
                internal var subscription: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - inAppPurchaseV2:
                ///   - subscription:
                internal init(
                    inAppPurchaseV2: Components.Schemas.PromotedPurchase.relationshipsPayload.inAppPurchaseV2Payload? = nil,
                    subscription: Components.Schemas.PromotedPurchase.relationshipsPayload.subscriptionPayload? = nil
                ) {
                    self.inAppPurchaseV2 = inAppPurchaseV2
                    self.subscription = subscription
                }
                internal enum CodingKeys: String, CodingKey {
                    case inAppPurchaseV2
                    case subscription
                }
            }
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/relationships`.
            internal var relationships: Components.Schemas.PromotedPurchase.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/PromotedPurchase/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `PromotedPurchase`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.PromotedPurchase._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.PromotedPurchase.attributesPayload? = nil,
                relationships: Components.Schemas.PromotedPurchase.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ReviewSubmission`.
        internal struct ReviewSubmission: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case reviewSubmissions = "reviewSubmissions"
            }
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/type`.
            internal var _type: Components.Schemas.ReviewSubmission._typePayload
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes/submittedDate`.
                internal var submittedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes/state`.
                internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case UNRESOLVED_ISSUES = "UNRESOLVED_ISSUES"
                    case CANCELING = "CANCELING"
                    case COMPLETING = "COMPLETING"
                    case COMPLETE = "COMPLETE"
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes/state`.
                internal var state: Components.Schemas.ReviewSubmission.attributesPayload.statePayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - platform:
                ///   - submittedDate:
                ///   - state:
                internal init(
                    platform: Components.Schemas.Platform? = nil,
                    submittedDate: Foundation.Date? = nil,
                    state: Components.Schemas.ReviewSubmission.attributesPayload.statePayload? = nil
                ) {
                    self.platform = platform
                    self.submittedDate = submittedDate
                    self.state = state
                }
                internal enum CodingKeys: String, CodingKey {
                    case platform
                    case submittedDate
                    case state
                }
            }
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/attributes`.
            internal var attributes: Components.Schemas.ReviewSubmission.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app/data/type`.
                        internal var _type: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app/data`.
                    internal var data: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/app`.
                internal var app: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items`.
                internal struct itemsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case reviewSubmissionItems = "reviewSubmissionItems"
                        }
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/dataPayload/type`.
                        internal var _type: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/data`.
                    internal typealias dataPayload = [Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items/data`.
                    internal var data: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload.dataPayload?
                    /// Creates a new `itemsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/items`.
                internal var items: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview`.
                internal struct appStoreVersionForReviewPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview/data/type`.
                        internal var _type: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview/data`.
                    internal var data: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload.dataPayload?
                    /// Creates a new `appStoreVersionForReviewPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/appStoreVersionForReview`.
                internal var appStoreVersionForReview: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor`.
                internal struct submittedByActorPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case actors = "actors"
                        }
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor/data/type`.
                        internal var _type: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor/data`.
                    internal var data: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload.dataPayload?
                    /// Creates a new `submittedByActorPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/submittedByActor`.
                internal var submittedByActor: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload?
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor`.
                internal struct lastUpdatedByActorPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case actors = "actors"
                        }
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor/data/type`.
                        internal var _type: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor/data`.
                    internal var data: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload.dataPayload?
                    /// Creates a new `lastUpdatedByActorPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships/lastUpdatedByActor`.
                internal var lastUpdatedByActor: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - items:
                ///   - appStoreVersionForReview:
                ///   - submittedByActor:
                ///   - lastUpdatedByActor:
                internal init(
                    app: Components.Schemas.ReviewSubmission.relationshipsPayload.appPayload? = nil,
                    items: Components.Schemas.ReviewSubmission.relationshipsPayload.itemsPayload? = nil,
                    appStoreVersionForReview: Components.Schemas.ReviewSubmission.relationshipsPayload.appStoreVersionForReviewPayload? = nil,
                    submittedByActor: Components.Schemas.ReviewSubmission.relationshipsPayload.submittedByActorPayload? = nil,
                    lastUpdatedByActor: Components.Schemas.ReviewSubmission.relationshipsPayload.lastUpdatedByActorPayload? = nil
                ) {
                    self.app = app
                    self.items = items
                    self.appStoreVersionForReview = appStoreVersionForReview
                    self.submittedByActor = submittedByActor
                    self.lastUpdatedByActor = lastUpdatedByActor
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case items
                    case appStoreVersionForReview
                    case submittedByActor
                    case lastUpdatedByActor
                }
            }
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/relationships`.
            internal var relationships: Components.Schemas.ReviewSubmission.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/ReviewSubmission/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `ReviewSubmission`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.ReviewSubmission._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.ReviewSubmission.attributesPayload? = nil,
                relationships: Components.Schemas.ReviewSubmission.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod`.
        internal struct SubscriptionGracePeriod: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case subscriptionGracePeriods = "subscriptionGracePeriods"
            }
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/type`.
            internal var _type: Components.Schemas.SubscriptionGracePeriod._typePayload
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes/optIn`.
                internal var optIn: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes/sandboxOptIn`.
                internal var sandboxOptIn: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes/duration`.
                internal var duration: Components.Schemas.SubscriptionGracePeriodDuration?
                /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes/renewalType`.
                internal enum renewalTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ALL_RENEWALS = "ALL_RENEWALS"
                    case PAID_TO_PAID_ONLY = "PAID_TO_PAID_ONLY"
                }
                /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes/renewalType`.
                internal var renewalType: Components.Schemas.SubscriptionGracePeriod.attributesPayload.renewalTypePayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - optIn:
                ///   - sandboxOptIn:
                ///   - duration:
                ///   - renewalType:
                internal init(
                    optIn: Swift.Bool? = nil,
                    sandboxOptIn: Swift.Bool? = nil,
                    duration: Components.Schemas.SubscriptionGracePeriodDuration? = nil,
                    renewalType: Components.Schemas.SubscriptionGracePeriod.attributesPayload.renewalTypePayload? = nil
                ) {
                    self.optIn = optIn
                    self.sandboxOptIn = sandboxOptIn
                    self.duration = duration
                    self.renewalType = renewalType
                }
                internal enum CodingKeys: String, CodingKey {
                    case optIn
                    case sandboxOptIn
                    case duration
                    case renewalType
                }
            }
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/attributes`.
            internal var attributes: Components.Schemas.SubscriptionGracePeriod.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriod/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `SubscriptionGracePeriod`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.SubscriptionGracePeriod._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.SubscriptionGracePeriod.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup`.
        internal struct SubscriptionGroup: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case subscriptionGroups = "subscriptionGroups"
            }
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/type`.
            internal var _type: Components.Schemas.SubscriptionGroup._typePayload
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/attributes/referenceName`.
                internal var referenceName: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - referenceName:
                internal init(referenceName: Swift.String? = nil) {
                    self.referenceName = referenceName
                }
                internal enum CodingKeys: String, CodingKey {
                    case referenceName
                }
            }
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/attributes`.
            internal var attributes: Components.Schemas.SubscriptionGroup.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions`.
                internal struct subscriptionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptions = "subscriptions"
                        }
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/dataPayload/type`.
                        internal var _type: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/data`.
                    internal typealias dataPayload = [Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions/data`.
                    internal var data: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload.dataPayload?
                    /// Creates a new `subscriptionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptions`.
                internal var subscriptions: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload?
                /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations`.
                internal struct subscriptionGroupLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptionGroupLocalizations = "subscriptionGroupLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations/data`.
                    internal var data: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload.dataPayload?
                    /// Creates a new `subscriptionGroupLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships/subscriptionGroupLocalizations`.
                internal var subscriptionGroupLocalizations: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - subscriptions:
                ///   - subscriptionGroupLocalizations:
                internal init(
                    subscriptions: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionsPayload? = nil,
                    subscriptionGroupLocalizations: Components.Schemas.SubscriptionGroup.relationshipsPayload.subscriptionGroupLocalizationsPayload? = nil
                ) {
                    self.subscriptions = subscriptions
                    self.subscriptionGroupLocalizations = subscriptionGroupLocalizations
                }
                internal enum CodingKeys: String, CodingKey {
                    case subscriptions
                    case subscriptionGroupLocalizations
                }
            }
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/relationships`.
            internal var relationships: Components.Schemas.SubscriptionGroup.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/SubscriptionGroup/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `SubscriptionGroup`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.SubscriptionGroup._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.SubscriptionGroup.attributesPayload? = nil,
                relationships: Components.Schemas.SubscriptionGroup.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroupsWithoutIncludesResponse`.
        internal struct BetaGroupsWithoutIncludesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroupsWithoutIncludesResponse/data`.
            internal var data: [Components.Schemas.BetaGroup]
            /// - Remark: Generated from `#/components/schemas/BetaGroupsWithoutIncludesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BetaGroupsWithoutIncludesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BetaGroupsWithoutIncludesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.BetaGroup],
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorResponse`.
        internal struct ErrorResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload`.
            internal struct errorsPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/id`.
                internal var id: Swift.String?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/status`.
                internal var status: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/code`.
                internal var code: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/title`.
                internal var title: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/detail`.
                internal var detail: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal enum sourcePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case1`.
                    case ErrorSourcePointer(Components.Schemas.ErrorSourcePointer)
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case2`.
                    case ErrorSourceParameter(Components.Schemas.ErrorSourceParameter)
                    internal init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            self = .ErrorSourcePointer(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .ErrorSourceParameter(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        throw Swift.DecodingError.failedToDecodeOneOfSchema(
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        switch self {
                        case let .ErrorSourcePointer(value):
                            try value.encode(to: encoder)
                        case let .ErrorSourceParameter(value):
                            try value.encode(to: encoder)
                        }
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal var source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/links`.
                internal var links: Components.Schemas.ErrorLinks?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal struct metaPayload: Codable, Hashable, Sendable {
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer]
                    /// Creates a new `metaPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal var meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload?
                /// Creates a new `errorsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - status:
                ///   - code:
                ///   - title:
                ///   - detail:
                ///   - source:
                ///   - links:
                ///   - meta:
                internal init(
                    id: Swift.String? = nil,
                    status: Swift.String,
                    code: Swift.String,
                    title: Swift.String,
                    detail: Swift.String,
                    source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload? = nil,
                    links: Components.Schemas.ErrorLinks? = nil,
                    meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload? = nil
                ) {
                    self.id = id
                    self.status = status
                    self.code = code
                    self.title = title
                    self.detail = detail
                    self.source = source
                    self.links = links
                    self.meta = meta
                }
                internal enum CodingKeys: String, CodingKey {
                    case id
                    case status
                    case code
                    case title
                    case detail
                    case source
                    case links
                    case meta
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal typealias errorsPayload = [Components.Schemas.ErrorResponse.errorsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal var errors: Components.Schemas.ErrorResponse.errorsPayload?
            /// Creates a new `ErrorResponse`.
            ///
            /// - Parameters:
            ///   - errors:
            internal init(errors: Components.Schemas.ErrorResponse.errorsPayload? = nil) {
                self.errors = errors
            }
            internal enum CodingKeys: String, CodingKey {
                case errors
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter`.
        internal struct ErrorSourceParameter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter/parameter`.
            internal var parameter: Swift.String
            /// Creates a new `ErrorSourceParameter`.
            ///
            /// - Parameters:
            ///   - parameter:
            internal init(parameter: Swift.String) {
                self.parameter = parameter
            }
            internal enum CodingKeys: String, CodingKey {
                case parameter
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer`.
        internal struct ErrorSourcePointer: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer/pointer`.
            internal var pointer: Swift.String
            /// Creates a new `ErrorSourcePointer`.
            ///
            /// - Parameters:
            ///   - pointer:
            internal init(pointer: Swift.String) {
                self.pointer = pointer
            }
            internal enum CodingKeys: String, CodingKey {
                case pointer
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorLinks`.
        internal struct ErrorLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/about`.
            internal var about: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal enum associatedPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case1`.
                case case1(Swift.String)
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                internal struct Case2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/href`.
                    internal var href: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal struct metaPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta/source`.
                        internal var source: Swift.String?
                        /// Creates a new `metaPayload`.
                        ///
                        /// - Parameters:
                        ///   - source:
                        internal init(source: Swift.String? = nil) {
                            self.source = source
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case source
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal var meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload?
                    /// Creates a new `Case2Payload`.
                    ///
                    /// - Parameters:
                    ///   - href:
                    ///   - meta:
                    internal init(
                        href: Swift.String? = nil,
                        meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload? = nil
                    ) {
                        self.href = href
                        self.meta = meta
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case href
                        case meta
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                case case2(Components.Schemas.ErrorLinks.associatedPayload.Case2Payload)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .case1(try decoder.decodeFromSingleValueContainer())
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .case2(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .case1(value):
                        try encoder.encodeToSingleValueContainer(value)
                    case let .case2(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal var associated: Components.Schemas.ErrorLinks.associatedPayload?
            /// Creates a new `ErrorLinks`.
            ///
            /// - Parameters:
            ///   - about:
            ///   - associated:
            internal init(
                about: Swift.String? = nil,
                associated: Components.Schemas.ErrorLinks.associatedPayload? = nil
            ) {
                self.about = about
                self.associated = associated
            }
            internal enum CodingKeys: String, CodingKey {
                case about
                case associated
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks`.
        internal struct PagedDocumentLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/self`.
            internal var _self: Swift.String
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/first`.
            internal var first: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/next`.
            internal var next: Swift.String?
            /// Creates a new `PagedDocumentLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            ///   - first:
            ///   - next:
            internal init(
                _self: Swift.String,
                first: Swift.String? = nil,
                next: Swift.String? = nil
            ) {
                self._self = _self
                self.first = first
                self.next = next
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
                case first
                case next
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagingInformation`.
        internal struct PagingInformation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/total`.
                internal var total: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/limit`.
                internal var limit: Swift.Int
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/nextCursor`.
                internal var nextCursor: Swift.String?
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - total:
                ///   - limit:
                ///   - nextCursor:
                internal init(
                    total: Swift.Int? = nil,
                    limit: Swift.Int,
                    nextCursor: Swift.String? = nil
                ) {
                    self.total = total
                    self.limit = limit
                    self.nextCursor = nextCursor
                }
                internal enum CodingKeys: String, CodingKey {
                    case total
                    case limit
                    case nextCursor
                }
            }
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal var paging: Components.Schemas.PagingInformation.pagingPayload
            /// Creates a new `PagingInformation`.
            ///
            /// - Parameters:
            ///   - paging:
            internal init(paging: Components.Schemas.PagingInformation.pagingPayload) {
                self.paging = paging
            }
            internal enum CodingKeys: String, CodingKey {
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/ResourceLinks`.
        internal struct ResourceLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ResourceLinks/self`.
            internal var _self: Swift.String?
            /// Creates a new `ResourceLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            internal init(_self: Swift.String? = nil) {
                self._self = _self
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
            }
        }
        /// - Remark: Generated from `#/components/schemas/RelationshipLinks`.
        internal struct RelationshipLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/RelationshipLinks/self`.
            internal var _self: Swift.String?
            /// - Remark: Generated from `#/components/schemas/RelationshipLinks/related`.
            internal var related: Swift.String?
            /// Creates a new `RelationshipLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            ///   - related:
            internal init(
                _self: Swift.String? = nil,
                related: Swift.String? = nil
            ) {
                self._self = _self
                self.related = related
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
                case related
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclarationState`.
        internal enum AppEncryptionDeclarationState: String, Codable, Hashable, Sendable, CaseIterable {
            case CREATED = "CREATED"
            case IN_REVIEW = "IN_REVIEW"
            case APPROVED = "APPROVED"
            case REJECTED = "REJECTED"
            case INVALID = "INVALID"
            case EXPIRED = "EXPIRED"
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreAgeRating`.
        internal enum AppStoreAgeRating: String, Codable, Hashable, Sendable, CaseIterable {
            case L = "L"
            case ALL = "ALL"
            case ONE_PLUS = "ONE_PLUS"
            case TWO_PLUS = "TWO_PLUS"
            case THREE_PLUS = "THREE_PLUS"
            case FOUR_PLUS = "FOUR_PLUS"
            case FIVE_PLUS = "FIVE_PLUS"
            case SIX_PLUS = "SIX_PLUS"
            case SEVEN_PLUS = "SEVEN_PLUS"
            case EIGHT_PLUS = "EIGHT_PLUS"
            case NINE_PLUS = "NINE_PLUS"
            case TEN_PLUS = "TEN_PLUS"
            case ELEVEN_PLUS = "ELEVEN_PLUS"
            case TWELVE_PLUS = "TWELVE_PLUS"
            case THIRTEEN_PLUS = "THIRTEEN_PLUS"
            case FOURTEEN_PLUS = "FOURTEEN_PLUS"
            case FIFTEEN_PLUS = "FIFTEEN_PLUS"
            case SIXTEEN_PLUS = "SIXTEEN_PLUS"
            case SEVENTEEN_PLUS = "SEVENTEEN_PLUS"
            case EIGHTEEN_PLUS = "EIGHTEEN_PLUS"
            case NINETEEN_PLUS = "NINETEEN_PLUS"
            case TWENTY_PLUS = "TWENTY_PLUS"
            case TWENTY_ONE_PLUS = "TWENTY_ONE_PLUS"
            case UNRATED = "UNRATED"
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreVersionState`.
        internal enum AppStoreVersionState: String, Codable, Hashable, Sendable, CaseIterable {
            case ACCEPTED = "ACCEPTED"
            case DEVELOPER_REMOVED_FROM_SALE = "DEVELOPER_REMOVED_FROM_SALE"
            case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
            case IN_REVIEW = "IN_REVIEW"
            case INVALID_BINARY = "INVALID_BINARY"
            case METADATA_REJECTED = "METADATA_REJECTED"
            case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
            case PENDING_CONTRACT = "PENDING_CONTRACT"
            case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
            case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
            case PREORDER_READY_FOR_SALE = "PREORDER_READY_FOR_SALE"
            case PROCESSING_FOR_APP_STORE = "PROCESSING_FOR_APP_STORE"
            case READY_FOR_REVIEW = "READY_FOR_REVIEW"
            case READY_FOR_SALE = "READY_FOR_SALE"
            case REJECTED = "REJECTED"
            case REMOVED_FROM_SALE = "REMOVED_FROM_SALE"
            case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
            case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
            case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
            case NOT_APPLICABLE = "NOT_APPLICABLE"
        }
        /// - Remark: Generated from `#/components/schemas/AppVersionState`.
        internal enum AppVersionState: String, Codable, Hashable, Sendable, CaseIterable {
            case ACCEPTED = "ACCEPTED"
            case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
            case IN_REVIEW = "IN_REVIEW"
            case INVALID_BINARY = "INVALID_BINARY"
            case METADATA_REJECTED = "METADATA_REJECTED"
            case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
            case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
            case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
            case PROCESSING_FOR_DISTRIBUTION = "PROCESSING_FOR_DISTRIBUTION"
            case READY_FOR_DISTRIBUTION = "READY_FOR_DISTRIBUTION"
            case READY_FOR_REVIEW = "READY_FOR_REVIEW"
            case REJECTED = "REJECTED"
            case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
            case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
            case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
        }
        /// - Remark: Generated from `#/components/schemas/BrazilAgeRating`.
        internal enum BrazilAgeRating: String, Codable, Hashable, Sendable, CaseIterable {
            case L = "L"
            case TEN = "TEN"
            case TWELVE = "TWELVE"
            case FOURTEEN = "FOURTEEN"
            case SIXTEEN = "SIXTEEN"
            case EIGHTEEN = "EIGHTEEN"
        }
        /// - Remark: Generated from `#/components/schemas/BuildAudienceType`.
        internal enum BuildAudienceType: String, Codable, Hashable, Sendable, CaseIterable {
            case INTERNAL_ONLY = "INTERNAL_ONLY"
            case APP_STORE_ELIGIBLE = "APP_STORE_ELIGIBLE"
        }
        /// - Remark: Generated from `#/components/schemas/ImageAsset`.
        internal struct ImageAsset: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ImageAsset/templateUrl`.
            internal var templateUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ImageAsset/width`.
            internal var width: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/ImageAsset/height`.
            internal var height: Swift.Int?
            /// Creates a new `ImageAsset`.
            ///
            /// - Parameters:
            ///   - templateUrl:
            ///   - width:
            ///   - height:
            internal init(
                templateUrl: Swift.String? = nil,
                width: Swift.Int? = nil,
                height: Swift.Int? = nil
            ) {
                self.templateUrl = templateUrl
                self.width = width
                self.height = height
            }
            internal enum CodingKeys: String, CodingKey {
                case templateUrl
                case width
                case height
            }
        }
        /// - Remark: Generated from `#/components/schemas/KidsAgeBand`.
        internal enum KidsAgeBand: String, Codable, Hashable, Sendable, CaseIterable {
            case FIVE_AND_UNDER = "FIVE_AND_UNDER"
            case SIX_TO_EIGHT = "SIX_TO_EIGHT"
            case NINE_TO_ELEVEN = "NINE_TO_ELEVEN"
        }
        /// - Remark: Generated from `#/components/schemas/Platform`.
        internal enum Platform: String, Codable, Hashable, Sendable, CaseIterable {
            case IOS = "IOS"
            case MAC_OS = "MAC_OS"
            case TV_OS = "TV_OS"
            case VISION_OS = "VISION_OS"
        }
        /// - Remark: Generated from `#/components/schemas/SubscriptionGracePeriodDuration`.
        internal enum SubscriptionGracePeriodDuration: String, Codable, Hashable, Sendable, CaseIterable {
            case THREE_DAYS = "THREE_DAYS"
            case SIXTEEN_DAYS = "SIXTEEN_DAYS"
            case TWENTY_EIGHT_DAYS = "TWENTY_EIGHT_DAYS"
        }
        /// - Remark: Generated from `#/components/schemas/SubscriptionStatusUrlVersion`.
        internal enum SubscriptionStatusUrlVersion: String, Codable, Hashable, Sendable, CaseIterable {
            case V1 = "V1"
            case V2 = "V2"
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// - Remark: HTTP `GET /v1/apps`.
    /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)`.
    internal enum apps_getCollection {
        internal static let id: Swift.String = "apps_getCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/apps/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// filter by attribute 'name'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[name]`.
                internal var filter_lbrack_name_rbrack_: [Swift.String]?
                /// filter by attribute 'bundleId'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[bundleId]`.
                internal var filter_lbrack_bundleId_rbrack_: [Swift.String]?
                /// filter by attribute 'sku'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[sku]`.
                internal var filter_lbrack_sku_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter_lbrack_appStoreVersions_period_appStoreState_rbrack_Payload`.
                internal enum filter_lbrack_appStoreVersions_period_appStoreState_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ACCEPTED = "ACCEPTED"
                    case DEVELOPER_REMOVED_FROM_SALE = "DEVELOPER_REMOVED_FROM_SALE"
                    case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
                    case IN_REVIEW = "IN_REVIEW"
                    case INVALID_BINARY = "INVALID_BINARY"
                    case METADATA_REJECTED = "METADATA_REJECTED"
                    case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
                    case PENDING_CONTRACT = "PENDING_CONTRACT"
                    case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case PREORDER_READY_FOR_SALE = "PREORDER_READY_FOR_SALE"
                    case PROCESSING_FOR_APP_STORE = "PROCESSING_FOR_APP_STORE"
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case READY_FOR_SALE = "READY_FOR_SALE"
                    case REJECTED = "REJECTED"
                    case REMOVED_FROM_SALE = "REMOVED_FROM_SALE"
                    case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
                    case NOT_APPLICABLE = "NOT_APPLICABLE"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.appStoreState]`.
                internal typealias filter_lbrack_appStoreVersions_period_appStoreState_rbrack_Payload = [Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appStoreState_rbrack_PayloadPayload]
                /// filter by attribute 'appStoreVersions.appStoreState'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.appStoreState]`.
                @available(*, deprecated)
                internal var filter_lbrack_appStoreVersions_period_appStoreState_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appStoreState_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter_lbrack_appStoreVersions_period_platform_rbrack_Payload`.
                internal enum filter_lbrack_appStoreVersions_period_platform_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS = "IOS"
                    case MAC_OS = "MAC_OS"
                    case TV_OS = "TV_OS"
                    case VISION_OS = "VISION_OS"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.platform]`.
                internal typealias filter_lbrack_appStoreVersions_period_platform_rbrack_Payload = [Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_platform_rbrack_PayloadPayload]
                /// filter by attribute 'appStoreVersions.platform'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.platform]`.
                internal var filter_lbrack_appStoreVersions_period_platform_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_platform_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter_lbrack_appStoreVersions_period_appVersionState_rbrack_Payload`.
                internal enum filter_lbrack_appStoreVersions_period_appVersionState_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ACCEPTED = "ACCEPTED"
                    case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
                    case IN_REVIEW = "IN_REVIEW"
                    case INVALID_BINARY = "INVALID_BINARY"
                    case METADATA_REJECTED = "METADATA_REJECTED"
                    case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
                    case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
                    case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
                    case PROCESSING_FOR_DISTRIBUTION = "PROCESSING_FOR_DISTRIBUTION"
                    case READY_FOR_DISTRIBUTION = "READY_FOR_DISTRIBUTION"
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case REJECTED = "REJECTED"
                    case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
                    case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.appVersionState]`.
                internal typealias filter_lbrack_appStoreVersions_period_appVersionState_rbrack_Payload = [Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appVersionState_rbrack_PayloadPayload]
                /// filter by attribute 'appStoreVersions.appVersionState'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions.appVersionState]`.
                internal var filter_lbrack_appStoreVersions_period_appVersionState_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appVersionState_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter_lbrack_reviewSubmissions_period_state_rbrack_Payload`.
                internal enum filter_lbrack_reviewSubmissions_period_state_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case READY_FOR_REVIEW = "READY_FOR_REVIEW"
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case UNRESOLVED_ISSUES = "UNRESOLVED_ISSUES"
                    case CANCELING = "CANCELING"
                    case COMPLETING = "COMPLETING"
                    case COMPLETE = "COMPLETE"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[reviewSubmissions.state]`.
                internal typealias filter_lbrack_reviewSubmissions_period_state_rbrack_Payload = [Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_state_rbrack_PayloadPayload]
                /// filter by attribute 'reviewSubmissions.state'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[reviewSubmissions.state]`.
                internal var filter_lbrack_reviewSubmissions_period_state_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_state_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter_lbrack_reviewSubmissions_period_platform_rbrack_Payload`.
                internal enum filter_lbrack_reviewSubmissions_period_platform_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS = "IOS"
                    case MAC_OS = "MAC_OS"
                    case TV_OS = "TV_OS"
                    case VISION_OS = "VISION_OS"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[reviewSubmissions.platform]`.
                internal typealias filter_lbrack_reviewSubmissions_period_platform_rbrack_Payload = [Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_platform_rbrack_PayloadPayload]
                /// filter by attribute 'reviewSubmissions.platform'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[reviewSubmissions.platform]`.
                internal var filter_lbrack_reviewSubmissions_period_platform_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_platform_rbrack_Payload?
                /// filter by id(s) of related 'appStoreVersions'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[appStoreVersions]`.
                internal var filter_lbrack_appStoreVersions_rbrack_: [Swift.String]?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// filter by existence or non-existence of related 'gameCenterEnabledVersions'
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/exists[gameCenterEnabledVersions]`.
                @available(*, deprecated)
                internal var exists_lbrack_gameCenterEnabledVersions_rbrack_: Swift.Bool?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case _hyphen_name = "-name"
                    case bundleId = "bundleId"
                    case _hyphen_bundleId = "-bundleId"
                    case sku = "sku"
                    case _hyphen_sku = "-sku"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/sort`.
                internal typealias sortPayload = [Operations.apps_getCollection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/sort`.
                internal var sort: Operations.apps_getCollection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appEncryptionDeclarations_rbrack_Payload`.
                internal enum fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appDescription = "appDescription"
                    case createdDate = "createdDate"
                    case usesEncryption = "usesEncryption"
                    case exempt = "exempt"
                    case containsProprietaryCryptography = "containsProprietaryCryptography"
                    case containsThirdPartyCryptography = "containsThirdPartyCryptography"
                    case availableOnFrenchStore = "availableOnFrenchStore"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case documentUrl = "documentUrl"
                    case documentName = "documentName"
                    case documentType = "documentType"
                    case appEncryptionDeclarationState = "appEncryptionDeclarationState"
                    case codeValue = "codeValue"
                    case app = "app"
                    case builds = "builds"
                    case appEncryptionDeclarationDocument = "appEncryptionDeclarationDocument"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appEncryptionDeclarations]`.
                internal typealias fields_lbrack_appEncryptionDeclarations_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appEncryptionDeclarations
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appEncryptionDeclarations]`.
                internal var fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_ciProducts_rbrack_Payload`.
                internal enum fields_lbrack_ciProducts_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case productType = "productType"
                    case app = "app"
                    case bundleId = "bundleId"
                    case workflows = "workflows"
                    case primaryRepositories = "primaryRepositories"
                    case additionalRepositories = "additionalRepositories"
                    case buildRuns = "buildRuns"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[ciProducts]`.
                internal typealias fields_lbrack_ciProducts_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_ciProducts_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type ciProducts
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[ciProducts]`.
                internal var fields_lbrack_ciProducts_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_ciProducts_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appStoreVersions_rbrack_Payload`.
                internal enum fields_lbrack_appStoreVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case versionString = "versionString"
                    case appStoreState = "appStoreState"
                    case appVersionState = "appVersionState"
                    case copyright = "copyright"
                    case reviewType = "reviewType"
                    case releaseType = "releaseType"
                    case earliestReleaseDate = "earliestReleaseDate"
                    case usesIdfa = "usesIdfa"
                    case downloadable = "downloadable"
                    case createdDate = "createdDate"
                    case app = "app"
                    case ageRatingDeclaration = "ageRatingDeclaration"
                    case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                    case build = "build"
                    case appStoreVersionPhasedRelease = "appStoreVersionPhasedRelease"
                    case gameCenterAppVersion = "gameCenterAppVersion"
                    case routingAppCoverage = "routingAppCoverage"
                    case appStoreReviewDetail = "appStoreReviewDetail"
                    case appStoreVersionSubmission = "appStoreVersionSubmission"
                    case appClipDefaultExperience = "appClipDefaultExperience"
                    case appStoreVersionExperiments = "appStoreVersionExperiments"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case customerReviews = "customerReviews"
                    case alternativeDistributionPackage = "alternativeDistributionPackage"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appStoreVersions]`.
                internal typealias fields_lbrack_appStoreVersions_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appStoreVersions
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appStoreVersions]`.
                internal var fields_lbrack_appStoreVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_preReleaseVersions_rbrack_Payload`.
                internal enum fields_lbrack_preReleaseVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case platform = "platform"
                    case builds = "builds"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[preReleaseVersions]`.
                internal typealias fields_lbrack_preReleaseVersions_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type preReleaseVersions
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[preReleaseVersions]`.
                internal var fields_lbrack_preReleaseVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_betaAppLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaAppLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case feedbackEmail = "feedbackEmail"
                    case marketingUrl = "marketingUrl"
                    case privacyPolicyUrl = "privacyPolicyUrl"
                    case tvOsPrivacyPolicy = "tvOsPrivacyPolicy"
                    case description = "description"
                    case locale = "locale"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaAppLocalizations]`.
                internal typealias fields_lbrack_betaAppLocalizations_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaAppLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaAppLocalizations]`.
                internal var fields_lbrack_betaAppLocalizations_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppLocalizations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_betaLicenseAgreements_rbrack_Payload`.
                internal enum fields_lbrack_betaLicenseAgreements_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case agreementText = "agreementText"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaLicenseAgreements]`.
                internal typealias fields_lbrack_betaLicenseAgreements_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_betaLicenseAgreements_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaLicenseAgreements
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaLicenseAgreements]`.
                internal var fields_lbrack_betaLicenseAgreements_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaLicenseAgreements_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_betaAppReviewDetails_rbrack_Payload`.
                internal enum fields_lbrack_betaAppReviewDetails_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case contactFirstName = "contactFirstName"
                    case contactLastName = "contactLastName"
                    case contactPhone = "contactPhone"
                    case contactEmail = "contactEmail"
                    case demoAccountName = "demoAccountName"
                    case demoAccountPassword = "demoAccountPassword"
                    case demoAccountRequired = "demoAccountRequired"
                    case notes = "notes"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaAppReviewDetails]`.
                internal typealias fields_lbrack_betaAppReviewDetails_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppReviewDetails_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaAppReviewDetails
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[betaAppReviewDetails]`.
                internal var fields_lbrack_betaAppReviewDetails_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppReviewDetails_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appInfos_rbrack_Payload`.
                internal enum fields_lbrack_appInfos_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appStoreState = "appStoreState"
                    case state = "state"
                    case appStoreAgeRating = "appStoreAgeRating"
                    case australiaAgeRating = "australiaAgeRating"
                    case brazilAgeRating = "brazilAgeRating"
                    case brazilAgeRatingV2 = "brazilAgeRatingV2"
                    case franceAgeRating = "franceAgeRating"
                    case koreaAgeRating = "koreaAgeRating"
                    case kidsAgeBand = "kidsAgeBand"
                    case app = "app"
                    case ageRatingDeclaration = "ageRatingDeclaration"
                    case appInfoLocalizations = "appInfoLocalizations"
                    case primaryCategory = "primaryCategory"
                    case primarySubcategoryOne = "primarySubcategoryOne"
                    case primarySubcategoryTwo = "primarySubcategoryTwo"
                    case secondaryCategory = "secondaryCategory"
                    case secondarySubcategoryOne = "secondarySubcategoryOne"
                    case secondarySubcategoryTwo = "secondarySubcategoryTwo"
                    case territoryAgeRatings = "territoryAgeRatings"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appInfos]`.
                internal typealias fields_lbrack_appInfos_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appInfos_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appInfos
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appInfos]`.
                internal var fields_lbrack_appInfos_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appInfos_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appClips_rbrack_Payload`.
                internal enum fields_lbrack_appClips_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case bundleId = "bundleId"
                    case app = "app"
                    case appClipDefaultExperiences = "appClipDefaultExperiences"
                    case appClipAdvancedExperiences = "appClipAdvancedExperiences"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appClips]`.
                internal typealias fields_lbrack_appClips_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appClips_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appClips
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appClips]`.
                internal var fields_lbrack_appClips_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appClips_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_endUserLicenseAgreements_rbrack_Payload`.
                internal enum fields_lbrack_endUserLicenseAgreements_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case agreementText = "agreementText"
                    case app = "app"
                    case territories = "territories"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[endUserLicenseAgreements]`.
                internal typealias fields_lbrack_endUserLicenseAgreements_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_endUserLicenseAgreements_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type endUserLicenseAgreements
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[endUserLicenseAgreements]`.
                internal var fields_lbrack_endUserLicenseAgreements_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_endUserLicenseAgreements_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_inAppPurchases_rbrack_Payload`.
                internal enum fields_lbrack_inAppPurchases_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case referenceName = "referenceName"
                    case productId = "productId"
                    case inAppPurchaseType = "inAppPurchaseType"
                    case state = "state"
                    case apps = "apps"
                    case name = "name"
                    case reviewNote = "reviewNote"
                    case familySharable = "familySharable"
                    case contentHosting = "contentHosting"
                    case inAppPurchaseLocalizations = "inAppPurchaseLocalizations"
                    case pricePoints = "pricePoints"
                    case content = "content"
                    case appStoreReviewScreenshot = "appStoreReviewScreenshot"
                    case promotedPurchase = "promotedPurchase"
                    case iapPriceSchedule = "iapPriceSchedule"
                    case inAppPurchaseAvailability = "inAppPurchaseAvailability"
                    case images = "images"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[inAppPurchases]`.
                internal typealias fields_lbrack_inAppPurchases_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_inAppPurchases_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type inAppPurchases
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[inAppPurchases]`.
                internal var fields_lbrack_inAppPurchases_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_inAppPurchases_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_subscriptionGroups_rbrack_Payload`.
                internal enum fields_lbrack_subscriptionGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case referenceName = "referenceName"
                    case subscriptions = "subscriptions"
                    case subscriptionGroupLocalizations = "subscriptionGroupLocalizations"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[subscriptionGroups]`.
                internal typealias fields_lbrack_subscriptionGroups_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type subscriptionGroups
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[subscriptionGroups]`.
                internal var fields_lbrack_subscriptionGroups_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_gameCenterEnabledVersions_rbrack_Payload`.
                internal enum fields_lbrack_gameCenterEnabledVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case versionString = "versionString"
                    case iconAsset = "iconAsset"
                    case compatibleVersions = "compatibleVersions"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[gameCenterEnabledVersions]`.
                internal typealias fields_lbrack_gameCenterEnabledVersions_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterEnabledVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type gameCenterEnabledVersions
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[gameCenterEnabledVersions]`.
                @available(*, deprecated)
                internal var fields_lbrack_gameCenterEnabledVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterEnabledVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appCustomProductPages_rbrack_Payload`.
                internal enum fields_lbrack_appCustomProductPages_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case url = "url"
                    case visible = "visible"
                    case app = "app"
                    case appCustomProductPageVersions = "appCustomProductPageVersions"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appCustomProductPages]`.
                internal typealias fields_lbrack_appCustomProductPages_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appCustomProductPages_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appCustomProductPages
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appCustomProductPages]`.
                internal var fields_lbrack_appCustomProductPages_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appCustomProductPages_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_promotedPurchases_rbrack_Payload`.
                internal enum fields_lbrack_promotedPurchases_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case visibleForAllUsers = "visibleForAllUsers"
                    case enabled = "enabled"
                    case state = "state"
                    case inAppPurchaseV2 = "inAppPurchaseV2"
                    case subscription = "subscription"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[promotedPurchases]`.
                internal typealias fields_lbrack_promotedPurchases_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_promotedPurchases_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type promotedPurchases
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[promotedPurchases]`.
                internal var fields_lbrack_promotedPurchases_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_promotedPurchases_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appEvents_rbrack_Payload`.
                internal enum fields_lbrack_appEvents_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case referenceName = "referenceName"
                    case badge = "badge"
                    case eventState = "eventState"
                    case deepLink = "deepLink"
                    case purchaseRequirement = "purchaseRequirement"
                    case primaryLocale = "primaryLocale"
                    case priority = "priority"
                    case purpose = "purpose"
                    case territorySchedules = "territorySchedules"
                    case archivedTerritorySchedules = "archivedTerritorySchedules"
                    case localizations = "localizations"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appEvents]`.
                internal typealias fields_lbrack_appEvents_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appEvents_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appEvents
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appEvents]`.
                internal var fields_lbrack_appEvents_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appEvents_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_reviewSubmissions_rbrack_Payload`.
                internal enum fields_lbrack_reviewSubmissions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case submittedDate = "submittedDate"
                    case state = "state"
                    case app = "app"
                    case items = "items"
                    case appStoreVersionForReview = "appStoreVersionForReview"
                    case submittedByActor = "submittedByActor"
                    case lastUpdatedByActor = "lastUpdatedByActor"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[reviewSubmissions]`.
                internal typealias fields_lbrack_reviewSubmissions_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_reviewSubmissions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type reviewSubmissions
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[reviewSubmissions]`.
                internal var fields_lbrack_reviewSubmissions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_reviewSubmissions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_subscriptionGracePeriods_rbrack_Payload`.
                internal enum fields_lbrack_subscriptionGracePeriods_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case optIn = "optIn"
                    case sandboxOptIn = "sandboxOptIn"
                    case duration = "duration"
                    case renewalType = "renewalType"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[subscriptionGracePeriods]`.
                internal typealias fields_lbrack_subscriptionGracePeriods_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGracePeriods_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type subscriptionGracePeriods
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[subscriptionGracePeriods]`.
                internal var fields_lbrack_subscriptionGracePeriods_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGracePeriods_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_gameCenterDetails_rbrack_Payload`.
                internal enum fields_lbrack_gameCenterDetails_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case arcadeEnabled = "arcadeEnabled"
                    case challengeEnabled = "challengeEnabled"
                    case app = "app"
                    case gameCenterAppVersions = "gameCenterAppVersions"
                    case gameCenterGroup = "gameCenterGroup"
                    case gameCenterLeaderboards = "gameCenterLeaderboards"
                    case gameCenterLeaderboardSets = "gameCenterLeaderboardSets"
                    case gameCenterAchievements = "gameCenterAchievements"
                    case gameCenterActivities = "gameCenterActivities"
                    case gameCenterChallenges = "gameCenterChallenges"
                    case defaultLeaderboard = "defaultLeaderboard"
                    case defaultGroupLeaderboard = "defaultGroupLeaderboard"
                    case achievementReleases = "achievementReleases"
                    case activityReleases = "activityReleases"
                    case challengeReleases = "challengeReleases"
                    case leaderboardReleases = "leaderboardReleases"
                    case leaderboardSetReleases = "leaderboardSetReleases"
                    case challengesMinimumPlatformVersions = "challengesMinimumPlatformVersions"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[gameCenterDetails]`.
                internal typealias fields_lbrack_gameCenterDetails_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterDetails_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type gameCenterDetails
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[gameCenterDetails]`.
                internal var fields_lbrack_gameCenterDetails_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterDetails_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields_lbrack_appStoreVersionExperiments_rbrack_Payload`.
                internal enum fields_lbrack_appStoreVersionExperiments_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case platform = "platform"
                    case trafficProportion = "trafficProportion"
                    case state = "state"
                    case reviewRequired = "reviewRequired"
                    case startDate = "startDate"
                    case endDate = "endDate"
                    case app = "app"
                    case latestControlVersion = "latestControlVersion"
                    case controlVersions = "controlVersions"
                    case appStoreVersionExperimentTreatments = "appStoreVersionExperimentTreatments"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appStoreVersionExperiments]`.
                internal typealias fields_lbrack_appStoreVersionExperiments_rbrack_Payload = [Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersionExperiments_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appStoreVersionExperiments
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/fields[appStoreVersionExperiments]`.
                internal var fields_lbrack_appStoreVersionExperiments_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersionExperiments_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit`.
                internal var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                }
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/include`.
                internal typealias includePayload = [Operations.apps_getCollection.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/include`.
                internal var include: Operations.apps_getCollection.Input.Query.includePayload?
                /// maximum number of related appClips returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appClips]`.
                internal var limit_lbrack_appClips_rbrack_: Swift.Int?
                /// maximum number of related appCustomProductPages returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appCustomProductPages]`.
                internal var limit_lbrack_appCustomProductPages_rbrack_: Swift.Int?
                /// maximum number of related appEncryptionDeclarations returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appEncryptionDeclarations]`.
                internal var limit_lbrack_appEncryptionDeclarations_rbrack_: Swift.Int?
                /// maximum number of related appEvents returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appEvents]`.
                internal var limit_lbrack_appEvents_rbrack_: Swift.Int?
                /// maximum number of related appInfos returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appInfos]`.
                internal var limit_lbrack_appInfos_rbrack_: Swift.Int?
                /// maximum number of related appStoreVersionExperimentsV2 returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appStoreVersionExperimentsV2]`.
                internal var limit_lbrack_appStoreVersionExperimentsV2_rbrack_: Swift.Int?
                /// maximum number of related appStoreVersions returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[appStoreVersions]`.
                internal var limit_lbrack_appStoreVersions_rbrack_: Swift.Int?
                /// maximum number of related betaAppLocalizations returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[betaAppLocalizations]`.
                internal var limit_lbrack_betaAppLocalizations_rbrack_: Swift.Int?
                /// maximum number of related betaGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[betaGroups]`.
                internal var limit_lbrack_betaGroups_rbrack_: Swift.Int?
                /// maximum number of related builds returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[builds]`.
                internal var limit_lbrack_builds_rbrack_: Swift.Int?
                /// maximum number of related gameCenterEnabledVersions returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[gameCenterEnabledVersions]`.
                @available(*, deprecated)
                internal var limit_lbrack_gameCenterEnabledVersions_rbrack_: Swift.Int?
                /// maximum number of related inAppPurchases returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[inAppPurchases]`.
                @available(*, deprecated)
                internal var limit_lbrack_inAppPurchases_rbrack_: Swift.Int?
                /// maximum number of related inAppPurchasesV2 returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[inAppPurchasesV2]`.
                internal var limit_lbrack_inAppPurchasesV2_rbrack_: Swift.Int?
                /// maximum number of related preReleaseVersions returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[preReleaseVersions]`.
                internal var limit_lbrack_preReleaseVersions_rbrack_: Swift.Int?
                /// maximum number of related promotedPurchases returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[promotedPurchases]`.
                internal var limit_lbrack_promotedPurchases_rbrack_: Swift.Int?
                /// maximum number of related reviewSubmissions returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[reviewSubmissions]`.
                internal var limit_lbrack_reviewSubmissions_rbrack_: Swift.Int?
                /// maximum number of related subscriptionGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/apps/GET/query/limit[subscriptionGroups]`.
                internal var limit_lbrack_subscriptionGroups_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_name_rbrack_: filter by attribute 'name'
                ///   - filter_lbrack_bundleId_rbrack_: filter by attribute 'bundleId'
                ///   - filter_lbrack_sku_rbrack_: filter by attribute 'sku'
                ///   - filter_lbrack_appStoreVersions_period_appStoreState_rbrack_: filter by attribute 'appStoreVersions.appStoreState'
                ///   - filter_lbrack_appStoreVersions_period_platform_rbrack_: filter by attribute 'appStoreVersions.platform'
                ///   - filter_lbrack_appStoreVersions_period_appVersionState_rbrack_: filter by attribute 'appStoreVersions.appVersionState'
                ///   - filter_lbrack_reviewSubmissions_period_state_rbrack_: filter by attribute 'reviewSubmissions.state'
                ///   - filter_lbrack_reviewSubmissions_period_platform_rbrack_: filter by attribute 'reviewSubmissions.platform'
                ///   - filter_lbrack_appStoreVersions_rbrack_: filter by id(s) of related 'appStoreVersions'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - exists_lbrack_gameCenterEnabledVersions_rbrack_: filter by existence or non-existence of related 'gameCenterEnabledVersions'
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_appEncryptionDeclarations_rbrack_: the fields to include for returned resources of type appEncryptionDeclarations
                ///   - fields_lbrack_ciProducts_rbrack_: the fields to include for returned resources of type ciProducts
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - fields_lbrack_appStoreVersions_rbrack_: the fields to include for returned resources of type appStoreVersions
                ///   - fields_lbrack_preReleaseVersions_rbrack_: the fields to include for returned resources of type preReleaseVersions
                ///   - fields_lbrack_betaAppLocalizations_rbrack_: the fields to include for returned resources of type betaAppLocalizations
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_betaLicenseAgreements_rbrack_: the fields to include for returned resources of type betaLicenseAgreements
                ///   - fields_lbrack_betaAppReviewDetails_rbrack_: the fields to include for returned resources of type betaAppReviewDetails
                ///   - fields_lbrack_appInfos_rbrack_: the fields to include for returned resources of type appInfos
                ///   - fields_lbrack_appClips_rbrack_: the fields to include for returned resources of type appClips
                ///   - fields_lbrack_endUserLicenseAgreements_rbrack_: the fields to include for returned resources of type endUserLicenseAgreements
                ///   - fields_lbrack_inAppPurchases_rbrack_: the fields to include for returned resources of type inAppPurchases
                ///   - fields_lbrack_subscriptionGroups_rbrack_: the fields to include for returned resources of type subscriptionGroups
                ///   - fields_lbrack_gameCenterEnabledVersions_rbrack_: the fields to include for returned resources of type gameCenterEnabledVersions
                ///   - fields_lbrack_appCustomProductPages_rbrack_: the fields to include for returned resources of type appCustomProductPages
                ///   - fields_lbrack_promotedPurchases_rbrack_: the fields to include for returned resources of type promotedPurchases
                ///   - fields_lbrack_appEvents_rbrack_: the fields to include for returned resources of type appEvents
                ///   - fields_lbrack_reviewSubmissions_rbrack_: the fields to include for returned resources of type reviewSubmissions
                ///   - fields_lbrack_subscriptionGracePeriods_rbrack_: the fields to include for returned resources of type subscriptionGracePeriods
                ///   - fields_lbrack_gameCenterDetails_rbrack_: the fields to include for returned resources of type gameCenterDetails
                ///   - fields_lbrack_appStoreVersionExperiments_rbrack_: the fields to include for returned resources of type appStoreVersionExperiments
                ///   - limit: maximum resources per page
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_appClips_rbrack_: maximum number of related appClips returned (when they are included)
                ///   - limit_lbrack_appCustomProductPages_rbrack_: maximum number of related appCustomProductPages returned (when they are included)
                ///   - limit_lbrack_appEncryptionDeclarations_rbrack_: maximum number of related appEncryptionDeclarations returned (when they are included)
                ///   - limit_lbrack_appEvents_rbrack_: maximum number of related appEvents returned (when they are included)
                ///   - limit_lbrack_appInfos_rbrack_: maximum number of related appInfos returned (when they are included)
                ///   - limit_lbrack_appStoreVersionExperimentsV2_rbrack_: maximum number of related appStoreVersionExperimentsV2 returned (when they are included)
                ///   - limit_lbrack_appStoreVersions_rbrack_: maximum number of related appStoreVersions returned (when they are included)
                ///   - limit_lbrack_betaAppLocalizations_rbrack_: maximum number of related betaAppLocalizations returned (when they are included)
                ///   - limit_lbrack_betaGroups_rbrack_: maximum number of related betaGroups returned (when they are included)
                ///   - limit_lbrack_builds_rbrack_: maximum number of related builds returned (when they are included)
                ///   - limit_lbrack_gameCenterEnabledVersions_rbrack_: maximum number of related gameCenterEnabledVersions returned (when they are included)
                ///   - limit_lbrack_inAppPurchases_rbrack_: maximum number of related inAppPurchases returned (when they are included)
                ///   - limit_lbrack_inAppPurchasesV2_rbrack_: maximum number of related inAppPurchasesV2 returned (when they are included)
                ///   - limit_lbrack_preReleaseVersions_rbrack_: maximum number of related preReleaseVersions returned (when they are included)
                ///   - limit_lbrack_promotedPurchases_rbrack_: maximum number of related promotedPurchases returned (when they are included)
                ///   - limit_lbrack_reviewSubmissions_rbrack_: maximum number of related reviewSubmissions returned (when they are included)
                ///   - limit_lbrack_subscriptionGroups_rbrack_: maximum number of related subscriptionGroups returned (when they are included)
                internal init(
                    filter_lbrack_name_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_bundleId_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_sku_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_appStoreVersions_period_appStoreState_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appStoreState_rbrack_Payload? = nil,
                    filter_lbrack_appStoreVersions_period_platform_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_platform_rbrack_Payload? = nil,
                    filter_lbrack_appStoreVersions_period_appVersionState_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_appStoreVersions_period_appVersionState_rbrack_Payload? = nil,
                    filter_lbrack_reviewSubmissions_period_state_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_state_rbrack_Payload? = nil,
                    filter_lbrack_reviewSubmissions_period_platform_rbrack_: Operations.apps_getCollection.Input.Query.filter_lbrack_reviewSubmissions_period_platform_rbrack_Payload? = nil,
                    filter_lbrack_appStoreVersions_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    exists_lbrack_gameCenterEnabledVersions_rbrack_: Swift.Bool? = nil,
                    sort: Operations.apps_getCollection.Input.Query.sortPayload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload? = nil,
                    fields_lbrack_ciProducts_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_ciProducts_rbrack_Payload? = nil,
                    fields_lbrack_betaGroups_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    fields_lbrack_appStoreVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload? = nil,
                    fields_lbrack_preReleaseVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload? = nil,
                    fields_lbrack_betaAppLocalizations_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppLocalizations_rbrack_Payload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_betaLicenseAgreements_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaLicenseAgreements_rbrack_Payload? = nil,
                    fields_lbrack_betaAppReviewDetails_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_betaAppReviewDetails_rbrack_Payload? = nil,
                    fields_lbrack_appInfos_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appInfos_rbrack_Payload? = nil,
                    fields_lbrack_appClips_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appClips_rbrack_Payload? = nil,
                    fields_lbrack_endUserLicenseAgreements_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_endUserLicenseAgreements_rbrack_Payload? = nil,
                    fields_lbrack_inAppPurchases_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_inAppPurchases_rbrack_Payload? = nil,
                    fields_lbrack_subscriptionGroups_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGroups_rbrack_Payload? = nil,
                    fields_lbrack_gameCenterEnabledVersions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterEnabledVersions_rbrack_Payload? = nil,
                    fields_lbrack_appCustomProductPages_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appCustomProductPages_rbrack_Payload? = nil,
                    fields_lbrack_promotedPurchases_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_promotedPurchases_rbrack_Payload? = nil,
                    fields_lbrack_appEvents_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appEvents_rbrack_Payload? = nil,
                    fields_lbrack_reviewSubmissions_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_reviewSubmissions_rbrack_Payload? = nil,
                    fields_lbrack_subscriptionGracePeriods_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_subscriptionGracePeriods_rbrack_Payload? = nil,
                    fields_lbrack_gameCenterDetails_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_gameCenterDetails_rbrack_Payload? = nil,
                    fields_lbrack_appStoreVersionExperiments_rbrack_: Operations.apps_getCollection.Input.Query.fields_lbrack_appStoreVersionExperiments_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil,
                    include: Operations.apps_getCollection.Input.Query.includePayload? = nil,
                    limit_lbrack_appClips_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appCustomProductPages_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appEncryptionDeclarations_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appEvents_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appInfos_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appStoreVersionExperimentsV2_rbrack_: Swift.Int? = nil,
                    limit_lbrack_appStoreVersions_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaAppLocalizations_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaGroups_rbrack_: Swift.Int? = nil,
                    limit_lbrack_builds_rbrack_: Swift.Int? = nil,
                    limit_lbrack_gameCenterEnabledVersions_rbrack_: Swift.Int? = nil,
                    limit_lbrack_inAppPurchases_rbrack_: Swift.Int? = nil,
                    limit_lbrack_inAppPurchasesV2_rbrack_: Swift.Int? = nil,
                    limit_lbrack_preReleaseVersions_rbrack_: Swift.Int? = nil,
                    limit_lbrack_promotedPurchases_rbrack_: Swift.Int? = nil,
                    limit_lbrack_reviewSubmissions_rbrack_: Swift.Int? = nil,
                    limit_lbrack_subscriptionGroups_rbrack_: Swift.Int? = nil
                ) {
                    self.filter_lbrack_name_rbrack_ = filter_lbrack_name_rbrack_
                    self.filter_lbrack_bundleId_rbrack_ = filter_lbrack_bundleId_rbrack_
                    self.filter_lbrack_sku_rbrack_ = filter_lbrack_sku_rbrack_
                    self.filter_lbrack_appStoreVersions_period_appStoreState_rbrack_ = filter_lbrack_appStoreVersions_period_appStoreState_rbrack_
                    self.filter_lbrack_appStoreVersions_period_platform_rbrack_ = filter_lbrack_appStoreVersions_period_platform_rbrack_
                    self.filter_lbrack_appStoreVersions_period_appVersionState_rbrack_ = filter_lbrack_appStoreVersions_period_appVersionState_rbrack_
                    self.filter_lbrack_reviewSubmissions_period_state_rbrack_ = filter_lbrack_reviewSubmissions_period_state_rbrack_
                    self.filter_lbrack_reviewSubmissions_period_platform_rbrack_ = filter_lbrack_reviewSubmissions_period_platform_rbrack_
                    self.filter_lbrack_appStoreVersions_rbrack_ = filter_lbrack_appStoreVersions_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.exists_lbrack_gameCenterEnabledVersions_rbrack_ = exists_lbrack_gameCenterEnabledVersions_rbrack_
                    self.sort = sort
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_appEncryptionDeclarations_rbrack_ = fields_lbrack_appEncryptionDeclarations_rbrack_
                    self.fields_lbrack_ciProducts_rbrack_ = fields_lbrack_ciProducts_rbrack_
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.fields_lbrack_appStoreVersions_rbrack_ = fields_lbrack_appStoreVersions_rbrack_
                    self.fields_lbrack_preReleaseVersions_rbrack_ = fields_lbrack_preReleaseVersions_rbrack_
                    self.fields_lbrack_betaAppLocalizations_rbrack_ = fields_lbrack_betaAppLocalizations_rbrack_
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_betaLicenseAgreements_rbrack_ = fields_lbrack_betaLicenseAgreements_rbrack_
                    self.fields_lbrack_betaAppReviewDetails_rbrack_ = fields_lbrack_betaAppReviewDetails_rbrack_
                    self.fields_lbrack_appInfos_rbrack_ = fields_lbrack_appInfos_rbrack_
                    self.fields_lbrack_appClips_rbrack_ = fields_lbrack_appClips_rbrack_
                    self.fields_lbrack_endUserLicenseAgreements_rbrack_ = fields_lbrack_endUserLicenseAgreements_rbrack_
                    self.fields_lbrack_inAppPurchases_rbrack_ = fields_lbrack_inAppPurchases_rbrack_
                    self.fields_lbrack_subscriptionGroups_rbrack_ = fields_lbrack_subscriptionGroups_rbrack_
                    self.fields_lbrack_gameCenterEnabledVersions_rbrack_ = fields_lbrack_gameCenterEnabledVersions_rbrack_
                    self.fields_lbrack_appCustomProductPages_rbrack_ = fields_lbrack_appCustomProductPages_rbrack_
                    self.fields_lbrack_promotedPurchases_rbrack_ = fields_lbrack_promotedPurchases_rbrack_
                    self.fields_lbrack_appEvents_rbrack_ = fields_lbrack_appEvents_rbrack_
                    self.fields_lbrack_reviewSubmissions_rbrack_ = fields_lbrack_reviewSubmissions_rbrack_
                    self.fields_lbrack_subscriptionGracePeriods_rbrack_ = fields_lbrack_subscriptionGracePeriods_rbrack_
                    self.fields_lbrack_gameCenterDetails_rbrack_ = fields_lbrack_gameCenterDetails_rbrack_
                    self.fields_lbrack_appStoreVersionExperiments_rbrack_ = fields_lbrack_appStoreVersionExperiments_rbrack_
                    self.limit = limit
                    self.include = include
                    self.limit_lbrack_appClips_rbrack_ = limit_lbrack_appClips_rbrack_
                    self.limit_lbrack_appCustomProductPages_rbrack_ = limit_lbrack_appCustomProductPages_rbrack_
                    self.limit_lbrack_appEncryptionDeclarations_rbrack_ = limit_lbrack_appEncryptionDeclarations_rbrack_
                    self.limit_lbrack_appEvents_rbrack_ = limit_lbrack_appEvents_rbrack_
                    self.limit_lbrack_appInfos_rbrack_ = limit_lbrack_appInfos_rbrack_
                    self.limit_lbrack_appStoreVersionExperimentsV2_rbrack_ = limit_lbrack_appStoreVersionExperimentsV2_rbrack_
                    self.limit_lbrack_appStoreVersions_rbrack_ = limit_lbrack_appStoreVersions_rbrack_
                    self.limit_lbrack_betaAppLocalizations_rbrack_ = limit_lbrack_betaAppLocalizations_rbrack_
                    self.limit_lbrack_betaGroups_rbrack_ = limit_lbrack_betaGroups_rbrack_
                    self.limit_lbrack_builds_rbrack_ = limit_lbrack_builds_rbrack_
                    self.limit_lbrack_gameCenterEnabledVersions_rbrack_ = limit_lbrack_gameCenterEnabledVersions_rbrack_
                    self.limit_lbrack_inAppPurchases_rbrack_ = limit_lbrack_inAppPurchases_rbrack_
                    self.limit_lbrack_inAppPurchasesV2_rbrack_ = limit_lbrack_inAppPurchasesV2_rbrack_
                    self.limit_lbrack_preReleaseVersions_rbrack_ = limit_lbrack_preReleaseVersions_rbrack_
                    self.limit_lbrack_promotedPurchases_rbrack_ = limit_lbrack_promotedPurchases_rbrack_
                    self.limit_lbrack_reviewSubmissions_rbrack_ = limit_lbrack_reviewSubmissions_rbrack_
                    self.limit_lbrack_subscriptionGroups_rbrack_ = limit_lbrack_subscriptionGroups_rbrack_
                }
            }
            internal var query: Operations.apps_getCollection.Input.Query
            /// - Remark: Generated from `#/paths/v1/apps/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.apps_getCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.apps_getCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.apps_getCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.apps_getCollection.Input.Query = .init(),
                headers: Operations.apps_getCollection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_getCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_getCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.apps_getCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.apps_getCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_getCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_getCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.apps_getCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.apps_getCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_getCollection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_getCollection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.apps_getCollection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.apps_getCollection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.AppsResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_getCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_getCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of Apps
            ///
            /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.apps_getCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.apps_getCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_getCollection.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_getCollection.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/apps/get(apps_getCollection)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.apps_getCollection.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.apps_getCollection.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/apps/{id}/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)`.
    internal enum apps_betaGroups_getToManyRelated {
        internal static let id: Swift.String = "apps_betaGroups_getToManyRelated"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.apps_betaGroups_getToManyRelated.Input.Path
            /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.apps_betaGroups_getToManyRelated.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.apps_betaGroups_getToManyRelated.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - limit: maximum resources per page
                internal init(
                    fields_lbrack_betaGroups_rbrack_: Operations.apps_betaGroups_getToManyRelated.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.limit = limit
                }
            }
            internal var query: Operations.apps_betaGroups_getToManyRelated.Input.Query
            /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.apps_betaGroups_getToManyRelated.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.apps_betaGroups_getToManyRelated.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.apps_betaGroups_getToManyRelated.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.apps_betaGroups_getToManyRelated.Input.Path,
                query: Operations.apps_betaGroups_getToManyRelated.Input.Query = .init(),
                headers: Operations.apps_betaGroups_getToManyRelated.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.apps_betaGroups_getToManyRelated.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.apps_betaGroups_getToManyRelated.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.apps_betaGroups_getToManyRelated.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.apps_betaGroups_getToManyRelated.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.apps_betaGroups_getToManyRelated.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.apps_betaGroups_getToManyRelated.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.apps_betaGroups_getToManyRelated.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.apps_betaGroups_getToManyRelated.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaGroupsWithoutIncludesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaGroupsWithoutIncludesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of BetaGroups with get
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.apps_betaGroups_getToManyRelated.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.apps_betaGroups_getToManyRelated.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/apps/{id}/betaGroups/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.apps_betaGroups_getToManyRelated.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.apps_betaGroups_getToManyRelated.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/apps/{id}/betaGroups/get(apps_betaGroups_getToManyRelated)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.apps_betaGroups_getToManyRelated.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.apps_betaGroups_getToManyRelated.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
