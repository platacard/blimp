// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// - Remark: HTTP `GET /v1/certificates`.
    /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)`.
    func certificates_hyphen_get_collection(_ input: Operations.certificates_hyphen_get_collection.Input) async throws -> Operations.certificates_hyphen_get_collection.Output
    /// - Remark: HTTP `POST /v1/devices`.
    /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)`.
    func devices_hyphen_create_instance(_ input: Operations.devices_hyphen_create_instance.Input) async throws -> Operations.devices_hyphen_create_instance.Output
    /// - Remark: HTTP `GET /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)`.
    func profiles_hyphen_get_collection(_ input: Operations.profiles_hyphen_get_collection.Input) async throws -> Operations.profiles_hyphen_get_collection.Output
    /// - Remark: HTTP `POST /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)`.
    func profiles_hyphen_create_instance(_ input: Operations.profiles_hyphen_create_instance.Input) async throws -> Operations.profiles_hyphen_create_instance.Output
    /// - Remark: HTTP `DELETE /v1/profiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)`.
    func profiles_hyphen_delete_instance(_ input: Operations.profiles_hyphen_delete_instance.Input) async throws -> Operations.profiles_hyphen_delete_instance.Output
    /// - Remark: HTTP `GET /v1/bundleIds/{id}/profiles`.
    /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)`.
    func bundleIds_hyphen_profiles_hyphen_get_to_many_related(_ input: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input) async throws -> Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// - Remark: HTTP `GET /v1/certificates`.
    /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)`.
    internal func certificates_hyphen_get_collection(
        query: Operations.certificates_hyphen_get_collection.Input.Query = .init(),
        headers: Operations.certificates_hyphen_get_collection.Input.Headers = .init()
    ) async throws -> Operations.certificates_hyphen_get_collection.Output {
        try await certificates_hyphen_get_collection(Operations.certificates_hyphen_get_collection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/devices`.
    /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)`.
    internal func devices_hyphen_create_instance(
        headers: Operations.devices_hyphen_create_instance.Input.Headers = .init(),
        body: Operations.devices_hyphen_create_instance.Input.Body
    ) async throws -> Operations.devices_hyphen_create_instance.Output {
        try await devices_hyphen_create_instance(Operations.devices_hyphen_create_instance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)`.
    internal func profiles_hyphen_get_collection(
        query: Operations.profiles_hyphen_get_collection.Input.Query = .init(),
        headers: Operations.profiles_hyphen_get_collection.Input.Headers = .init()
    ) async throws -> Operations.profiles_hyphen_get_collection.Output {
        try await profiles_hyphen_get_collection(Operations.profiles_hyphen_get_collection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)`.
    internal func profiles_hyphen_create_instance(
        headers: Operations.profiles_hyphen_create_instance.Input.Headers = .init(),
        body: Operations.profiles_hyphen_create_instance.Input.Body
    ) async throws -> Operations.profiles_hyphen_create_instance.Output {
        try await profiles_hyphen_create_instance(Operations.profiles_hyphen_create_instance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /v1/profiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)`.
    internal func profiles_hyphen_delete_instance(
        path: Operations.profiles_hyphen_delete_instance.Input.Path,
        headers: Operations.profiles_hyphen_delete_instance.Input.Headers = .init()
    ) async throws -> Operations.profiles_hyphen_delete_instance.Output {
        try await profiles_hyphen_delete_instance(Operations.profiles_hyphen_delete_instance.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/bundleIds/{id}/profiles`.
    /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)`.
    internal func bundleIds_hyphen_profiles_hyphen_get_to_many_related(
        path: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Path,
        query: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query = .init(),
        headers: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Headers = .init()
    ) async throws -> Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output {
        try await bundleIds_hyphen_profiles_hyphen_get_to_many_related(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal enum Server1 {
        internal static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
                variables: []
            )
        }
    }
    @available(*, deprecated, renamed: "Servers.Server1.url")
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/BundleId`.
        internal struct BundleId: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BundleId/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case bundleIds = "bundleIds"
            }
            /// - Remark: Generated from `#/components/schemas/BundleId/type`.
            internal var _type: Components.Schemas.BundleId._typePayload
            /// - Remark: Generated from `#/components/schemas/BundleId/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BundleId/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BundleId/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BundleId/attributes/platform`.
                internal var platform: Components.Schemas.BundleIdPlatform?
                /// - Remark: Generated from `#/components/schemas/BundleId/attributes/identifier`.
                internal var identifier: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BundleId/attributes/seedId`.
                internal var seedId: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - platform:
                ///   - identifier:
                ///   - seedId:
                internal init(
                    name: Swift.String? = nil,
                    platform: Components.Schemas.BundleIdPlatform? = nil,
                    identifier: Swift.String? = nil,
                    seedId: Swift.String? = nil
                ) {
                    self.name = name
                    self.platform = platform
                    self.identifier = identifier
                    self.seedId = seedId
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case platform
                    case identifier
                    case seedId
                }
            }
            /// - Remark: Generated from `#/components/schemas/BundleId/attributes`.
            internal var attributes: Components.Schemas.BundleId.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BundleId/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles`.
                internal struct profilesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/links`.
                    internal var links: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case profiles = "profiles"
                        }
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/dataPayload/type`.
                        internal var _type: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/data`.
                    internal typealias dataPayload = [Components.Schemas.BundleId.relationshipsPayload.profilesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles/data`.
                    internal var data: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.dataPayload?
                    /// Creates a new `profilesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.linksPayload? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BundleId.relationshipsPayload.profilesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/profiles`.
                internal var profiles: Components.Schemas.BundleId.relationshipsPayload.profilesPayload?
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities`.
                internal struct bundleIdCapabilitiesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/links`.
                    internal var links: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case bundleIdCapabilities = "bundleIdCapabilities"
                        }
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/dataPayload/type`.
                        internal var _type: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/data`.
                    internal typealias dataPayload = [Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities/data`.
                    internal var data: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.dataPayload?
                    /// Creates a new `bundleIdCapabilitiesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.linksPayload? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/bundleIdCapabilities`.
                internal var bundleIdCapabilities: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload?
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/links`.
                    internal var links: Components.Schemas.BundleId.relationshipsPayload.appPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BundleId.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BundleId.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app/data`.
                    internal var data: Components.Schemas.BundleId.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.BundleId.relationshipsPayload.appPayload.linksPayload? = nil,
                        data: Components.Schemas.BundleId.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BundleId/relationships/app`.
                internal var app: Components.Schemas.BundleId.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - profiles:
                ///   - bundleIdCapabilities:
                ///   - app:
                internal init(
                    profiles: Components.Schemas.BundleId.relationshipsPayload.profilesPayload? = nil,
                    bundleIdCapabilities: Components.Schemas.BundleId.relationshipsPayload.bundleIdCapabilitiesPayload? = nil,
                    app: Components.Schemas.BundleId.relationshipsPayload.appPayload? = nil
                ) {
                    self.profiles = profiles
                    self.bundleIdCapabilities = bundleIdCapabilities
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case profiles
                    case bundleIdCapabilities
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/BundleId/relationships`.
            internal var relationships: Components.Schemas.BundleId.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BundleId/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BundleId`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BundleId._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BundleId.attributesPayload? = nil,
                relationships: Components.Schemas.BundleId.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/Certificate`.
        internal struct Certificate: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Certificate/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case certificates = "certificates"
            }
            /// - Remark: Generated from `#/components/schemas/Certificate/type`.
            internal var _type: Components.Schemas.Certificate._typePayload
            /// - Remark: Generated from `#/components/schemas/Certificate/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Certificate/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/certificateType`.
                internal var certificateType: Components.Schemas.CertificateType?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/displayName`.
                internal var displayName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/serialNumber`.
                internal var serialNumber: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/platform`.
                internal var platform: Components.Schemas.BundleIdPlatform?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/expirationDate`.
                internal var expirationDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Certificate/attributes/certificateContent`.
                internal var certificateContent: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - certificateType:
                ///   - displayName:
                ///   - serialNumber:
                ///   - platform:
                ///   - expirationDate:
                ///   - certificateContent:
                internal init(
                    name: Swift.String? = nil,
                    certificateType: Components.Schemas.CertificateType? = nil,
                    displayName: Swift.String? = nil,
                    serialNumber: Swift.String? = nil,
                    platform: Components.Schemas.BundleIdPlatform? = nil,
                    expirationDate: Foundation.Date? = nil,
                    certificateContent: Swift.String? = nil
                ) {
                    self.name = name
                    self.certificateType = certificateType
                    self.displayName = displayName
                    self.serialNumber = serialNumber
                    self.platform = platform
                    self.expirationDate = expirationDate
                    self.certificateContent = certificateContent
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case certificateType
                    case displayName
                    case serialNumber
                    case platform
                    case expirationDate
                    case certificateContent
                }
            }
            /// - Remark: Generated from `#/components/schemas/Certificate/attributes`.
            internal var attributes: Components.Schemas.Certificate.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/Certificate/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `Certificate`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.Certificate._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.Certificate.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/CertificatesResponse`.
        internal struct CertificatesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CertificatesResponse/data`.
            internal var data: [Components.Schemas.Certificate]
            /// - Remark: Generated from `#/components/schemas/CertificatesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/CertificatesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `CertificatesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.Certificate],
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/Device`.
        internal struct Device: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Device/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case devices = "devices"
            }
            /// - Remark: Generated from `#/components/schemas/Device/type`.
            internal var _type: Components.Schemas.Device._typePayload
            /// - Remark: Generated from `#/components/schemas/Device/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Device/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Device/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/platform`.
                internal var platform: Components.Schemas.BundleIdPlatform?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/udid`.
                internal var udid: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/deviceClass`.
                internal enum deviceClassPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APPLE_WATCH = "APPLE_WATCH"
                    case IPAD = "IPAD"
                    case IPHONE = "IPHONE"
                    case IPOD = "IPOD"
                    case APPLE_TV = "APPLE_TV"
                    case MAC = "MAC"
                }
                /// - Remark: Generated from `#/components/schemas/Device/attributes/deviceClass`.
                internal var deviceClass: Components.Schemas.Device.attributesPayload.deviceClassPayload?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/status`.
                internal enum statusPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ENABLED = "ENABLED"
                    case DISABLED = "DISABLED"
                }
                /// - Remark: Generated from `#/components/schemas/Device/attributes/status`.
                internal var status: Components.Schemas.Device.attributesPayload.statusPayload?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/model`.
                internal var model: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Device/attributes/addedDate`.
                internal var addedDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - platform:
                ///   - udid:
                ///   - deviceClass:
                ///   - status:
                ///   - model:
                ///   - addedDate:
                internal init(
                    name: Swift.String? = nil,
                    platform: Components.Schemas.BundleIdPlatform? = nil,
                    udid: Swift.String? = nil,
                    deviceClass: Components.Schemas.Device.attributesPayload.deviceClassPayload? = nil,
                    status: Components.Schemas.Device.attributesPayload.statusPayload? = nil,
                    model: Swift.String? = nil,
                    addedDate: Foundation.Date? = nil
                ) {
                    self.name = name
                    self.platform = platform
                    self.udid = udid
                    self.deviceClass = deviceClass
                    self.status = status
                    self.model = model
                    self.addedDate = addedDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case platform
                    case udid
                    case deviceClass
                    case status
                    case model
                    case addedDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/Device/attributes`.
            internal var attributes: Components.Schemas.Device.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/Device/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `Device`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.Device._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.Device.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/DeviceResponse`.
        internal struct DeviceResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DeviceResponse/data`.
            internal var data: Components.Schemas.Device
            /// - Remark: Generated from `#/components/schemas/DeviceResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `DeviceResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            internal init(
                data: Components.Schemas.Device,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest`.
        internal struct DeviceCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case devices = "devices"
                }
                /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/type`.
                internal var _type: Components.Schemas.DeviceCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/attributes/name`.
                    internal var name: Swift.String
                    /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/attributes/platform`.
                    internal var platform: Components.Schemas.BundleIdPlatform
                    /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/attributes/udid`.
                    internal var udid: Swift.String
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - name:
                    ///   - platform:
                    ///   - udid:
                    internal init(
                        name: Swift.String,
                        platform: Components.Schemas.BundleIdPlatform,
                        udid: Swift.String
                    ) {
                        self.name = name
                        self.platform = platform
                        self.udid = udid
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case name
                        case platform
                        case udid
                    }
                }
                /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.DeviceCreateRequest.dataPayload.attributesPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                internal init(
                    _type: Components.Schemas.DeviceCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.DeviceCreateRequest.dataPayload.attributesPayload
                ) {
                    self._type = _type
                    self.attributes = attributes
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                }
            }
            /// - Remark: Generated from `#/components/schemas/DeviceCreateRequest/data`.
            internal var data: Components.Schemas.DeviceCreateRequest.dataPayload
            /// Creates a new `DeviceCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.DeviceCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Profile`.
        internal struct Profile: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Profile/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case profiles = "profiles"
            }
            /// - Remark: Generated from `#/components/schemas/Profile/type`.
            internal var _type: Components.Schemas.Profile._typePayload
            /// - Remark: Generated from `#/components/schemas/Profile/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Profile/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/platform`.
                internal var platform: Components.Schemas.BundleIdPlatform?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/profileType`.
                internal enum profileTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS_APP_DEVELOPMENT = "IOS_APP_DEVELOPMENT"
                    case IOS_APP_STORE = "IOS_APP_STORE"
                    case IOS_APP_ADHOC = "IOS_APP_ADHOC"
                    case IOS_APP_INHOUSE = "IOS_APP_INHOUSE"
                    case MAC_APP_DEVELOPMENT = "MAC_APP_DEVELOPMENT"
                    case MAC_APP_STORE = "MAC_APP_STORE"
                    case MAC_APP_DIRECT = "MAC_APP_DIRECT"
                    case TVOS_APP_DEVELOPMENT = "TVOS_APP_DEVELOPMENT"
                    case TVOS_APP_STORE = "TVOS_APP_STORE"
                    case TVOS_APP_ADHOC = "TVOS_APP_ADHOC"
                    case TVOS_APP_INHOUSE = "TVOS_APP_INHOUSE"
                    case MAC_CATALYST_APP_DEVELOPMENT = "MAC_CATALYST_APP_DEVELOPMENT"
                    case MAC_CATALYST_APP_STORE = "MAC_CATALYST_APP_STORE"
                    case MAC_CATALYST_APP_DIRECT = "MAC_CATALYST_APP_DIRECT"
                }
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/profileType`.
                internal var profileType: Components.Schemas.Profile.attributesPayload.profileTypePayload?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/profileState`.
                internal enum profileStatePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ACTIVE = "ACTIVE"
                    case INVALID = "INVALID"
                }
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/profileState`.
                internal var profileState: Components.Schemas.Profile.attributesPayload.profileStatePayload?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/profileContent`.
                internal var profileContent: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/uuid`.
                internal var uuid: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Profile/attributes/expirationDate`.
                internal var expirationDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - platform:
                ///   - profileType:
                ///   - profileState:
                ///   - profileContent:
                ///   - uuid:
                ///   - createdDate:
                ///   - expirationDate:
                internal init(
                    name: Swift.String? = nil,
                    platform: Components.Schemas.BundleIdPlatform? = nil,
                    profileType: Components.Schemas.Profile.attributesPayload.profileTypePayload? = nil,
                    profileState: Components.Schemas.Profile.attributesPayload.profileStatePayload? = nil,
                    profileContent: Swift.String? = nil,
                    uuid: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    expirationDate: Foundation.Date? = nil
                ) {
                    self.name = name
                    self.platform = platform
                    self.profileType = profileType
                    self.profileState = profileState
                    self.profileContent = profileContent
                    self.uuid = uuid
                    self.createdDate = createdDate
                    self.expirationDate = expirationDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case platform
                    case profileType
                    case profileState
                    case profileContent
                    case uuid
                    case createdDate
                    case expirationDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/Profile/attributes`.
            internal var attributes: Components.Schemas.Profile.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/Profile/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId`.
                internal struct bundleIdPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/links`.
                    internal var links: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case bundleIds = "bundleIds"
                        }
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/data/type`.
                        internal var _type: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId/data`.
                    internal var data: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.dataPayload?
                    /// Creates a new `bundleIdPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.linksPayload? = nil,
                        data: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/bundleId`.
                internal var bundleId: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload?
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices`.
                internal struct devicesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/links`.
                    internal var links: Components.Schemas.Profile.relationshipsPayload.devicesPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case devices = "devices"
                        }
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/dataPayload/type`.
                        internal var _type: Components.Schemas.Profile.relationshipsPayload.devicesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Profile.relationshipsPayload.devicesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/data`.
                    internal typealias dataPayload = [Components.Schemas.Profile.relationshipsPayload.devicesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices/data`.
                    internal var data: Components.Schemas.Profile.relationshipsPayload.devicesPayload.dataPayload?
                    /// Creates a new `devicesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.Profile.relationshipsPayload.devicesPayload.linksPayload? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Profile.relationshipsPayload.devicesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/devices`.
                internal var devices: Components.Schemas.Profile.relationshipsPayload.devicesPayload?
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates`.
                internal struct certificatesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/links`.
                    internal struct linksPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/links/self`.
                        internal var _self: Swift.String?
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/links/related`.
                        internal var related: Swift.String?
                        /// Creates a new `linksPayload`.
                        ///
                        /// - Parameters:
                        ///   - _self:
                        ///   - related:
                        internal init(
                            _self: Swift.String? = nil,
                            related: Swift.String? = nil
                        ) {
                            self._self = _self
                            self.related = related
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _self = "self"
                            case related
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/links`.
                    internal var links: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.linksPayload?
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case certificates = "certificates"
                        }
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/dataPayload/type`.
                        internal var _type: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/data`.
                    internal typealias dataPayload = [Components.Schemas.Profile.relationshipsPayload.certificatesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates/data`.
                    internal var data: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.dataPayload?
                    /// Creates a new `certificatesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.linksPayload? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Profile.relationshipsPayload.certificatesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Profile/relationships/certificates`.
                internal var certificates: Components.Schemas.Profile.relationshipsPayload.certificatesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - bundleId:
                ///   - devices:
                ///   - certificates:
                internal init(
                    bundleId: Components.Schemas.Profile.relationshipsPayload.bundleIdPayload? = nil,
                    devices: Components.Schemas.Profile.relationshipsPayload.devicesPayload? = nil,
                    certificates: Components.Schemas.Profile.relationshipsPayload.certificatesPayload? = nil
                ) {
                    self.bundleId = bundleId
                    self.devices = devices
                    self.certificates = certificates
                }
                internal enum CodingKeys: String, CodingKey {
                    case bundleId
                    case devices
                    case certificates
                }
            }
            /// - Remark: Generated from `#/components/schemas/Profile/relationships`.
            internal var relationships: Components.Schemas.Profile.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/Profile/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `Profile`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.Profile._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.Profile.attributesPayload? = nil,
                relationships: Components.Schemas.Profile.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ProfilesResponse`.
        internal struct ProfilesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/data`.
            internal var data: [Components.Schemas.Profile]
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ProfilesResponse/includedPayload/case1`.
                case BundleId(Components.Schemas.BundleId)
                /// - Remark: Generated from `#/components/schemas/ProfilesResponse/includedPayload/case2`.
                case Device(Components.Schemas.Device)
                /// - Remark: Generated from `#/components/schemas/ProfilesResponse/includedPayload/case3`.
                case Certificate(Components.Schemas.Certificate)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .BundleId(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .Device(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .Certificate(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .BundleId(value):
                        try value.encode(to: encoder)
                    case let .Device(value):
                        try value.encode(to: encoder)
                    case let .Certificate(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/included`.
            internal typealias includedPayload = [Components.Schemas.ProfilesResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/included`.
            internal var included: Components.Schemas.ProfilesResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/ProfilesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `ProfilesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.Profile],
                included: Components.Schemas.ProfilesResponse.includedPayload? = nil,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.included = included
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/ProfileResponse`.
        internal struct ProfileResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ProfileResponse/data`.
            internal var data: Components.Schemas.Profile
            /// - Remark: Generated from `#/components/schemas/ProfileResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ProfileResponse/includedPayload/case1`.
                case BundleId(Components.Schemas.BundleId)
                /// - Remark: Generated from `#/components/schemas/ProfileResponse/includedPayload/case2`.
                case Device(Components.Schemas.Device)
                /// - Remark: Generated from `#/components/schemas/ProfileResponse/includedPayload/case3`.
                case Certificate(Components.Schemas.Certificate)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .BundleId(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .Device(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .Certificate(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .BundleId(value):
                        try value.encode(to: encoder)
                    case let .Device(value):
                        try value.encode(to: encoder)
                    case let .Certificate(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ProfileResponse/included`.
            internal typealias includedPayload = [Components.Schemas.ProfileResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ProfileResponse/included`.
            internal var included: Components.Schemas.ProfileResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/ProfileResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `ProfileResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.Profile,
                included: Components.Schemas.ProfileResponse.includedPayload? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest`.
        internal struct ProfileCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case profiles = "profiles"
                }
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/type`.
                internal var _type: Components.Schemas.ProfileCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/attributes/name`.
                    internal var name: Swift.String
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/attributes/profileType`.
                    internal enum profileTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                        case IOS_APP_DEVELOPMENT = "IOS_APP_DEVELOPMENT"
                        case IOS_APP_STORE = "IOS_APP_STORE"
                        case IOS_APP_ADHOC = "IOS_APP_ADHOC"
                        case IOS_APP_INHOUSE = "IOS_APP_INHOUSE"
                        case MAC_APP_DEVELOPMENT = "MAC_APP_DEVELOPMENT"
                        case MAC_APP_STORE = "MAC_APP_STORE"
                        case MAC_APP_DIRECT = "MAC_APP_DIRECT"
                        case TVOS_APP_DEVELOPMENT = "TVOS_APP_DEVELOPMENT"
                        case TVOS_APP_STORE = "TVOS_APP_STORE"
                        case TVOS_APP_ADHOC = "TVOS_APP_ADHOC"
                        case TVOS_APP_INHOUSE = "TVOS_APP_INHOUSE"
                        case MAC_CATALYST_APP_DEVELOPMENT = "MAC_CATALYST_APP_DEVELOPMENT"
                        case MAC_CATALYST_APP_STORE = "MAC_CATALYST_APP_STORE"
                        case MAC_CATALYST_APP_DIRECT = "MAC_CATALYST_APP_DIRECT"
                    }
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/attributes/profileType`.
                    internal var profileType: Components.Schemas.ProfileCreateRequest.dataPayload.attributesPayload.profileTypePayload
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - name:
                    ///   - profileType:
                    internal init(
                        name: Swift.String,
                        profileType: Components.Schemas.ProfileCreateRequest.dataPayload.attributesPayload.profileTypePayload
                    ) {
                        self.name = name
                        self.profileType = profileType
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case name
                        case profileType
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.ProfileCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId`.
                    internal struct bundleIdPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case bundleIds = "bundleIds"
                            }
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId/data/type`.
                            internal var _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId/data`.
                        internal var data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload.dataPayload
                        /// Creates a new `bundleIdPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/bundleId`.
                    internal var bundleId: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices`.
                    internal struct devicesPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/dataPayload/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case devices = "devices"
                            }
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/dataPayload/type`.
                            internal var _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload.dataPayloadPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/dataPayload/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload.dataPayloadPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/data`.
                        internal typealias dataPayload = [Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices/data`.
                        internal var data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload.dataPayload?
                        /// Creates a new `devicesPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload.dataPayload? = nil) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/devices`.
                    internal var devices: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload?
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates`.
                    internal struct certificatesPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/dataPayload/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case certificates = "certificates"
                            }
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/dataPayload/type`.
                            internal var _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload.dataPayloadPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/dataPayload/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload.dataPayloadPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/data`.
                        internal typealias dataPayload = [Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates/data`.
                        internal var data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload.dataPayload
                        /// Creates a new `certificatesPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships/certificates`.
                    internal var certificates: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - bundleId:
                    ///   - devices:
                    ///   - certificates:
                    internal init(
                        bundleId: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.bundleIdPayload,
                        devices: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.devicesPayload? = nil,
                        certificates: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload.certificatesPayload
                    ) {
                        self.bundleId = bundleId
                        self.devices = devices
                        self.certificates = certificates
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case bundleId
                        case devices
                        case certificates
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.ProfileCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.ProfileCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.ProfileCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/ProfileCreateRequest/data`.
            internal var data: Components.Schemas.ProfileCreateRequest.dataPayload
            /// Creates a new `ProfileCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.ProfileCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/ProfilesWithoutIncludesResponse`.
        internal struct ProfilesWithoutIncludesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ProfilesWithoutIncludesResponse/data`.
            internal var data: [Components.Schemas.Profile]
            /// - Remark: Generated from `#/components/schemas/ProfilesWithoutIncludesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/ProfilesWithoutIncludesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `ProfilesWithoutIncludesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.Profile],
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorResponse`.
        internal struct ErrorResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload`.
            internal struct errorsPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/id`.
                internal var id: Swift.String?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/status`.
                internal var status: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/code`.
                internal var code: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/title`.
                internal var title: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/detail`.
                internal var detail: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal enum sourcePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case1`.
                    case ErrorSourcePointer(Components.Schemas.ErrorSourcePointer)
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case2`.
                    case ErrorSourceParameter(Components.Schemas.ErrorSourceParameter)
                    internal init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            self = .ErrorSourcePointer(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .ErrorSourceParameter(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        throw Swift.DecodingError.failedToDecodeOneOfSchema(
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        switch self {
                        case let .ErrorSourcePointer(value):
                            try value.encode(to: encoder)
                        case let .ErrorSourceParameter(value):
                            try value.encode(to: encoder)
                        }
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal var source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/links`.
                internal var links: Components.Schemas.ErrorLinks?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal struct metaPayload: Codable, Hashable, Sendable {
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer]
                    /// Creates a new `metaPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal var meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload?
                /// Creates a new `errorsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - status:
                ///   - code:
                ///   - title:
                ///   - detail:
                ///   - source:
                ///   - links:
                ///   - meta:
                internal init(
                    id: Swift.String? = nil,
                    status: Swift.String,
                    code: Swift.String,
                    title: Swift.String,
                    detail: Swift.String,
                    source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload? = nil,
                    links: Components.Schemas.ErrorLinks? = nil,
                    meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload? = nil
                ) {
                    self.id = id
                    self.status = status
                    self.code = code
                    self.title = title
                    self.detail = detail
                    self.source = source
                    self.links = links
                    self.meta = meta
                }
                internal enum CodingKeys: String, CodingKey {
                    case id
                    case status
                    case code
                    case title
                    case detail
                    case source
                    case links
                    case meta
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal typealias errorsPayload = [Components.Schemas.ErrorResponse.errorsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal var errors: Components.Schemas.ErrorResponse.errorsPayload?
            /// Creates a new `ErrorResponse`.
            ///
            /// - Parameters:
            ///   - errors:
            internal init(errors: Components.Schemas.ErrorResponse.errorsPayload? = nil) {
                self.errors = errors
            }
            internal enum CodingKeys: String, CodingKey {
                case errors
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter`.
        internal struct ErrorSourceParameter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter/parameter`.
            internal var parameter: Swift.String
            /// Creates a new `ErrorSourceParameter`.
            ///
            /// - Parameters:
            ///   - parameter:
            internal init(parameter: Swift.String) {
                self.parameter = parameter
            }
            internal enum CodingKeys: String, CodingKey {
                case parameter
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer`.
        internal struct ErrorSourcePointer: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer/pointer`.
            internal var pointer: Swift.String
            /// Creates a new `ErrorSourcePointer`.
            ///
            /// - Parameters:
            ///   - pointer:
            internal init(pointer: Swift.String) {
                self.pointer = pointer
            }
            internal enum CodingKeys: String, CodingKey {
                case pointer
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorLinks`.
        internal struct ErrorLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/about`.
            internal var about: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal enum associatedPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case1`.
                case case1(Swift.String)
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                internal struct Case2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/href`.
                    internal var href: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal struct metaPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta/source`.
                        internal var source: Swift.String?
                        /// Creates a new `metaPayload`.
                        ///
                        /// - Parameters:
                        ///   - source:
                        internal init(source: Swift.String? = nil) {
                            self.source = source
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case source
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal var meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload?
                    /// Creates a new `Case2Payload`.
                    ///
                    /// - Parameters:
                    ///   - href:
                    ///   - meta:
                    internal init(
                        href: Swift.String? = nil,
                        meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload? = nil
                    ) {
                        self.href = href
                        self.meta = meta
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case href
                        case meta
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                case case2(Components.Schemas.ErrorLinks.associatedPayload.Case2Payload)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .case1(try decoder.decodeFromSingleValueContainer())
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .case2(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .case1(value):
                        try encoder.encodeToSingleValueContainer(value)
                    case let .case2(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal var associated: Components.Schemas.ErrorLinks.associatedPayload?
            /// Creates a new `ErrorLinks`.
            ///
            /// - Parameters:
            ///   - about:
            ///   - associated:
            internal init(
                about: Swift.String? = nil,
                associated: Components.Schemas.ErrorLinks.associatedPayload? = nil
            ) {
                self.about = about
                self.associated = associated
            }
            internal enum CodingKeys: String, CodingKey {
                case about
                case associated
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks`.
        internal struct PagedDocumentLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/self`.
            internal var _self: Swift.String
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/first`.
            internal var first: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/next`.
            internal var next: Swift.String?
            /// Creates a new `PagedDocumentLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            ///   - first:
            ///   - next:
            internal init(
                _self: Swift.String,
                first: Swift.String? = nil,
                next: Swift.String? = nil
            ) {
                self._self = _self
                self.first = first
                self.next = next
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
                case first
                case next
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagingInformation`.
        internal struct PagingInformation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/total`.
                internal var total: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/limit`.
                internal var limit: Swift.Int
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - total:
                ///   - limit:
                internal init(
                    total: Swift.Int? = nil,
                    limit: Swift.Int
                ) {
                    self.total = total
                    self.limit = limit
                }
                internal enum CodingKeys: String, CodingKey {
                    case total
                    case limit
                }
            }
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal var paging: Components.Schemas.PagingInformation.pagingPayload
            /// Creates a new `PagingInformation`.
            ///
            /// - Parameters:
            ///   - paging:
            internal init(paging: Components.Schemas.PagingInformation.pagingPayload) {
                self.paging = paging
            }
            internal enum CodingKeys: String, CodingKey {
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/DocumentLinks`.
        internal struct DocumentLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DocumentLinks/self`.
            internal var _self: Swift.String
            /// Creates a new `DocumentLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            internal init(_self: Swift.String) {
                self._self = _self
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
            }
        }
        /// - Remark: Generated from `#/components/schemas/ResourceLinks`.
        internal struct ResourceLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ResourceLinks/self`.
            internal var _self: Swift.String?
            /// Creates a new `ResourceLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            internal init(_self: Swift.String? = nil) {
                self._self = _self
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
            }
        }
        /// - Remark: Generated from `#/components/schemas/BundleIdPlatform`.
        internal enum BundleIdPlatform: String, Codable, Hashable, Sendable, CaseIterable {
            case IOS = "IOS"
            case MAC_OS = "MAC_OS"
        }
        /// - Remark: Generated from `#/components/schemas/CertificateType`.
        internal enum CertificateType: String, Codable, Hashable, Sendable, CaseIterable {
            case IOS_DEVELOPMENT = "IOS_DEVELOPMENT"
            case IOS_DISTRIBUTION = "IOS_DISTRIBUTION"
            case MAC_APP_DISTRIBUTION = "MAC_APP_DISTRIBUTION"
            case MAC_INSTALLER_DISTRIBUTION = "MAC_INSTALLER_DISTRIBUTION"
            case MAC_APP_DEVELOPMENT = "MAC_APP_DEVELOPMENT"
            case DEVELOPER_ID_KEXT = "DEVELOPER_ID_KEXT"
            case DEVELOPER_ID_APPLICATION = "DEVELOPER_ID_APPLICATION"
            case DEVELOPMENT = "DEVELOPMENT"
            case DISTRIBUTION = "DISTRIBUTION"
            case PASS_TYPE_ID = "PASS_TYPE_ID"
            case PASS_TYPE_ID_WITH_NFC = "PASS_TYPE_ID_WITH_NFC"
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// - Remark: HTTP `GET /v1/certificates`.
    /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)`.
    internal enum certificates_hyphen_get_collection {
        internal static let id: Swift.String = "certificates-get_collection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/certificates/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter_lbrack_certificateType_rbrack_Payload`.
                internal enum filter_lbrack_certificateType_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS_DEVELOPMENT = "IOS_DEVELOPMENT"
                    case IOS_DISTRIBUTION = "IOS_DISTRIBUTION"
                    case MAC_APP_DISTRIBUTION = "MAC_APP_DISTRIBUTION"
                    case MAC_INSTALLER_DISTRIBUTION = "MAC_INSTALLER_DISTRIBUTION"
                    case MAC_APP_DEVELOPMENT = "MAC_APP_DEVELOPMENT"
                    case DEVELOPER_ID_KEXT = "DEVELOPER_ID_KEXT"
                    case DEVELOPER_ID_APPLICATION = "DEVELOPER_ID_APPLICATION"
                    case DEVELOPMENT = "DEVELOPMENT"
                    case DISTRIBUTION = "DISTRIBUTION"
                    case PASS_TYPE_ID = "PASS_TYPE_ID"
                    case PASS_TYPE_ID_WITH_NFC = "PASS_TYPE_ID_WITH_NFC"
                }
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter[certificateType]`.
                internal typealias filter_lbrack_certificateType_rbrack_Payload = [Operations.certificates_hyphen_get_collection.Input.Query.filter_lbrack_certificateType_rbrack_PayloadPayload]
                /// filter by attribute 'certificateType'
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter[certificateType]`.
                internal var filter_lbrack_certificateType_rbrack_: Operations.certificates_hyphen_get_collection.Input.Query.filter_lbrack_certificateType_rbrack_Payload?
                /// filter by attribute 'displayName'
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter[displayName]`.
                internal var filter_lbrack_displayName_rbrack_: [Swift.String]?
                /// filter by attribute 'serialNumber'
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter[serialNumber]`.
                internal var filter_lbrack_serialNumber_rbrack_: [Swift.String]?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case certificateType = "certificateType"
                    case _hyphen_certificateType = "-certificateType"
                    case displayName = "displayName"
                    case _hyphen_displayName = "-displayName"
                    case id = "id"
                    case _hyphen_id = "-id"
                    case serialNumber = "serialNumber"
                    case _hyphen_serialNumber = "-serialNumber"
                }
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/sort`.
                internal typealias sortPayload = [Operations.certificates_hyphen_get_collection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/sort`.
                internal var sort: Operations.certificates_hyphen_get_collection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/fields_lbrack_certificates_rbrack_Payload`.
                internal enum fields_lbrack_certificates_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case certificateContent = "certificateContent"
                    case certificateType = "certificateType"
                    case csrContent = "csrContent"
                    case displayName = "displayName"
                    case expirationDate = "expirationDate"
                    case name = "name"
                    case platform = "platform"
                    case serialNumber = "serialNumber"
                }
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/fields[certificates]`.
                internal typealias fields_lbrack_certificates_rbrack_Payload = [Operations.certificates_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type certificates
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/fields[certificates]`.
                internal var fields_lbrack_certificates_rbrack_: Operations.certificates_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/certificates/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_certificateType_rbrack_: filter by attribute 'certificateType'
                ///   - filter_lbrack_displayName_rbrack_: filter by attribute 'displayName'
                ///   - filter_lbrack_serialNumber_rbrack_: filter by attribute 'serialNumber'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_certificates_rbrack_: the fields to include for returned resources of type certificates
                ///   - limit: maximum resources per page
                internal init(
                    filter_lbrack_certificateType_rbrack_: Operations.certificates_hyphen_get_collection.Input.Query.filter_lbrack_certificateType_rbrack_Payload? = nil,
                    filter_lbrack_displayName_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_serialNumber_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    sort: Operations.certificates_hyphen_get_collection.Input.Query.sortPayload? = nil,
                    fields_lbrack_certificates_rbrack_: Operations.certificates_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.filter_lbrack_certificateType_rbrack_ = filter_lbrack_certificateType_rbrack_
                    self.filter_lbrack_displayName_rbrack_ = filter_lbrack_displayName_rbrack_
                    self.filter_lbrack_serialNumber_rbrack_ = filter_lbrack_serialNumber_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.sort = sort
                    self.fields_lbrack_certificates_rbrack_ = fields_lbrack_certificates_rbrack_
                    self.limit = limit
                }
            }
            internal var query: Operations.certificates_hyphen_get_collection.Input.Query
            /// - Remark: Generated from `#/paths/v1/certificates/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.certificates_hyphen_get_collection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.certificates_hyphen_get_collection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.certificates_hyphen_get_collection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.certificates_hyphen_get_collection.Input.Query = .init(),
                headers: Operations.certificates_hyphen_get_collection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.certificates_hyphen_get_collection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.certificates_hyphen_get_collection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.certificates_hyphen_get_collection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.certificates_hyphen_get_collection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.certificates_hyphen_get_collection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.certificates_hyphen_get_collection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.certificates_hyphen_get_collection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.certificates_hyphen_get_collection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.certificates_hyphen_get_collection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.certificates_hyphen_get_collection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.certificates_hyphen_get_collection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.certificates_hyphen_get_collection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/certificates/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.CertificatesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CertificatesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.certificates_hyphen_get_collection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.certificates_hyphen_get_collection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of Certificates
            ///
            /// - Remark: Generated from `#/paths//v1/certificates/get(certificates-get_collection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.certificates_hyphen_get_collection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.certificates_hyphen_get_collection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/devices`.
    /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)`.
    internal enum devices_hyphen_create_instance {
        internal static let id: Swift.String = "devices-create_instance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/devices/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.devices_hyphen_create_instance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.devices_hyphen_create_instance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.devices_hyphen_create_instance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/devices/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.DeviceCreateRequest)
            }
            internal var body: Operations.devices_hyphen_create_instance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.devices_hyphen_create_instance.Input.Headers = .init(),
                body: Operations.devices_hyphen_create_instance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.devices_hyphen_create_instance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.devices_hyphen_create_instance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.devices_hyphen_create_instance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.devices_hyphen_create_instance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.devices_hyphen_create_instance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.devices_hyphen_create_instance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.devices_hyphen_create_instance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.devices_hyphen_create_instance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.DeviceResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.DeviceResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single Device
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.devices_hyphen_create_instance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.devices_hyphen_create_instance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/devices/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/devices/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.devices_hyphen_create_instance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.devices_hyphen_create_instance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/devices/post(devices-create_instance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.devices_hyphen_create_instance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.devices_hyphen_create_instance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)`.
    internal enum profiles_hyphen_get_collection {
        internal static let id: Swift.String = "profiles-get_collection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/profiles/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// filter by attribute 'name'
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[name]`.
                internal var filter_lbrack_name_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter_lbrack_profileState_rbrack_Payload`.
                internal enum filter_lbrack_profileState_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ACTIVE = "ACTIVE"
                    case INVALID = "INVALID"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[profileState]`.
                internal typealias filter_lbrack_profileState_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileState_rbrack_PayloadPayload]
                /// filter by attribute 'profileState'
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[profileState]`.
                internal var filter_lbrack_profileState_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileState_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter_lbrack_profileType_rbrack_Payload`.
                internal enum filter_lbrack_profileType_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS_APP_DEVELOPMENT = "IOS_APP_DEVELOPMENT"
                    case IOS_APP_STORE = "IOS_APP_STORE"
                    case IOS_APP_ADHOC = "IOS_APP_ADHOC"
                    case IOS_APP_INHOUSE = "IOS_APP_INHOUSE"
                    case MAC_APP_DEVELOPMENT = "MAC_APP_DEVELOPMENT"
                    case MAC_APP_STORE = "MAC_APP_STORE"
                    case MAC_APP_DIRECT = "MAC_APP_DIRECT"
                    case TVOS_APP_DEVELOPMENT = "TVOS_APP_DEVELOPMENT"
                    case TVOS_APP_STORE = "TVOS_APP_STORE"
                    case TVOS_APP_ADHOC = "TVOS_APP_ADHOC"
                    case TVOS_APP_INHOUSE = "TVOS_APP_INHOUSE"
                    case MAC_CATALYST_APP_DEVELOPMENT = "MAC_CATALYST_APP_DEVELOPMENT"
                    case MAC_CATALYST_APP_STORE = "MAC_CATALYST_APP_STORE"
                    case MAC_CATALYST_APP_DIRECT = "MAC_CATALYST_APP_DIRECT"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[profileType]`.
                internal typealias filter_lbrack_profileType_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileType_rbrack_PayloadPayload]
                /// filter by attribute 'profileType'
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[profileType]`.
                internal var filter_lbrack_profileType_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileType_rbrack_Payload?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case id = "id"
                    case _hyphen_id = "-id"
                    case name = "name"
                    case _hyphen_name = "-name"
                    case profileState = "profileState"
                    case _hyphen_profileState = "-profileState"
                    case profileType = "profileType"
                    case _hyphen_profileType = "-profileType"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/sort`.
                internal typealias sortPayload = [Operations.profiles_hyphen_get_collection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/sort`.
                internal var sort: Operations.profiles_hyphen_get_collection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields_lbrack_profiles_rbrack_Payload`.
                internal enum fields_lbrack_profiles_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case bundleId = "bundleId"
                    case certificates = "certificates"
                    case createdDate = "createdDate"
                    case devices = "devices"
                    case expirationDate = "expirationDate"
                    case name = "name"
                    case platform = "platform"
                    case profileContent = "profileContent"
                    case profileState = "profileState"
                    case profileType = "profileType"
                    case uuid = "uuid"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[profiles]`.
                internal typealias fields_lbrack_profiles_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_profiles_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type profiles
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[profiles]`.
                internal var fields_lbrack_profiles_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_profiles_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/limit`.
                internal var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case bundleId = "bundleId"
                    case certificates = "certificates"
                    case devices = "devices"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/include`.
                internal typealias includePayload = [Operations.profiles_hyphen_get_collection.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/include`.
                internal var include: Operations.profiles_hyphen_get_collection.Input.Query.includePayload?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields_lbrack_certificates_rbrack_Payload`.
                internal enum fields_lbrack_certificates_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case certificateContent = "certificateContent"
                    case certificateType = "certificateType"
                    case csrContent = "csrContent"
                    case displayName = "displayName"
                    case expirationDate = "expirationDate"
                    case name = "name"
                    case platform = "platform"
                    case serialNumber = "serialNumber"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[certificates]`.
                internal typealias fields_lbrack_certificates_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type certificates
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[certificates]`.
                internal var fields_lbrack_certificates_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields_lbrack_devices_rbrack_Payload`.
                internal enum fields_lbrack_devices_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case addedDate = "addedDate"
                    case deviceClass = "deviceClass"
                    case model = "model"
                    case name = "name"
                    case platform = "platform"
                    case status = "status"
                    case udid = "udid"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[devices]`.
                internal typealias fields_lbrack_devices_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_devices_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type devices
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[devices]`.
                internal var fields_lbrack_devices_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_devices_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields_lbrack_bundleIds_rbrack_Payload`.
                internal enum fields_lbrack_bundleIds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case app = "app"
                    case bundleIdCapabilities = "bundleIdCapabilities"
                    case identifier = "identifier"
                    case name = "name"
                    case platform = "platform"
                    case profiles = "profiles"
                    case seedId = "seedId"
                }
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[bundleIds]`.
                internal typealias fields_lbrack_bundleIds_rbrack_Payload = [Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_bundleIds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type bundleIds
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/fields[bundleIds]`.
                internal var fields_lbrack_bundleIds_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_bundleIds_rbrack_Payload?
                /// maximum number of related certificates returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/limit[certificates]`.
                internal var limit_lbrack_certificates_rbrack_: Swift.Int?
                /// maximum number of related devices returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/GET/query/limit[devices]`.
                internal var limit_lbrack_devices_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_name_rbrack_: filter by attribute 'name'
                ///   - filter_lbrack_profileState_rbrack_: filter by attribute 'profileState'
                ///   - filter_lbrack_profileType_rbrack_: filter by attribute 'profileType'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_profiles_rbrack_: the fields to include for returned resources of type profiles
                ///   - limit: maximum resources per page
                ///   - include: comma-separated list of relationships to include
                ///   - fields_lbrack_certificates_rbrack_: the fields to include for returned resources of type certificates
                ///   - fields_lbrack_devices_rbrack_: the fields to include for returned resources of type devices
                ///   - fields_lbrack_bundleIds_rbrack_: the fields to include for returned resources of type bundleIds
                ///   - limit_lbrack_certificates_rbrack_: maximum number of related certificates returned (when they are included)
                ///   - limit_lbrack_devices_rbrack_: maximum number of related devices returned (when they are included)
                internal init(
                    filter_lbrack_name_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_profileState_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileState_rbrack_Payload? = nil,
                    filter_lbrack_profileType_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.filter_lbrack_profileType_rbrack_Payload? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    sort: Operations.profiles_hyphen_get_collection.Input.Query.sortPayload? = nil,
                    fields_lbrack_profiles_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_profiles_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil,
                    include: Operations.profiles_hyphen_get_collection.Input.Query.includePayload? = nil,
                    fields_lbrack_certificates_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_certificates_rbrack_Payload? = nil,
                    fields_lbrack_devices_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_devices_rbrack_Payload? = nil,
                    fields_lbrack_bundleIds_rbrack_: Operations.profiles_hyphen_get_collection.Input.Query.fields_lbrack_bundleIds_rbrack_Payload? = nil,
                    limit_lbrack_certificates_rbrack_: Swift.Int? = nil,
                    limit_lbrack_devices_rbrack_: Swift.Int? = nil
                ) {
                    self.filter_lbrack_name_rbrack_ = filter_lbrack_name_rbrack_
                    self.filter_lbrack_profileState_rbrack_ = filter_lbrack_profileState_rbrack_
                    self.filter_lbrack_profileType_rbrack_ = filter_lbrack_profileType_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.sort = sort
                    self.fields_lbrack_profiles_rbrack_ = fields_lbrack_profiles_rbrack_
                    self.limit = limit
                    self.include = include
                    self.fields_lbrack_certificates_rbrack_ = fields_lbrack_certificates_rbrack_
                    self.fields_lbrack_devices_rbrack_ = fields_lbrack_devices_rbrack_
                    self.fields_lbrack_bundleIds_rbrack_ = fields_lbrack_bundleIds_rbrack_
                    self.limit_lbrack_certificates_rbrack_ = limit_lbrack_certificates_rbrack_
                    self.limit_lbrack_devices_rbrack_ = limit_lbrack_devices_rbrack_
                }
            }
            internal var query: Operations.profiles_hyphen_get_collection.Input.Query
            /// - Remark: Generated from `#/paths/v1/profiles/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_get_collection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_get_collection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.profiles_hyphen_get_collection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.profiles_hyphen_get_collection.Input.Query = .init(),
                headers: Operations.profiles_hyphen_get_collection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_get_collection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_get_collection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.profiles_hyphen_get_collection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.profiles_hyphen_get_collection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_get_collection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_get_collection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.profiles_hyphen_get_collection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.profiles_hyphen_get_collection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_get_collection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_get_collection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.profiles_hyphen_get_collection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.profiles_hyphen_get_collection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ProfilesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ProfilesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_get_collection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_get_collection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of Profiles
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/get(profiles-get_collection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.profiles_hyphen_get_collection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.profiles_hyphen_get_collection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/profiles`.
    /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)`.
    internal enum profiles_hyphen_create_instance {
        internal static let id: Swift.String = "profiles-create_instance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/profiles/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_create_instance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_create_instance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.profiles_hyphen_create_instance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/profiles/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.ProfileCreateRequest)
            }
            internal var body: Operations.profiles_hyphen_create_instance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.profiles_hyphen_create_instance.Input.Headers = .init(),
                body: Operations.profiles_hyphen_create_instance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.profiles_hyphen_create_instance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.profiles_hyphen_create_instance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.profiles_hyphen_create_instance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.profiles_hyphen_create_instance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.profiles_hyphen_create_instance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.profiles_hyphen_create_instance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.profiles_hyphen_create_instance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.profiles_hyphen_create_instance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.ProfileResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ProfileResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single Profile
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.profiles_hyphen_create_instance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.profiles_hyphen_create_instance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_create_instance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_create_instance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/post(profiles-create_instance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.profiles_hyphen_create_instance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.profiles_hyphen_create_instance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /v1/profiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)`.
    internal enum profiles_hyphen_delete_instance {
        internal static let id: Swift.String = "profiles-delete_instance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.profiles_hyphen_delete_instance.Input.Path
            /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_delete_instance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.profiles_hyphen_delete_instance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.profiles_hyphen_delete_instance.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.profiles_hyphen_delete_instance.Input.Path,
                headers: Operations.profiles_hyphen_delete_instance.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_delete_instance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_delete_instance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.profiles_hyphen_delete_instance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.profiles_hyphen_delete_instance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_delete_instance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_delete_instance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.profiles_hyphen_delete_instance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.profiles_hyphen_delete_instance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_delete_instance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_delete_instance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.profiles_hyphen_delete_instance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.profiles_hyphen_delete_instance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_delete_instance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_delete_instance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.profiles_hyphen_delete_instance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.profiles_hyphen_delete_instance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/profiles/{id}/DELETE/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.profiles_hyphen_delete_instance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.profiles_hyphen_delete_instance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.profiles_hyphen_delete_instance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.profiles_hyphen_delete_instance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.profiles_hyphen_delete_instance.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/profiles/{id}/delete(profiles-delete_instance)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.profiles_hyphen_delete_instance.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/bundleIds/{id}/profiles`.
    /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)`.
    internal enum bundleIds_hyphen_profiles_hyphen_get_to_many_related {
        internal static let id: Swift.String = "bundleIds-profiles-get_to_many_related"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Path
            /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/query/fields_lbrack_profiles_rbrack_Payload`.
                internal enum fields_lbrack_profiles_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case bundleId = "bundleId"
                    case certificates = "certificates"
                    case createdDate = "createdDate"
                    case devices = "devices"
                    case expirationDate = "expirationDate"
                    case name = "name"
                    case platform = "platform"
                    case profileContent = "profileContent"
                    case profileState = "profileState"
                    case profileType = "profileType"
                    case uuid = "uuid"
                }
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/query/fields[profiles]`.
                internal typealias fields_lbrack_profiles_rbrack_Payload = [Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query.fields_lbrack_profiles_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type profiles
                ///
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/query/fields[profiles]`.
                internal var fields_lbrack_profiles_rbrack_: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query.fields_lbrack_profiles_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_profiles_rbrack_: the fields to include for returned resources of type profiles
                ///   - limit: maximum resources per page
                internal init(
                    fields_lbrack_profiles_rbrack_: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query.fields_lbrack_profiles_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.fields_lbrack_profiles_rbrack_ = fields_lbrack_profiles_rbrack_
                    self.limit = limit
                }
            }
            internal var query: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query
            /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Path,
                query: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Query = .init(),
                headers: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/bundleIds/{id}/profiles/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ProfilesWithoutIncludesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ProfilesWithoutIncludesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of Profiles with get
            ///
            /// - Remark: Generated from `#/paths//v1/bundleIds/{id}/profiles/get(bundleIds-profiles-get_to_many_related)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.bundleIds_hyphen_profiles_hyphen_get_to_many_related.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
