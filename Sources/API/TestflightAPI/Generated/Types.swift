// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// - Remark: HTTP `POST /v1/betaAppReviewSubmissions`.
    /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)`.
    func betaAppReviewSubmissions_createInstance(_ input: Operations.betaAppReviewSubmissions_createInstance.Input) async throws -> Operations.betaAppReviewSubmissions_createInstance.Output
    /// - Remark: HTTP `POST /v1/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)`.
    func betaBuildLocalizations_createInstance(_ input: Operations.betaBuildLocalizations_createInstance.Input) async throws -> Operations.betaBuildLocalizations_createInstance.Output
    /// - Remark: HTTP `GET /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)`.
    func betaBuildLocalizations_getInstance(_ input: Operations.betaBuildLocalizations_getInstance.Input) async throws -> Operations.betaBuildLocalizations_getInstance.Output
    /// - Remark: HTTP `PATCH /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)`.
    func betaBuildLocalizations_updateInstance(_ input: Operations.betaBuildLocalizations_updateInstance.Input) async throws -> Operations.betaBuildLocalizations_updateInstance.Output
    /// - Remark: HTTP `GET /v1/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)`.
    func betaGroups_getCollection(_ input: Operations.betaGroups_getCollection.Input) async throws -> Operations.betaGroups_getCollection.Output
    /// - Remark: HTTP `GET /v1/betaGroups/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)`.
    func betaGroups_getInstance(_ input: Operations.betaGroups_getInstance.Input) async throws -> Operations.betaGroups_getInstance.Output
    /// - Remark: HTTP `POST /v1/betaTesterInvitations`.
    /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)`.
    func betaTesterInvitations_createInstance(_ input: Operations.betaTesterInvitations_createInstance.Input) async throws -> Operations.betaTesterInvitations_createInstance.Output
    /// - Remark: HTTP `GET /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)`.
    func betaTesters_getCollection(_ input: Operations.betaTesters_getCollection.Input) async throws -> Operations.betaTesters_getCollection.Output
    /// - Remark: HTTP `POST /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)`.
    func betaTesters_createInstance(_ input: Operations.betaTesters_createInstance.Input) async throws -> Operations.betaTesters_createInstance.Output
    /// - Remark: HTTP `POST /v1/buildBetaNotifications`.
    /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)`.
    func buildBetaNotifications_createInstance(_ input: Operations.buildBetaNotifications_createInstance.Input) async throws -> Operations.buildBetaNotifications_createInstance.Output
    /// - Remark: HTTP `POST /v1/buildUploadFiles`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)`.
    func buildUploadFiles_createInstance(_ input: Operations.buildUploadFiles_createInstance.Input) async throws -> Operations.buildUploadFiles_createInstance.Output
    /// - Remark: HTTP `PATCH /v1/buildUploadFiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)`.
    func buildUploadFiles_updateInstance(_ input: Operations.buildUploadFiles_updateInstance.Input) async throws -> Operations.buildUploadFiles_updateInstance.Output
    /// - Remark: HTTP `POST /v1/buildUploads`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)`.
    func buildUploads_createInstance(_ input: Operations.buildUploads_createInstance.Input) async throws -> Operations.buildUploads_createInstance.Output
    /// - Remark: HTTP `GET /v1/buildUploads/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)`.
    func buildUploads_getInstance(_ input: Operations.buildUploads_getInstance.Input) async throws -> Operations.buildUploads_getInstance.Output
    /// - Remark: HTTP `GET /v1/builds`.
    /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)`.
    func builds_getCollection(_ input: Operations.builds_getCollection.Input) async throws -> Operations.builds_getCollection.Output
    /// - Remark: HTTP `GET /v1/builds/{id}`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)`.
    func builds_getInstance(_ input: Operations.builds_getInstance.Input) async throws -> Operations.builds_getInstance.Output
    /// - Remark: HTTP `POST /v1/userInvitations`.
    /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)`.
    func userInvitations_createInstance(_ input: Operations.userInvitations_createInstance.Input) async throws -> Operations.userInvitations_createInstance.Output
    /// - Remark: HTTP `GET /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)`.
    func betaGroups_builds_getToManyRelationship(_ input: Operations.betaGroups_builds_getToManyRelationship.Input) async throws -> Operations.betaGroups_builds_getToManyRelationship.Output
    /// - Remark: HTTP `POST /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)`.
    func betaGroups_builds_createToManyRelationship(_ input: Operations.betaGroups_builds_createToManyRelationship.Input) async throws -> Operations.betaGroups_builds_createToManyRelationship.Output
    /// - Remark: HTTP `DELETE /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)`.
    func betaGroups_builds_deleteToManyRelationship(_ input: Operations.betaGroups_builds_deleteToManyRelationship.Input) async throws -> Operations.betaGroups_builds_deleteToManyRelationship.Output
    /// - Remark: HTTP `POST /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)`.
    func betaTesters_betaGroups_createToManyRelationship(_ input: Operations.betaTesters_betaGroups_createToManyRelationship.Input) async throws -> Operations.betaTesters_betaGroups_createToManyRelationship.Output
    /// - Remark: HTTP `DELETE /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)`.
    func betaTesters_betaGroups_deleteToManyRelationship(_ input: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input) async throws -> Operations.betaTesters_betaGroups_deleteToManyRelationship.Output
    /// - Remark: HTTP `GET /v1/buildBetaDetails/{id}/build`.
    /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)`.
    func buildBetaDetails_build_getToOneRelated(_ input: Operations.buildBetaDetails_build_getToOneRelated.Input) async throws -> Operations.buildBetaDetails_build_getToOneRelated.Output
    /// - Remark: HTTP `GET /v1/buildBundles/{id}/buildBundleFileSizes`.
    /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)`.
    func buildBundles_buildBundleFileSizes_getToManyRelated(_ input: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input) async throws -> Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output
    /// - Remark: HTTP `GET /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)`.
    func builds_appEncryptionDeclaration_getToOneRelationship(_ input: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input) async throws -> Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output
    /// - Remark: HTTP `PATCH /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)`.
    func builds_appEncryptionDeclaration_updateToOneRelationship(_ input: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input) async throws -> Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output
    /// - Remark: HTTP `GET /v1/builds/{id}/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)`.
    func builds_betaBuildLocalizations_getToManyRelated(_ input: Operations.builds_betaBuildLocalizations_getToManyRelated.Input) async throws -> Operations.builds_betaBuildLocalizations_getToManyRelated.Output
    /// - Remark: HTTP `POST /v1/builds/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)`.
    func builds_betaGroups_createToManyRelationship(_ input: Operations.builds_betaGroups_createToManyRelationship.Input) async throws -> Operations.builds_betaGroups_createToManyRelationship.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// - Remark: HTTP `POST /v1/betaAppReviewSubmissions`.
    /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)`.
    internal func betaAppReviewSubmissions_createInstance(
        headers: Operations.betaAppReviewSubmissions_createInstance.Input.Headers = .init(),
        body: Operations.betaAppReviewSubmissions_createInstance.Input.Body
    ) async throws -> Operations.betaAppReviewSubmissions_createInstance.Output {
        try await betaAppReviewSubmissions_createInstance(Operations.betaAppReviewSubmissions_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /v1/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)`.
    internal func betaBuildLocalizations_createInstance(
        headers: Operations.betaBuildLocalizations_createInstance.Input.Headers = .init(),
        body: Operations.betaBuildLocalizations_createInstance.Input.Body
    ) async throws -> Operations.betaBuildLocalizations_createInstance.Output {
        try await betaBuildLocalizations_createInstance(Operations.betaBuildLocalizations_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)`.
    internal func betaBuildLocalizations_getInstance(
        path: Operations.betaBuildLocalizations_getInstance.Input.Path,
        query: Operations.betaBuildLocalizations_getInstance.Input.Query = .init(),
        headers: Operations.betaBuildLocalizations_getInstance.Input.Headers = .init()
    ) async throws -> Operations.betaBuildLocalizations_getInstance.Output {
        try await betaBuildLocalizations_getInstance(Operations.betaBuildLocalizations_getInstance.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PATCH /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)`.
    internal func betaBuildLocalizations_updateInstance(
        path: Operations.betaBuildLocalizations_updateInstance.Input.Path,
        headers: Operations.betaBuildLocalizations_updateInstance.Input.Headers = .init(),
        body: Operations.betaBuildLocalizations_updateInstance.Input.Body
    ) async throws -> Operations.betaBuildLocalizations_updateInstance.Output {
        try await betaBuildLocalizations_updateInstance(Operations.betaBuildLocalizations_updateInstance.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)`.
    internal func betaGroups_getCollection(
        query: Operations.betaGroups_getCollection.Input.Query = .init(),
        headers: Operations.betaGroups_getCollection.Input.Headers = .init()
    ) async throws -> Operations.betaGroups_getCollection.Output {
        try await betaGroups_getCollection(Operations.betaGroups_getCollection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/betaGroups/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)`.
    internal func betaGroups_getInstance(
        path: Operations.betaGroups_getInstance.Input.Path,
        query: Operations.betaGroups_getInstance.Input.Query = .init(),
        headers: Operations.betaGroups_getInstance.Input.Headers = .init()
    ) async throws -> Operations.betaGroups_getInstance.Output {
        try await betaGroups_getInstance(Operations.betaGroups_getInstance.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/betaTesterInvitations`.
    /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)`.
    internal func betaTesterInvitations_createInstance(
        headers: Operations.betaTesterInvitations_createInstance.Input.Headers = .init(),
        body: Operations.betaTesterInvitations_createInstance.Input.Body
    ) async throws -> Operations.betaTesterInvitations_createInstance.Output {
        try await betaTesterInvitations_createInstance(Operations.betaTesterInvitations_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)`.
    internal func betaTesters_getCollection(
        query: Operations.betaTesters_getCollection.Input.Query = .init(),
        headers: Operations.betaTesters_getCollection.Input.Headers = .init()
    ) async throws -> Operations.betaTesters_getCollection.Output {
        try await betaTesters_getCollection(Operations.betaTesters_getCollection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)`.
    internal func betaTesters_createInstance(
        headers: Operations.betaTesters_createInstance.Input.Headers = .init(),
        body: Operations.betaTesters_createInstance.Input.Body
    ) async throws -> Operations.betaTesters_createInstance.Output {
        try await betaTesters_createInstance(Operations.betaTesters_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /v1/buildBetaNotifications`.
    /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)`.
    internal func buildBetaNotifications_createInstance(
        headers: Operations.buildBetaNotifications_createInstance.Input.Headers = .init(),
        body: Operations.buildBetaNotifications_createInstance.Input.Body
    ) async throws -> Operations.buildBetaNotifications_createInstance.Output {
        try await buildBetaNotifications_createInstance(Operations.buildBetaNotifications_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /v1/buildUploadFiles`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)`.
    internal func buildUploadFiles_createInstance(
        headers: Operations.buildUploadFiles_createInstance.Input.Headers = .init(),
        body: Operations.buildUploadFiles_createInstance.Input.Body
    ) async throws -> Operations.buildUploadFiles_createInstance.Output {
        try await buildUploadFiles_createInstance(Operations.buildUploadFiles_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `PATCH /v1/buildUploadFiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)`.
    internal func buildUploadFiles_updateInstance(
        path: Operations.buildUploadFiles_updateInstance.Input.Path,
        headers: Operations.buildUploadFiles_updateInstance.Input.Headers = .init(),
        body: Operations.buildUploadFiles_updateInstance.Input.Body
    ) async throws -> Operations.buildUploadFiles_updateInstance.Output {
        try await buildUploadFiles_updateInstance(Operations.buildUploadFiles_updateInstance.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /v1/buildUploads`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)`.
    internal func buildUploads_createInstance(
        headers: Operations.buildUploads_createInstance.Input.Headers = .init(),
        body: Operations.buildUploads_createInstance.Input.Body
    ) async throws -> Operations.buildUploads_createInstance.Output {
        try await buildUploads_createInstance(Operations.buildUploads_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/buildUploads/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)`.
    internal func buildUploads_getInstance(
        path: Operations.buildUploads_getInstance.Input.Path,
        query: Operations.buildUploads_getInstance.Input.Query = .init(),
        headers: Operations.buildUploads_getInstance.Input.Headers = .init()
    ) async throws -> Operations.buildUploads_getInstance.Output {
        try await buildUploads_getInstance(Operations.buildUploads_getInstance.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/builds`.
    /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)`.
    internal func builds_getCollection(
        query: Operations.builds_getCollection.Input.Query = .init(),
        headers: Operations.builds_getCollection.Input.Headers = .init()
    ) async throws -> Operations.builds_getCollection.Output {
        try await builds_getCollection(Operations.builds_getCollection.Input(
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/builds/{id}`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)`.
    internal func builds_getInstance(
        path: Operations.builds_getInstance.Input.Path,
        query: Operations.builds_getInstance.Input.Query = .init(),
        headers: Operations.builds_getInstance.Input.Headers = .init()
    ) async throws -> Operations.builds_getInstance.Output {
        try await builds_getInstance(Operations.builds_getInstance.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/userInvitations`.
    /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)`.
    internal func userInvitations_createInstance(
        headers: Operations.userInvitations_createInstance.Input.Headers = .init(),
        body: Operations.userInvitations_createInstance.Input.Body
    ) async throws -> Operations.userInvitations_createInstance.Output {
        try await userInvitations_createInstance(Operations.userInvitations_createInstance.Input(
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)`.
    internal func betaGroups_builds_getToManyRelationship(
        path: Operations.betaGroups_builds_getToManyRelationship.Input.Path,
        query: Operations.betaGroups_builds_getToManyRelationship.Input.Query = .init(),
        headers: Operations.betaGroups_builds_getToManyRelationship.Input.Headers = .init()
    ) async throws -> Operations.betaGroups_builds_getToManyRelationship.Output {
        try await betaGroups_builds_getToManyRelationship(Operations.betaGroups_builds_getToManyRelationship.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)`.
    internal func betaGroups_builds_createToManyRelationship(
        path: Operations.betaGroups_builds_createToManyRelationship.Input.Path,
        headers: Operations.betaGroups_builds_createToManyRelationship.Input.Headers = .init(),
        body: Operations.betaGroups_builds_createToManyRelationship.Input.Body
    ) async throws -> Operations.betaGroups_builds_createToManyRelationship.Output {
        try await betaGroups_builds_createToManyRelationship(Operations.betaGroups_builds_createToManyRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)`.
    internal func betaGroups_builds_deleteToManyRelationship(
        path: Operations.betaGroups_builds_deleteToManyRelationship.Input.Path,
        headers: Operations.betaGroups_builds_deleteToManyRelationship.Input.Headers = .init(),
        body: Operations.betaGroups_builds_deleteToManyRelationship.Input.Body
    ) async throws -> Operations.betaGroups_builds_deleteToManyRelationship.Output {
        try await betaGroups_builds_deleteToManyRelationship(Operations.betaGroups_builds_deleteToManyRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `POST /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)`.
    internal func betaTesters_betaGroups_createToManyRelationship(
        path: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Path,
        headers: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Headers = .init(),
        body: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Body
    ) async throws -> Operations.betaTesters_betaGroups_createToManyRelationship.Output {
        try await betaTesters_betaGroups_createToManyRelationship(Operations.betaTesters_betaGroups_createToManyRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `DELETE /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)`.
    internal func betaTesters_betaGroups_deleteToManyRelationship(
        path: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Path,
        headers: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Headers = .init(),
        body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Body
    ) async throws -> Operations.betaTesters_betaGroups_deleteToManyRelationship.Output {
        try await betaTesters_betaGroups_deleteToManyRelationship(Operations.betaTesters_betaGroups_deleteToManyRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/buildBetaDetails/{id}/build`.
    /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)`.
    internal func buildBetaDetails_build_getToOneRelated(
        path: Operations.buildBetaDetails_build_getToOneRelated.Input.Path,
        query: Operations.buildBetaDetails_build_getToOneRelated.Input.Query = .init(),
        headers: Operations.buildBetaDetails_build_getToOneRelated.Input.Headers = .init()
    ) async throws -> Operations.buildBetaDetails_build_getToOneRelated.Output {
        try await buildBetaDetails_build_getToOneRelated(Operations.buildBetaDetails_build_getToOneRelated.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/buildBundles/{id}/buildBundleFileSizes`.
    /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)`.
    internal func buildBundles_buildBundleFileSizes_getToManyRelated(
        path: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Path,
        query: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query = .init(),
        headers: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Headers = .init()
    ) async throws -> Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output {
        try await buildBundles_buildBundleFileSizes_getToManyRelated(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `GET /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)`.
    internal func builds_appEncryptionDeclaration_getToOneRelationship(
        path: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Path,
        headers: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Headers = .init()
    ) async throws -> Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output {
        try await builds_appEncryptionDeclaration_getToOneRelationship(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input(
            path: path,
            headers: headers
        ))
    }
    /// - Remark: HTTP `PATCH /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)`.
    internal func builds_appEncryptionDeclaration_updateToOneRelationship(
        path: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Path,
        headers: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Headers = .init(),
        body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Body
    ) async throws -> Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output {
        try await builds_appEncryptionDeclaration_updateToOneRelationship(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// - Remark: HTTP `GET /v1/builds/{id}/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)`.
    internal func builds_betaBuildLocalizations_getToManyRelated(
        path: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Path,
        query: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query = .init(),
        headers: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Headers = .init()
    ) async throws -> Operations.builds_betaBuildLocalizations_getToManyRelated.Output {
        try await builds_betaBuildLocalizations_getToManyRelated(Operations.builds_betaBuildLocalizations_getToManyRelated.Input(
            path: path,
            query: query,
            headers: headers
        ))
    }
    /// - Remark: HTTP `POST /v1/builds/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)`.
    internal func builds_betaGroups_createToManyRelationship(
        path: Operations.builds_betaGroups_createToManyRelationship.Input.Path,
        headers: Operations.builds_betaGroups_createToManyRelationship.Input.Headers = .init(),
        body: Operations.builds_betaGroups_createToManyRelationship.Input.Body
    ) async throws -> Operations.builds_betaGroups_createToManyRelationship.Output {
        try await builds_betaGroups_createToManyRelationship(Operations.builds_betaGroups_createToManyRelationship.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal enum Server1 {
        internal static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
                variables: []
            )
        }
    }
    @available(*, deprecated, renamed: "Servers.Server1.url")
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.appstoreconnect.apple.com/",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration`.
        internal struct AppEncryptionDeclaration: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appEncryptionDeclarations = "appEncryptionDeclarations"
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/type`.
            internal var _type: Components.Schemas.AppEncryptionDeclaration._typePayload
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/appDescription`.
                internal var appDescription: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/usesEncryption`.
                @available(*, deprecated)
                internal var usesEncryption: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/exempt`.
                internal var exempt: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/containsProprietaryCryptography`.
                internal var containsProprietaryCryptography: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/containsThirdPartyCryptography`.
                internal var containsThirdPartyCryptography: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/availableOnFrenchStore`.
                internal var availableOnFrenchStore: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/uploadedDate`.
                @available(*, deprecated)
                internal var uploadedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentUrl`.
                @available(*, deprecated)
                internal var documentUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentName`.
                @available(*, deprecated)
                internal var documentName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/documentType`.
                @available(*, deprecated)
                internal var documentType: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/appEncryptionDeclarationState`.
                internal var appEncryptionDeclarationState: Components.Schemas.AppEncryptionDeclarationState?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes/codeValue`.
                internal var codeValue: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - appDescription:
                ///   - createdDate:
                ///   - usesEncryption:
                ///   - exempt:
                ///   - containsProprietaryCryptography:
                ///   - containsThirdPartyCryptography:
                ///   - availableOnFrenchStore:
                ///   - platform:
                ///   - uploadedDate:
                ///   - documentUrl:
                ///   - documentName:
                ///   - documentType:
                ///   - appEncryptionDeclarationState:
                ///   - codeValue:
                internal init(
                    appDescription: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    usesEncryption: Swift.Bool? = nil,
                    exempt: Swift.Bool? = nil,
                    containsProprietaryCryptography: Swift.Bool? = nil,
                    containsThirdPartyCryptography: Swift.Bool? = nil,
                    availableOnFrenchStore: Swift.Bool? = nil,
                    platform: Components.Schemas.Platform? = nil,
                    uploadedDate: Foundation.Date? = nil,
                    documentUrl: Swift.String? = nil,
                    documentName: Swift.String? = nil,
                    documentType: Swift.String? = nil,
                    appEncryptionDeclarationState: Components.Schemas.AppEncryptionDeclarationState? = nil,
                    codeValue: Swift.String? = nil
                ) {
                    self.appDescription = appDescription
                    self.createdDate = createdDate
                    self.usesEncryption = usesEncryption
                    self.exempt = exempt
                    self.containsProprietaryCryptography = containsProprietaryCryptography
                    self.containsThirdPartyCryptography = containsThirdPartyCryptography
                    self.availableOnFrenchStore = availableOnFrenchStore
                    self.platform = platform
                    self.uploadedDate = uploadedDate
                    self.documentUrl = documentUrl
                    self.documentName = documentName
                    self.documentType = documentType
                    self.appEncryptionDeclarationState = appEncryptionDeclarationState
                    self.codeValue = codeValue
                }
                internal enum CodingKeys: String, CodingKey {
                    case appDescription
                    case createdDate
                    case usesEncryption
                    case exempt
                    case containsProprietaryCryptography
                    case containsThirdPartyCryptography
                    case availableOnFrenchStore
                    case platform
                    case uploadedDate
                    case documentUrl
                    case documentName
                    case documentType
                    case appEncryptionDeclarationState
                    case codeValue
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/attributes`.
            internal var attributes: Components.Schemas.AppEncryptionDeclaration.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app`.
                @available(*, deprecated)
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/app`.
                @available(*, deprecated)
                internal var app: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds`.
                @available(*, deprecated)
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/builds`.
                @available(*, deprecated)
                internal var builds: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument`.
                internal struct appEncryptionDeclarationDocumentPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarationDocuments = "appEncryptionDeclarationDocuments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/type`.
                        internal var _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument/data`.
                    internal var data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationDocumentPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships/appEncryptionDeclarationDocument`.
                internal var appEncryptionDeclarationDocument: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - builds:
                ///   - appEncryptionDeclarationDocument:
                internal init(
                    app: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appPayload? = nil,
                    builds: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.buildsPayload? = nil,
                    appEncryptionDeclarationDocument: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload.appEncryptionDeclarationDocumentPayload? = nil
                ) {
                    self.app = app
                    self.builds = builds
                    self.appEncryptionDeclarationDocument = appEncryptionDeclarationDocument
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case builds
                    case appEncryptionDeclarationDocument
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/relationships`.
            internal var relationships: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclaration/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppEncryptionDeclaration`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppEncryptionDeclaration._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppEncryptionDeclaration.attributesPayload? = nil,
                relationships: Components.Schemas.AppEncryptionDeclaration.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreVersion`.
        internal struct AppStoreVersion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case appStoreVersions = "appStoreVersions"
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/type`.
            internal var _type: Components.Schemas.AppStoreVersion._typePayload
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/versionString`.
                internal var versionString: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/appStoreState`.
                internal var appStoreState: Components.Schemas.AppStoreVersionState?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/appVersionState`.
                internal var appVersionState: Components.Schemas.AppVersionState?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/copyright`.
                internal var copyright: Swift.String?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/reviewType`.
                internal enum reviewTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case APP_STORE = "APP_STORE"
                    case NOTARIZATION = "NOTARIZATION"
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/reviewType`.
                internal var reviewType: Components.Schemas.AppStoreVersion.attributesPayload.reviewTypePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/releaseType`.
                internal enum releaseTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case MANUAL = "MANUAL"
                    case AFTER_APPROVAL = "AFTER_APPROVAL"
                    case SCHEDULED = "SCHEDULED"
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/releaseType`.
                internal var releaseType: Components.Schemas.AppStoreVersion.attributesPayload.releaseTypePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/earliestReleaseDate`.
                internal var earliestReleaseDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/usesIdfa`.
                @available(*, deprecated)
                internal var usesIdfa: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/downloadable`.
                internal var downloadable: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - platform:
                ///   - versionString:
                ///   - appStoreState:
                ///   - appVersionState:
                ///   - copyright:
                ///   - reviewType:
                ///   - releaseType:
                ///   - earliestReleaseDate:
                ///   - usesIdfa:
                ///   - downloadable:
                ///   - createdDate:
                internal init(
                    platform: Components.Schemas.Platform? = nil,
                    versionString: Swift.String? = nil,
                    appStoreState: Components.Schemas.AppStoreVersionState? = nil,
                    appVersionState: Components.Schemas.AppVersionState? = nil,
                    copyright: Swift.String? = nil,
                    reviewType: Components.Schemas.AppStoreVersion.attributesPayload.reviewTypePayload? = nil,
                    releaseType: Components.Schemas.AppStoreVersion.attributesPayload.releaseTypePayload? = nil,
                    earliestReleaseDate: Foundation.Date? = nil,
                    usesIdfa: Swift.Bool? = nil,
                    downloadable: Swift.Bool? = nil,
                    createdDate: Foundation.Date? = nil
                ) {
                    self.platform = platform
                    self.versionString = versionString
                    self.appStoreState = appStoreState
                    self.appVersionState = appVersionState
                    self.copyright = copyright
                    self.reviewType = reviewType
                    self.releaseType = releaseType
                    self.earliestReleaseDate = earliestReleaseDate
                    self.usesIdfa = usesIdfa
                    self.downloadable = downloadable
                    self.createdDate = createdDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case platform
                    case versionString
                    case appStoreState
                    case appVersionState
                    case copyright
                    case reviewType
                    case releaseType
                    case earliestReleaseDate
                    case usesIdfa
                    case downloadable
                    case createdDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/attributes`.
            internal var attributes: Components.Schemas.AppStoreVersion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/app`.
                internal var app: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration`.
                @available(*, deprecated)
                internal struct ageRatingDeclarationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case ageRatingDeclarations = "ageRatingDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload?
                    /// Creates a new `ageRatingDeclarationPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/ageRatingDeclaration`.
                @available(*, deprecated)
                internal var ageRatingDeclaration: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations`.
                internal struct appStoreVersionLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayload?
                    /// Creates a new `appStoreVersionLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionLocalizations`.
                internal var appStoreVersionLocalizations: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/build`.
                internal var build: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease`.
                internal struct appStoreVersionPhasedReleasePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionPhasedReleases = "appStoreVersionPhasedReleases"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload?
                    /// Creates a new `appStoreVersionPhasedReleasePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionPhasedRelease`.
                internal var appStoreVersionPhasedRelease: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion`.
                internal struct gameCenterAppVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterAppVersions = "gameCenterAppVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload?
                    /// Creates a new `gameCenterAppVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/gameCenterAppVersion`.
                internal var gameCenterAppVersion: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage`.
                internal struct routingAppCoveragePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case routingAppCoverages = "routingAppCoverages"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload?
                    /// Creates a new `routingAppCoveragePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/routingAppCoverage`.
                internal var routingAppCoverage: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail`.
                internal struct appStoreReviewDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreReviewDetails = "appStoreReviewDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload?
                    /// Creates a new `appStoreReviewDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreReviewDetail`.
                internal var appStoreReviewDetail: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission`.
                internal struct appStoreVersionSubmissionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionSubmissions = "appStoreVersionSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload?
                    /// Creates a new `appStoreVersionSubmissionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionSubmission`.
                internal var appStoreVersionSubmission: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience`.
                internal struct appClipDefaultExperiencePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClipDefaultExperiences = "appClipDefaultExperiences"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload?
                    /// Creates a new `appClipDefaultExperiencePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appClipDefaultExperience`.
                internal var appClipDefaultExperience: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments`.
                internal struct appStoreVersionExperimentsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperiments`.
                internal var appStoreVersionExperiments: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2`.
                internal struct appStoreVersionExperimentsV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/data`.
                    internal typealias dataPayload = [Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/appStoreVersionExperimentsV2`.
                internal var appStoreVersionExperimentsV2: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews`.
                internal struct customerReviewsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/customerReviews`.
                internal var customerReviews: Components.Schemas.AppStoreVersion.relationshipsPayload.customerReviewsPayload?
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage`.
                internal struct alternativeDistributionPackagePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case alternativeDistributionPackages = "alternativeDistributionPackages"
                        }
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/type`.
                        internal var _type: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage/data`.
                    internal var data: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload?
                    /// Creates a new `alternativeDistributionPackagePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships/alternativeDistributionPackage`.
                internal var alternativeDistributionPackage: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - ageRatingDeclaration:
                ///   - appStoreVersionLocalizations:
                ///   - build:
                ///   - appStoreVersionPhasedRelease:
                ///   - gameCenterAppVersion:
                ///   - routingAppCoverage:
                ///   - appStoreReviewDetail:
                ///   - appStoreVersionSubmission:
                ///   - appClipDefaultExperience:
                ///   - appStoreVersionExperiments:
                ///   - appStoreVersionExperimentsV2:
                ///   - customerReviews:
                ///   - alternativeDistributionPackage:
                internal init(
                    app: Components.Schemas.AppStoreVersion.relationshipsPayload.appPayload? = nil,
                    ageRatingDeclaration: Components.Schemas.AppStoreVersion.relationshipsPayload.ageRatingDeclarationPayload? = nil,
                    appStoreVersionLocalizations: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionLocalizationsPayload? = nil,
                    build: Components.Schemas.AppStoreVersion.relationshipsPayload.buildPayload? = nil,
                    appStoreVersionPhasedRelease: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionPhasedReleasePayload? = nil,
                    gameCenterAppVersion: Components.Schemas.AppStoreVersion.relationshipsPayload.gameCenterAppVersionPayload? = nil,
                    routingAppCoverage: Components.Schemas.AppStoreVersion.relationshipsPayload.routingAppCoveragePayload? = nil,
                    appStoreReviewDetail: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreReviewDetailPayload? = nil,
                    appStoreVersionSubmission: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionSubmissionPayload? = nil,
                    appClipDefaultExperience: Components.Schemas.AppStoreVersion.relationshipsPayload.appClipDefaultExperiencePayload? = nil,
                    appStoreVersionExperiments: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsPayload? = nil,
                    appStoreVersionExperimentsV2: Components.Schemas.AppStoreVersion.relationshipsPayload.appStoreVersionExperimentsV2Payload? = nil,
                    customerReviews: Components.Schemas.AppStoreVersion.relationshipsPayload.customerReviewsPayload? = nil,
                    alternativeDistributionPackage: Components.Schemas.AppStoreVersion.relationshipsPayload.alternativeDistributionPackagePayload? = nil
                ) {
                    self.app = app
                    self.ageRatingDeclaration = ageRatingDeclaration
                    self.appStoreVersionLocalizations = appStoreVersionLocalizations
                    self.build = build
                    self.appStoreVersionPhasedRelease = appStoreVersionPhasedRelease
                    self.gameCenterAppVersion = gameCenterAppVersion
                    self.routingAppCoverage = routingAppCoverage
                    self.appStoreReviewDetail = appStoreReviewDetail
                    self.appStoreVersionSubmission = appStoreVersionSubmission
                    self.appClipDefaultExperience = appClipDefaultExperience
                    self.appStoreVersionExperiments = appStoreVersionExperiments
                    self.appStoreVersionExperimentsV2 = appStoreVersionExperimentsV2
                    self.customerReviews = customerReviews
                    self.alternativeDistributionPackage = alternativeDistributionPackage
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case ageRatingDeclaration
                    case appStoreVersionLocalizations
                    case build
                    case appStoreVersionPhasedRelease
                    case gameCenterAppVersion
                    case routingAppCoverage
                    case appStoreReviewDetail
                    case appStoreVersionSubmission
                    case appClipDefaultExperience
                    case appStoreVersionExperiments
                    case appStoreVersionExperimentsV2
                    case customerReviews
                    case alternativeDistributionPackage
                }
            }
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/relationships`.
            internal var relationships: Components.Schemas.AppStoreVersion.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/AppStoreVersion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `AppStoreVersion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.AppStoreVersion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.AppStoreVersion.attributesPayload? = nil,
                relationships: Components.Schemas.AppStoreVersion.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/App`.
        internal struct App: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/App/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case apps = "apps"
            }
            /// - Remark: Generated from `#/components/schemas/App/type`.
            internal var _type: Components.Schemas.App._typePayload
            /// - Remark: Generated from `#/components/schemas/App/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/App/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/App/attributes/accessibilityUrl`.
                internal var accessibilityUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/bundleId`.
                internal var bundleId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/sku`.
                internal var sku: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/primaryLocale`.
                internal var primaryLocale: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/isOrEverWasMadeForKids`.
                internal var isOrEverWasMadeForKids: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrl`.
                internal var subscriptionStatusUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlVersion`.
                internal var subscriptionStatusUrlVersion: Components.Schemas.SubscriptionStatusUrlVersion?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlForSandbox`.
                internal var subscriptionStatusUrlForSandbox: Swift.String?
                /// - Remark: Generated from `#/components/schemas/App/attributes/subscriptionStatusUrlVersionForSandbox`.
                internal var subscriptionStatusUrlVersionForSandbox: Components.Schemas.SubscriptionStatusUrlVersion?
                /// - Remark: Generated from `#/components/schemas/App/attributes/contentRightsDeclaration`.
                internal enum contentRightsDeclarationPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case DOES_NOT_USE_THIRD_PARTY_CONTENT = "DOES_NOT_USE_THIRD_PARTY_CONTENT"
                    case USES_THIRD_PARTY_CONTENT = "USES_THIRD_PARTY_CONTENT"
                }
                /// - Remark: Generated from `#/components/schemas/App/attributes/contentRightsDeclaration`.
                internal var contentRightsDeclaration: Components.Schemas.App.attributesPayload.contentRightsDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/App/attributes/streamlinedPurchasingEnabled`.
                internal var streamlinedPurchasingEnabled: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - accessibilityUrl:
                ///   - name:
                ///   - bundleId:
                ///   - sku:
                ///   - primaryLocale:
                ///   - isOrEverWasMadeForKids:
                ///   - subscriptionStatusUrl:
                ///   - subscriptionStatusUrlVersion:
                ///   - subscriptionStatusUrlForSandbox:
                ///   - subscriptionStatusUrlVersionForSandbox:
                ///   - contentRightsDeclaration:
                ///   - streamlinedPurchasingEnabled:
                internal init(
                    accessibilityUrl: Swift.String? = nil,
                    name: Swift.String? = nil,
                    bundleId: Swift.String? = nil,
                    sku: Swift.String? = nil,
                    primaryLocale: Swift.String? = nil,
                    isOrEverWasMadeForKids: Swift.Bool? = nil,
                    subscriptionStatusUrl: Swift.String? = nil,
                    subscriptionStatusUrlVersion: Components.Schemas.SubscriptionStatusUrlVersion? = nil,
                    subscriptionStatusUrlForSandbox: Swift.String? = nil,
                    subscriptionStatusUrlVersionForSandbox: Components.Schemas.SubscriptionStatusUrlVersion? = nil,
                    contentRightsDeclaration: Components.Schemas.App.attributesPayload.contentRightsDeclarationPayload? = nil,
                    streamlinedPurchasingEnabled: Swift.Bool? = nil
                ) {
                    self.accessibilityUrl = accessibilityUrl
                    self.name = name
                    self.bundleId = bundleId
                    self.sku = sku
                    self.primaryLocale = primaryLocale
                    self.isOrEverWasMadeForKids = isOrEverWasMadeForKids
                    self.subscriptionStatusUrl = subscriptionStatusUrl
                    self.subscriptionStatusUrlVersion = subscriptionStatusUrlVersion
                    self.subscriptionStatusUrlForSandbox = subscriptionStatusUrlForSandbox
                    self.subscriptionStatusUrlVersionForSandbox = subscriptionStatusUrlVersionForSandbox
                    self.contentRightsDeclaration = contentRightsDeclaration
                    self.streamlinedPurchasingEnabled = streamlinedPurchasingEnabled
                }
                internal enum CodingKeys: String, CodingKey {
                    case accessibilityUrl
                    case name
                    case bundleId
                    case sku
                    case primaryLocale
                    case isOrEverWasMadeForKids
                    case subscriptionStatusUrl
                    case subscriptionStatusUrlVersion
                    case subscriptionStatusUrlForSandbox
                    case subscriptionStatusUrlVersionForSandbox
                    case contentRightsDeclaration
                    case streamlinedPurchasingEnabled
                }
            }
            /// - Remark: Generated from `#/components/schemas/App/attributes`.
            internal var attributes: Components.Schemas.App.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/App/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations`.
                internal struct accessibilityDeclarationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `accessibilityDeclarationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/accessibilityDeclarations`.
                internal var accessibilityDeclarations: Components.Schemas.App.relationshipsPayload.accessibilityDeclarationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations`.
                internal struct appEncryptionDeclarationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarations = "appEncryptionDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEncryptionDeclarations`.
                internal var appEncryptionDeclarations: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct`.
                internal struct ciProductPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case ciProducts = "ciProducts"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload?
                    /// Creates a new `ciProductPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.ciProductPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/ciProduct`.
                internal var ciProduct: Components.Schemas.App.relationshipsPayload.ciProductPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters`.
                internal struct betaTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaTesters`.
                internal var betaTesters: Components.Schemas.App.relationshipsPayload.betaTestersPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups`.
                internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaGroups = "betaGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayload?
                    /// Creates a new `betaGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaGroups`.
                internal var betaGroups: Components.Schemas.App.relationshipsPayload.betaGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions`.
                internal struct appStoreVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayload?
                    /// Creates a new `appStoreVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersions`.
                internal var appStoreVersions: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appTags`.
                internal struct appTagsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appTags/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appTagsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appTags`.
                internal var appTags: Components.Schemas.App.relationshipsPayload.appTagsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions`.
                internal struct preReleaseVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case preReleaseVersions = "preReleaseVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayload?
                    /// Creates a new `preReleaseVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/preReleaseVersions`.
                internal var preReleaseVersions: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations`.
                internal struct betaAppLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppLocalizations = "betaAppLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayload?
                    /// Creates a new `betaAppLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppLocalizations`.
                internal var betaAppLocalizations: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/builds/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/builds`.
                internal var builds: Components.Schemas.App.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement`.
                internal struct betaLicenseAgreementPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaLicenseAgreements = "betaLicenseAgreements"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload?
                    /// Creates a new `betaLicenseAgreementPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaLicenseAgreement`.
                internal var betaLicenseAgreement: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail`.
                internal struct betaAppReviewDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppReviewDetails = "betaAppReviewDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload?
                    /// Creates a new `betaAppReviewDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaAppReviewDetail`.
                internal var betaAppReviewDetail: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos`.
                internal struct appInfosPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appInfos = "appInfos"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayload?
                    /// Creates a new `appInfosPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appInfosPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appInfos`.
                internal var appInfos: Components.Schemas.App.relationshipsPayload.appInfosPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appClips`.
                internal struct appClipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClips = "appClips"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appClips/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayload?
                    /// Creates a new `appClipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appClipsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appClips`.
                internal var appClips: Components.Schemas.App.relationshipsPayload.appClipsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints`.
                internal struct appPricePointsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appPricePointsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPricePoints`.
                internal var appPricePoints: Components.Schemas.App.relationshipsPayload.appPricePointsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement`.
                internal struct endUserLicenseAgreementPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case endUserLicenseAgreements = "endUserLicenseAgreements"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload?
                    /// Creates a new `endUserLicenseAgreementPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/endUserLicenseAgreement`.
                internal var endUserLicenseAgreement: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule`.
                internal struct appPriceSchedulePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appPriceSchedulePayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appPriceSchedule`.
                internal var appPriceSchedule: Components.Schemas.App.relationshipsPayload.appPriceSchedulePayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2`.
                internal struct appAvailabilityV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `appAvailabilityV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appAvailabilityV2`.
                internal var appAvailabilityV2: Components.Schemas.App.relationshipsPayload.appAvailabilityV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases`.
                @available(*, deprecated)
                internal struct inAppPurchasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case inAppPurchases = "inAppPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayload?
                    /// Creates a new `inAppPurchasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchases`.
                @available(*, deprecated)
                internal var inAppPurchases: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups`.
                internal struct subscriptionGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptionGroups = "subscriptionGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayload?
                    /// Creates a new `subscriptionGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGroups`.
                internal var subscriptionGroups: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions`.
                internal struct gameCenterEnabledVersionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayload?
                    /// Creates a new `gameCenterEnabledVersionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterEnabledVersions`.
                internal var gameCenterEnabledVersions: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics`.
                internal struct perfPowerMetricsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `perfPowerMetricsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/perfPowerMetrics`.
                internal var perfPowerMetrics: Components.Schemas.App.relationshipsPayload.perfPowerMetricsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages`.
                internal struct appCustomProductPagesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appCustomProductPages = "appCustomProductPages"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayload?
                    /// Creates a new `appCustomProductPagesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appCustomProductPages`.
                internal var appCustomProductPages: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2`.
                internal struct inAppPurchasesV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case inAppPurchases = "inAppPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayload?
                    /// Creates a new `inAppPurchasesV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/inAppPurchasesV2`.
                internal var inAppPurchasesV2: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases`.
                internal struct promotedPurchasesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case promotedPurchases = "promotedPurchases"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayload?
                    /// Creates a new `promotedPurchasesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/promotedPurchases`.
                internal var promotedPurchases: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents`.
                internal struct appEventsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEvents = "appEvents"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayload?
                    /// Creates a new `appEventsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appEventsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appEvents`.
                internal var appEvents: Components.Schemas.App.relationshipsPayload.appEventsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions`.
                internal struct reviewSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case reviewSubmissions = "reviewSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayload?
                    /// Creates a new `reviewSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/reviewSubmissions`.
                internal var reviewSubmissions: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod`.
                internal struct subscriptionGracePeriodPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case subscriptionGracePeriods = "subscriptionGracePeriods"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload?
                    /// Creates a new `subscriptionGracePeriodPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/subscriptionGracePeriod`.
                internal var subscriptionGracePeriod: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews`.
                internal struct customerReviewsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviews`.
                internal var customerReviews: Components.Schemas.App.relationshipsPayload.customerReviewsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations`.
                internal struct customerReviewSummarizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `customerReviewSummarizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/customerReviewSummarizations`.
                internal var customerReviewSummarizations: Components.Schemas.App.relationshipsPayload.customerReviewSummarizationsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail`.
                internal struct gameCenterDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case gameCenterDetails = "gameCenterDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload?
                    /// Creates a new `gameCenterDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/gameCenterDetail`.
                internal var gameCenterDetail: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2`.
                internal struct appStoreVersionExperimentsV2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersionExperiments = "appStoreVersionExperiments"
                        }
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/type`.
                        internal var _type: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/data`.
                    internal typealias dataPayload = [Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2/data`.
                    internal var data: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload?
                    /// Creates a new `appStoreVersionExperimentsV2Payload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/appStoreVersionExperimentsV2`.
                internal var appStoreVersionExperimentsV2: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey`.
                internal struct alternativeDistributionKeyPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `alternativeDistributionKeyPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/alternativeDistributionKey`.
                internal var alternativeDistributionKey: Components.Schemas.App.relationshipsPayload.alternativeDistributionKeyPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests`.
                internal struct analyticsReportRequestsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `analyticsReportRequestsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/analyticsReportRequests`.
                internal var analyticsReportRequests: Components.Schemas.App.relationshipsPayload.analyticsReportRequestsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail`.
                internal struct marketplaceSearchDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `marketplaceSearchDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/marketplaceSearchDetail`.
                internal var marketplaceSearchDetail: Components.Schemas.App.relationshipsPayload.marketplaceSearchDetailPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads`.
                internal struct buildUploadsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `buildUploadsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/buildUploads`.
                internal var buildUploads: Components.Schemas.App.relationshipsPayload.buildUploadsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets`.
                internal struct backgroundAssetsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `backgroundAssetsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/backgroundAssets`.
                internal var backgroundAssets: Components.Schemas.App.relationshipsPayload.backgroundAssetsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions`.
                internal struct betaFeedbackScreenshotSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaFeedbackScreenshotSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackScreenshotSubmissions`.
                internal var betaFeedbackScreenshotSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackScreenshotSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions`.
                internal struct betaFeedbackCrashSubmissionsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaFeedbackCrashSubmissionsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/betaFeedbackCrashSubmissions`.
                internal var betaFeedbackCrashSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackCrashSubmissionsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords`.
                internal struct searchKeywordsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `searchKeywordsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/searchKeywords`.
                internal var searchKeywords: Components.Schemas.App.relationshipsPayload.searchKeywordsPayload?
                /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks`.
                internal struct webhooksPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `webhooksPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/App/relationships/webhooks`.
                internal var webhooks: Components.Schemas.App.relationshipsPayload.webhooksPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - accessibilityDeclarations:
                ///   - appEncryptionDeclarations:
                ///   - ciProduct:
                ///   - betaTesters:
                ///   - betaGroups:
                ///   - appStoreVersions:
                ///   - appTags:
                ///   - preReleaseVersions:
                ///   - betaAppLocalizations:
                ///   - builds:
                ///   - betaLicenseAgreement:
                ///   - betaAppReviewDetail:
                ///   - appInfos:
                ///   - appClips:
                ///   - appPricePoints:
                ///   - endUserLicenseAgreement:
                ///   - appPriceSchedule:
                ///   - appAvailabilityV2:
                ///   - inAppPurchases:
                ///   - subscriptionGroups:
                ///   - gameCenterEnabledVersions:
                ///   - perfPowerMetrics:
                ///   - appCustomProductPages:
                ///   - inAppPurchasesV2:
                ///   - promotedPurchases:
                ///   - appEvents:
                ///   - reviewSubmissions:
                ///   - subscriptionGracePeriod:
                ///   - customerReviews:
                ///   - customerReviewSummarizations:
                ///   - gameCenterDetail:
                ///   - appStoreVersionExperimentsV2:
                ///   - alternativeDistributionKey:
                ///   - analyticsReportRequests:
                ///   - marketplaceSearchDetail:
                ///   - buildUploads:
                ///   - backgroundAssets:
                ///   - betaFeedbackScreenshotSubmissions:
                ///   - betaFeedbackCrashSubmissions:
                ///   - searchKeywords:
                ///   - webhooks:
                internal init(
                    accessibilityDeclarations: Components.Schemas.App.relationshipsPayload.accessibilityDeclarationsPayload? = nil,
                    appEncryptionDeclarations: Components.Schemas.App.relationshipsPayload.appEncryptionDeclarationsPayload? = nil,
                    ciProduct: Components.Schemas.App.relationshipsPayload.ciProductPayload? = nil,
                    betaTesters: Components.Schemas.App.relationshipsPayload.betaTestersPayload? = nil,
                    betaGroups: Components.Schemas.App.relationshipsPayload.betaGroupsPayload? = nil,
                    appStoreVersions: Components.Schemas.App.relationshipsPayload.appStoreVersionsPayload? = nil,
                    appTags: Components.Schemas.App.relationshipsPayload.appTagsPayload? = nil,
                    preReleaseVersions: Components.Schemas.App.relationshipsPayload.preReleaseVersionsPayload? = nil,
                    betaAppLocalizations: Components.Schemas.App.relationshipsPayload.betaAppLocalizationsPayload? = nil,
                    builds: Components.Schemas.App.relationshipsPayload.buildsPayload? = nil,
                    betaLicenseAgreement: Components.Schemas.App.relationshipsPayload.betaLicenseAgreementPayload? = nil,
                    betaAppReviewDetail: Components.Schemas.App.relationshipsPayload.betaAppReviewDetailPayload? = nil,
                    appInfos: Components.Schemas.App.relationshipsPayload.appInfosPayload? = nil,
                    appClips: Components.Schemas.App.relationshipsPayload.appClipsPayload? = nil,
                    appPricePoints: Components.Schemas.App.relationshipsPayload.appPricePointsPayload? = nil,
                    endUserLicenseAgreement: Components.Schemas.App.relationshipsPayload.endUserLicenseAgreementPayload? = nil,
                    appPriceSchedule: Components.Schemas.App.relationshipsPayload.appPriceSchedulePayload? = nil,
                    appAvailabilityV2: Components.Schemas.App.relationshipsPayload.appAvailabilityV2Payload? = nil,
                    inAppPurchases: Components.Schemas.App.relationshipsPayload.inAppPurchasesPayload? = nil,
                    subscriptionGroups: Components.Schemas.App.relationshipsPayload.subscriptionGroupsPayload? = nil,
                    gameCenterEnabledVersions: Components.Schemas.App.relationshipsPayload.gameCenterEnabledVersionsPayload? = nil,
                    perfPowerMetrics: Components.Schemas.App.relationshipsPayload.perfPowerMetricsPayload? = nil,
                    appCustomProductPages: Components.Schemas.App.relationshipsPayload.appCustomProductPagesPayload? = nil,
                    inAppPurchasesV2: Components.Schemas.App.relationshipsPayload.inAppPurchasesV2Payload? = nil,
                    promotedPurchases: Components.Schemas.App.relationshipsPayload.promotedPurchasesPayload? = nil,
                    appEvents: Components.Schemas.App.relationshipsPayload.appEventsPayload? = nil,
                    reviewSubmissions: Components.Schemas.App.relationshipsPayload.reviewSubmissionsPayload? = nil,
                    subscriptionGracePeriod: Components.Schemas.App.relationshipsPayload.subscriptionGracePeriodPayload? = nil,
                    customerReviews: Components.Schemas.App.relationshipsPayload.customerReviewsPayload? = nil,
                    customerReviewSummarizations: Components.Schemas.App.relationshipsPayload.customerReviewSummarizationsPayload? = nil,
                    gameCenterDetail: Components.Schemas.App.relationshipsPayload.gameCenterDetailPayload? = nil,
                    appStoreVersionExperimentsV2: Components.Schemas.App.relationshipsPayload.appStoreVersionExperimentsV2Payload? = nil,
                    alternativeDistributionKey: Components.Schemas.App.relationshipsPayload.alternativeDistributionKeyPayload? = nil,
                    analyticsReportRequests: Components.Schemas.App.relationshipsPayload.analyticsReportRequestsPayload? = nil,
                    marketplaceSearchDetail: Components.Schemas.App.relationshipsPayload.marketplaceSearchDetailPayload? = nil,
                    buildUploads: Components.Schemas.App.relationshipsPayload.buildUploadsPayload? = nil,
                    backgroundAssets: Components.Schemas.App.relationshipsPayload.backgroundAssetsPayload? = nil,
                    betaFeedbackScreenshotSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackScreenshotSubmissionsPayload? = nil,
                    betaFeedbackCrashSubmissions: Components.Schemas.App.relationshipsPayload.betaFeedbackCrashSubmissionsPayload? = nil,
                    searchKeywords: Components.Schemas.App.relationshipsPayload.searchKeywordsPayload? = nil,
                    webhooks: Components.Schemas.App.relationshipsPayload.webhooksPayload? = nil
                ) {
                    self.accessibilityDeclarations = accessibilityDeclarations
                    self.appEncryptionDeclarations = appEncryptionDeclarations
                    self.ciProduct = ciProduct
                    self.betaTesters = betaTesters
                    self.betaGroups = betaGroups
                    self.appStoreVersions = appStoreVersions
                    self.appTags = appTags
                    self.preReleaseVersions = preReleaseVersions
                    self.betaAppLocalizations = betaAppLocalizations
                    self.builds = builds
                    self.betaLicenseAgreement = betaLicenseAgreement
                    self.betaAppReviewDetail = betaAppReviewDetail
                    self.appInfos = appInfos
                    self.appClips = appClips
                    self.appPricePoints = appPricePoints
                    self.endUserLicenseAgreement = endUserLicenseAgreement
                    self.appPriceSchedule = appPriceSchedule
                    self.appAvailabilityV2 = appAvailabilityV2
                    self.inAppPurchases = inAppPurchases
                    self.subscriptionGroups = subscriptionGroups
                    self.gameCenterEnabledVersions = gameCenterEnabledVersions
                    self.perfPowerMetrics = perfPowerMetrics
                    self.appCustomProductPages = appCustomProductPages
                    self.inAppPurchasesV2 = inAppPurchasesV2
                    self.promotedPurchases = promotedPurchases
                    self.appEvents = appEvents
                    self.reviewSubmissions = reviewSubmissions
                    self.subscriptionGracePeriod = subscriptionGracePeriod
                    self.customerReviews = customerReviews
                    self.customerReviewSummarizations = customerReviewSummarizations
                    self.gameCenterDetail = gameCenterDetail
                    self.appStoreVersionExperimentsV2 = appStoreVersionExperimentsV2
                    self.alternativeDistributionKey = alternativeDistributionKey
                    self.analyticsReportRequests = analyticsReportRequests
                    self.marketplaceSearchDetail = marketplaceSearchDetail
                    self.buildUploads = buildUploads
                    self.backgroundAssets = backgroundAssets
                    self.betaFeedbackScreenshotSubmissions = betaFeedbackScreenshotSubmissions
                    self.betaFeedbackCrashSubmissions = betaFeedbackCrashSubmissions
                    self.searchKeywords = searchKeywords
                    self.webhooks = webhooks
                }
                internal enum CodingKeys: String, CodingKey {
                    case accessibilityDeclarations
                    case appEncryptionDeclarations
                    case ciProduct
                    case betaTesters
                    case betaGroups
                    case appStoreVersions
                    case appTags
                    case preReleaseVersions
                    case betaAppLocalizations
                    case builds
                    case betaLicenseAgreement
                    case betaAppReviewDetail
                    case appInfos
                    case appClips
                    case appPricePoints
                    case endUserLicenseAgreement
                    case appPriceSchedule
                    case appAvailabilityV2
                    case inAppPurchases
                    case subscriptionGroups
                    case gameCenterEnabledVersions
                    case perfPowerMetrics
                    case appCustomProductPages
                    case inAppPurchasesV2
                    case promotedPurchases
                    case appEvents
                    case reviewSubmissions
                    case subscriptionGracePeriod
                    case customerReviews
                    case customerReviewSummarizations
                    case gameCenterDetail
                    case appStoreVersionExperimentsV2
                    case alternativeDistributionKey
                    case analyticsReportRequests
                    case marketplaceSearchDetail
                    case buildUploads
                    case backgroundAssets
                    case betaFeedbackScreenshotSubmissions
                    case betaFeedbackCrashSubmissions
                    case searchKeywords
                    case webhooks
                }
            }
            /// - Remark: Generated from `#/components/schemas/App/relationships`.
            internal var relationships: Components.Schemas.App.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/App/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `App`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.App._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.App.attributesPayload? = nil,
                relationships: Components.Schemas.App.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission`.
        internal struct BetaAppReviewSubmission: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaAppReviewSubmissions = "betaAppReviewSubmissions"
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/type`.
            internal var _type: Components.Schemas.BetaAppReviewSubmission._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/attributes/betaReviewState`.
                internal var betaReviewState: Components.Schemas.BetaReviewState?
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/attributes/submittedDate`.
                internal var submittedDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - betaReviewState:
                ///   - submittedDate:
                internal init(
                    betaReviewState: Components.Schemas.BetaReviewState? = nil,
                    submittedDate: Foundation.Date? = nil
                ) {
                    self.betaReviewState = betaReviewState
                    self.submittedDate = submittedDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case betaReviewState
                    case submittedDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/attributes`.
            internal var attributes: Components.Schemas.BetaAppReviewSubmission.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/data/type`.
                        internal var _type: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build/data`.
                    internal var data: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships/build`.
                internal var build: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - build:
                internal init(build: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload.buildPayload? = nil) {
                    self.build = build
                }
                internal enum CodingKeys: String, CodingKey {
                    case build
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/relationships`.
            internal var relationships: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmission/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaAppReviewSubmission`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaAppReviewSubmission._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaAppReviewSubmission.attributesPayload? = nil,
                relationships: Components.Schemas.BetaAppReviewSubmission.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionResponse`.
        internal struct BetaAppReviewSubmissionResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionResponse/data`.
            internal var data: Components.Schemas.BetaAppReviewSubmission
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionResponse/included`.
            internal var included: [Components.Schemas.Build]?
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BetaAppReviewSubmissionResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.BetaAppReviewSubmission,
                included: [Components.Schemas.Build]? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest`.
        internal struct BetaAppReviewSubmissionCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaAppReviewSubmissions = "betaAppReviewSubmissions"
                }
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/type`.
                internal var _type: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build`.
                    internal struct buildPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case builds = "builds"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build/data/type`.
                            internal var _type: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build/data`.
                        internal var data: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload
                        /// Creates a new `buildPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships/build`.
                    internal var build: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - build:
                    internal init(build: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload.buildPayload) {
                        self.build = build
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case build
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload._typePayload,
                    relationships: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaAppReviewSubmissionCreateRequest/data`.
            internal var data: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload
            /// Creates a new `BetaAppReviewSubmissionCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaAppReviewSubmissionCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization`.
        internal struct BetaBuildLocalization: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaBuildLocalizations = "betaBuildLocalizations"
            }
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/type`.
            internal var _type: Components.Schemas.BetaBuildLocalization._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/attributes/whatsNew`.
                internal var whatsNew: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/attributes/locale`.
                internal var locale: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - whatsNew:
                ///   - locale:
                internal init(
                    whatsNew: Swift.String? = nil,
                    locale: Swift.String? = nil
                ) {
                    self.whatsNew = whatsNew
                    self.locale = locale
                }
                internal enum CodingKeys: String, CodingKey {
                    case whatsNew
                    case locale
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/attributes`.
            internal var attributes: Components.Schemas.BetaBuildLocalization.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/data/type`.
                        internal var _type: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build/data`.
                    internal var data: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships/build`.
                internal var build: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - build:
                internal init(build: Components.Schemas.BetaBuildLocalization.relationshipsPayload.buildPayload? = nil) {
                    self.build = build
                }
                internal enum CodingKeys: String, CodingKey {
                    case build
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/relationships`.
            internal var relationships: Components.Schemas.BetaBuildLocalization.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalization/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaBuildLocalization`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaBuildLocalization._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaBuildLocalization.attributesPayload? = nil,
                relationships: Components.Schemas.BetaBuildLocalization.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationResponse`.
        internal struct BetaBuildLocalizationResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationResponse/data`.
            internal var data: Components.Schemas.BetaBuildLocalization
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationResponse/included`.
            internal var included: [Components.Schemas.Build]?
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BetaBuildLocalizationResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.BetaBuildLocalization,
                included: [Components.Schemas.Build]? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest`.
        internal struct BetaBuildLocalizationCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaBuildLocalizations = "betaBuildLocalizations"
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/type`.
                internal var _type: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/attributes/whatsNew`.
                    internal var whatsNew: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/attributes/locale`.
                    internal var locale: Swift.String
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - whatsNew:
                    ///   - locale:
                    internal init(
                        whatsNew: Swift.String? = nil,
                        locale: Swift.String
                    ) {
                        self.whatsNew = whatsNew
                        self.locale = locale
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case whatsNew
                        case locale
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build`.
                    internal struct buildPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case builds = "builds"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build/data/type`.
                            internal var _type: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build/data`.
                        internal var data: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload
                        /// Creates a new `buildPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships/build`.
                    internal var build: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - build:
                    internal init(build: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload.buildPayload) {
                        self.build = build
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case build
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationCreateRequest/data`.
            internal var data: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload
            /// Creates a new `BetaBuildLocalizationCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaBuildLocalizationCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest`.
        internal struct BetaBuildLocalizationUpdateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaBuildLocalizations = "betaBuildLocalizations"
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/type`.
                internal var _type: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/id`.
                internal var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/attributes/whatsNew`.
                    internal var whatsNew: Swift.String?
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - whatsNew:
                    internal init(whatsNew: Swift.String? = nil) {
                        self.whatsNew = whatsNew
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case whatsNew
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload.attributesPayload?
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                ///   - attributes:
                internal init(
                    _type: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload._typePayload,
                    id: Swift.String,
                    attributes: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload.attributesPayload? = nil
                ) {
                    self._type = _type
                    self.id = id
                    self.attributes = attributes
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                    case attributes
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationUpdateRequest/data`.
            internal var data: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload
            /// Creates a new `BetaBuildLocalizationUpdateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaBuildLocalizationUpdateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroup`.
        internal struct BetaGroup: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroup/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaGroups = "betaGroups"
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/type`.
            internal var _type: Components.Schemas.BetaGroup._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaGroup/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/name`.
                internal var name: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/isInternalGroup`.
                internal var isInternalGroup: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/hasAccessToAllBuilds`.
                internal var hasAccessToAllBuilds: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkEnabled`.
                internal var publicLinkEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkId`.
                internal var publicLinkId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkLimitEnabled`.
                internal var publicLinkLimitEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLinkLimit`.
                internal var publicLinkLimit: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/publicLink`.
                internal var publicLink: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/feedbackEnabled`.
                internal var feedbackEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/iosBuildsAvailableForAppleSiliconMac`.
                internal var iosBuildsAvailableForAppleSiliconMac: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes/iosBuildsAvailableForAppleVision`.
                internal var iosBuildsAvailableForAppleVision: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - name:
                ///   - createdDate:
                ///   - isInternalGroup:
                ///   - hasAccessToAllBuilds:
                ///   - publicLinkEnabled:
                ///   - publicLinkId:
                ///   - publicLinkLimitEnabled:
                ///   - publicLinkLimit:
                ///   - publicLink:
                ///   - feedbackEnabled:
                ///   - iosBuildsAvailableForAppleSiliconMac:
                ///   - iosBuildsAvailableForAppleVision:
                internal init(
                    name: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    isInternalGroup: Swift.Bool? = nil,
                    hasAccessToAllBuilds: Swift.Bool? = nil,
                    publicLinkEnabled: Swift.Bool? = nil,
                    publicLinkId: Swift.String? = nil,
                    publicLinkLimitEnabled: Swift.Bool? = nil,
                    publicLinkLimit: Swift.Int? = nil,
                    publicLink: Swift.String? = nil,
                    feedbackEnabled: Swift.Bool? = nil,
                    iosBuildsAvailableForAppleSiliconMac: Swift.Bool? = nil,
                    iosBuildsAvailableForAppleVision: Swift.Bool? = nil
                ) {
                    self.name = name
                    self.createdDate = createdDate
                    self.isInternalGroup = isInternalGroup
                    self.hasAccessToAllBuilds = hasAccessToAllBuilds
                    self.publicLinkEnabled = publicLinkEnabled
                    self.publicLinkId = publicLinkId
                    self.publicLinkLimitEnabled = publicLinkLimitEnabled
                    self.publicLinkLimit = publicLinkLimit
                    self.publicLink = publicLink
                    self.feedbackEnabled = feedbackEnabled
                    self.iosBuildsAvailableForAppleSiliconMac = iosBuildsAvailableForAppleSiliconMac
                    self.iosBuildsAvailableForAppleVision = iosBuildsAvailableForAppleVision
                }
                internal enum CodingKeys: String, CodingKey {
                    case name
                    case createdDate
                    case isInternalGroup
                    case hasAccessToAllBuilds
                    case publicLinkEnabled
                    case publicLinkId
                    case publicLinkLimitEnabled
                    case publicLinkLimit
                    case publicLink
                    case feedbackEnabled
                    case iosBuildsAvailableForAppleSiliconMac
                    case iosBuildsAvailableForAppleVision
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/attributes`.
            internal var attributes: Components.Schemas.BetaGroup.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/app`.
                internal var app: Components.Schemas.BetaGroup.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/builds`.
                internal var builds: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters`.
                internal struct betaTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaTesters = "betaTesters"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayload?
                    /// Creates a new `betaTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaTesters`.
                internal var betaTesters: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria`.
                internal struct betaRecruitmentCriteriaPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/type`.
                        internal var _type: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria/data`.
                    internal var data: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload?
                    /// Creates a new `betaRecruitmentCriteriaPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriteria`.
                internal var betaRecruitmentCriteria: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload?
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck`.
                internal struct betaRecruitmentCriterionCompatibleBuildCheckPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `betaRecruitmentCriterionCompatibleBuildCheckPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships/betaRecruitmentCriterionCompatibleBuildCheck`.
                internal var betaRecruitmentCriterionCompatibleBuildCheck: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriterionCompatibleBuildCheckPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - app:
                ///   - builds:
                ///   - betaTesters:
                ///   - betaRecruitmentCriteria:
                ///   - betaRecruitmentCriterionCompatibleBuildCheck:
                internal init(
                    app: Components.Schemas.BetaGroup.relationshipsPayload.appPayload? = nil,
                    builds: Components.Schemas.BetaGroup.relationshipsPayload.buildsPayload? = nil,
                    betaTesters: Components.Schemas.BetaGroup.relationshipsPayload.betaTestersPayload? = nil,
                    betaRecruitmentCriteria: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriteriaPayload? = nil,
                    betaRecruitmentCriterionCompatibleBuildCheck: Components.Schemas.BetaGroup.relationshipsPayload.betaRecruitmentCriterionCompatibleBuildCheckPayload? = nil
                ) {
                    self.app = app
                    self.builds = builds
                    self.betaTesters = betaTesters
                    self.betaRecruitmentCriteria = betaRecruitmentCriteria
                    self.betaRecruitmentCriterionCompatibleBuildCheck = betaRecruitmentCriterionCompatibleBuildCheck
                }
                internal enum CodingKeys: String, CodingKey {
                    case app
                    case builds
                    case betaTesters
                    case betaRecruitmentCriteria
                    case betaRecruitmentCriterionCompatibleBuildCheck
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroup/relationships`.
            internal var relationships: Components.Schemas.BetaGroup.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroup/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaGroup`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaGroup._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaGroup.attributesPayload? = nil,
                relationships: Components.Schemas.BetaGroup.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse`.
        internal struct BetaGroupsResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/data`.
            internal var data: [Components.Schemas.BetaGroup]
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/includedPayload/BetaRecruitmentCriterion`.
                case betaRecruitmentCriteria(Components.Schemas.BetaRecruitmentCriterion)
                /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/includedPayload/BetaTester`.
                case betaTesters(Components.Schemas.BetaTester)
                /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "betaRecruitmentCriteria":
                        self = .betaRecruitmentCriteria(try .init(from: decoder))
                    case "betaTesters":
                        self = .betaTesters(try .init(from: decoder))
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .betaRecruitmentCriteria(value):
                        try value.encode(to: encoder)
                    case let .betaTesters(value):
                        try value.encode(to: encoder)
                    case let .builds(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BetaGroupsResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/included`.
            internal var included: Components.Schemas.BetaGroupsResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BetaGroupsResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BetaGroupsResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.BetaGroup],
                included: Components.Schemas.BetaGroupsResponse.includedPayload? = nil,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.included = included
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroupResponse`.
        internal struct BetaGroupResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/data`.
            internal var data: Components.Schemas.BetaGroup
            /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/includedPayload/BetaRecruitmentCriterion`.
                case betaRecruitmentCriteria(Components.Schemas.BetaRecruitmentCriterion)
                /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/includedPayload/BetaTester`.
                case betaTesters(Components.Schemas.BetaTester)
                /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "betaRecruitmentCriteria":
                        self = .betaRecruitmentCriteria(try .init(from: decoder))
                    case "betaTesters":
                        self = .betaTesters(try .init(from: decoder))
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .betaRecruitmentCriteria(value):
                        try value.encode(to: encoder)
                    case let .betaTesters(value):
                        try value.encode(to: encoder)
                    case let .builds(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BetaGroupResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/included`.
            internal var included: Components.Schemas.BetaGroupResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BetaGroupResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BetaGroupResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.BetaGroup,
                included: Components.Schemas.BetaGroupResponse.includedPayload? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion`.
        internal struct BetaRecruitmentCriterion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaRecruitmentCriteria = "betaRecruitmentCriteria"
            }
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/type`.
            internal var _type: Components.Schemas.BetaRecruitmentCriterion._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/attributes/lastModifiedDate`.
                internal var lastModifiedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/attributes/deviceFamilyOsVersionFilters`.
                internal var deviceFamilyOsVersionFilters: [Components.Schemas.DeviceFamilyOsVersionFilter]?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - lastModifiedDate:
                ///   - deviceFamilyOsVersionFilters:
                internal init(
                    lastModifiedDate: Foundation.Date? = nil,
                    deviceFamilyOsVersionFilters: [Components.Schemas.DeviceFamilyOsVersionFilter]? = nil
                ) {
                    self.lastModifiedDate = lastModifiedDate
                    self.deviceFamilyOsVersionFilters = deviceFamilyOsVersionFilters
                }
                internal enum CodingKeys: String, CodingKey {
                    case lastModifiedDate
                    case deviceFamilyOsVersionFilters
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/attributes`.
            internal var attributes: Components.Schemas.BetaRecruitmentCriterion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaRecruitmentCriterion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaRecruitmentCriterion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaRecruitmentCriterion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaRecruitmentCriterion.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitation`.
        internal struct BetaTesterInvitation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitation/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaTesterInvitations = "betaTesterInvitations"
            }
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitation/type`.
            internal var _type: Components.Schemas.BetaTesterInvitation._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitation/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitation/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaTesterInvitation`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaTesterInvitation._typePayload,
                id: Swift.String,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationResponse`.
        internal struct BetaTesterInvitationResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationResponse/data`.
            internal var data: Components.Schemas.BetaTesterInvitation
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BetaTesterInvitationResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            internal init(
                data: Components.Schemas.BetaTesterInvitation,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest`.
        internal struct BetaTesterInvitationCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaTesterInvitations = "betaTesterInvitations"
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/type`.
                internal var _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester`.
                    @available(*, deprecated)
                    internal struct betaTesterPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case betaTesters = "betaTesters"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester/data/type`.
                            internal var _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester/data`.
                        internal var data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload.dataPayload?
                        /// Creates a new `betaTesterPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload.dataPayload? = nil) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/betaTester`.
                    @available(*, deprecated)
                    internal var betaTester: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload?
                    /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app`.
                    internal struct appPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case apps = "apps"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app/data/type`.
                            internal var _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app/data`.
                        internal var data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload
                        /// Creates a new `appPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships/app`.
                    internal var app: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - betaTester:
                    ///   - app:
                    internal init(
                        betaTester: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.betaTesterPayload? = nil,
                        app: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload.appPayload
                    ) {
                        self.betaTester = betaTester
                        self.app = app
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case betaTester
                        case app
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload._typePayload,
                    relationships: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTesterInvitationCreateRequest/data`.
            internal var data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload
            /// Creates a new `BetaTesterInvitationCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaTesterInvitationCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTester`.
        internal struct BetaTester: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTester/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case betaTesters = "betaTesters"
            }
            /// - Remark: Generated from `#/components/schemas/BetaTester/type`.
            internal var _type: Components.Schemas.BetaTester._typePayload
            /// - Remark: Generated from `#/components/schemas/BetaTester/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BetaTester/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTester/attributes/firstName`.
                internal var firstName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaTester/attributes/lastName`.
                internal var lastName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaTester/attributes/email`.
                internal var email: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BetaTester/attributes/inviteType`.
                internal var inviteType: Components.Schemas.BetaInviteType?
                /// - Remark: Generated from `#/components/schemas/BetaTester/attributes/state`.
                internal var state: Components.Schemas.BetaTesterState?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - firstName:
                ///   - lastName:
                ///   - email:
                ///   - inviteType:
                ///   - state:
                internal init(
                    firstName: Swift.String? = nil,
                    lastName: Swift.String? = nil,
                    email: Swift.String? = nil,
                    inviteType: Components.Schemas.BetaInviteType? = nil,
                    state: Components.Schemas.BetaTesterState? = nil
                ) {
                    self.firstName = firstName
                    self.lastName = lastName
                    self.email = email
                    self.inviteType = inviteType
                    self.state = state
                }
                internal enum CodingKeys: String, CodingKey {
                    case firstName
                    case lastName
                    case email
                    case inviteType
                    case state
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTester/attributes`.
            internal var attributes: Components.Schemas.BetaTester.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BetaTester/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps`.
                internal struct appsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaTester.relationshipsPayload.appsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaTester.relationshipsPayload.appsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaTester.relationshipsPayload.appsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps/data`.
                    internal var data: Components.Schemas.BetaTester.relationshipsPayload.appsPayload.dataPayload?
                    /// Creates a new `appsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaTester.relationshipsPayload.appsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/apps`.
                internal var apps: Components.Schemas.BetaTester.relationshipsPayload.appsPayload?
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups`.
                internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaGroups = "betaGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups/data`.
                    internal var data: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload.dataPayload?
                    /// Creates a new `betaGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/betaGroups`.
                internal var betaGroups: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.BetaTester.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds/data`.
                    internal var data: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTester/relationships/builds`.
                internal var builds: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - apps:
                ///   - betaGroups:
                ///   - builds:
                internal init(
                    apps: Components.Schemas.BetaTester.relationshipsPayload.appsPayload? = nil,
                    betaGroups: Components.Schemas.BetaTester.relationshipsPayload.betaGroupsPayload? = nil,
                    builds: Components.Schemas.BetaTester.relationshipsPayload.buildsPayload? = nil
                ) {
                    self.apps = apps
                    self.betaGroups = betaGroups
                    self.builds = builds
                }
                internal enum CodingKeys: String, CodingKey {
                    case apps
                    case betaGroups
                    case builds
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTester/relationships`.
            internal var relationships: Components.Schemas.BetaTester.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BetaTester/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BetaTester`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BetaTester._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BetaTester.attributesPayload? = nil,
                relationships: Components.Schemas.BetaTester.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTestersResponse`.
        internal struct BetaTestersResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/data`.
            internal var data: [Components.Schemas.BetaTester]
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/includedPayload/BetaGroup`.
                case betaGroups(Components.Schemas.BetaGroup)
                /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "betaGroups":
                        self = .betaGroups(try .init(from: decoder))
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .betaGroups(value):
                        try value.encode(to: encoder)
                    case let .builds(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BetaTestersResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/included`.
            internal var included: Components.Schemas.BetaTestersResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BetaTestersResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BetaTestersResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.BetaTester],
                included: Components.Schemas.BetaTestersResponse.includedPayload? = nil,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.included = included
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterResponse`.
        internal struct BetaTesterResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/data`.
            internal var data: Components.Schemas.BetaTester
            /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/includedPayload/BetaGroup`.
                case betaGroups(Components.Schemas.BetaGroup)
                /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "betaGroups":
                        self = .betaGroups(try .init(from: decoder))
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .betaGroups(value):
                        try value.encode(to: encoder)
                    case let .builds(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BetaTesterResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/included`.
            internal var included: Components.Schemas.BetaTesterResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BetaTesterResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BetaTesterResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.BetaTester,
                included: Components.Schemas.BetaTesterResponse.includedPayload? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest`.
        internal struct BetaTesterCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaTesters = "betaTesters"
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/type`.
                internal var _type: Components.Schemas.BetaTesterCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/attributes/firstName`.
                    internal var firstName: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/attributes/lastName`.
                    internal var lastName: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/attributes/email`.
                    internal var email: Swift.String
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - firstName:
                    ///   - lastName:
                    ///   - email:
                    internal init(
                        firstName: Swift.String? = nil,
                        lastName: Swift.String? = nil,
                        email: Swift.String
                    ) {
                        self.firstName = firstName
                        self.lastName = lastName
                        self.email = email
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case firstName
                        case lastName
                        case email
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BetaTesterCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups`.
                    internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/dataPayload/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case betaGroups = "betaGroups"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/dataPayload/type`.
                            internal var _type: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/dataPayload/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/data`.
                        internal typealias dataPayload = [Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups/data`.
                        internal var data: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload.dataPayload?
                        /// Creates a new `betaGroupsPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload.dataPayload? = nil) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/betaGroups`.
                    internal var betaGroups: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload?
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds`.
                    internal struct buildsPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/dataPayload/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case builds = "builds"
                            }
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/dataPayload/type`.
                            internal var _type: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/dataPayload/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/data`.
                        internal typealias dataPayload = [Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds/data`.
                        internal var data: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload.dataPayload?
                        /// Creates a new `buildsPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload.dataPayload? = nil) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships/builds`.
                    internal var builds: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload?
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - betaGroups:
                    ///   - builds:
                    internal init(
                        betaGroups: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.betaGroupsPayload? = nil,
                        builds: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload.buildsPayload? = nil
                    ) {
                        self.betaGroups = betaGroups
                        self.builds = builds
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case betaGroups
                        case builds
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload?
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BetaTesterCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.BetaTesterCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.BetaTesterCreateRequest.dataPayload.relationshipsPayload? = nil
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTesterCreateRequest/data`.
            internal var data: Components.Schemas.BetaTesterCreateRequest.dataPayload
            /// Creates a new `BetaTesterCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaTesterCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBetaDetail`.
        internal struct BuildBetaDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildBetaDetails = "buildBetaDetails"
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/type`.
            internal var _type: Components.Schemas.BuildBetaDetail._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/attributes/autoNotifyEnabled`.
                internal var autoNotifyEnabled: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/attributes/internalBuildState`.
                internal var internalBuildState: Components.Schemas.InternalBetaState?
                /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/attributes/externalBuildState`.
                internal var externalBuildState: Components.Schemas.ExternalBetaState?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - autoNotifyEnabled:
                ///   - internalBuildState:
                ///   - externalBuildState:
                internal init(
                    autoNotifyEnabled: Swift.Bool? = nil,
                    internalBuildState: Components.Schemas.InternalBetaState? = nil,
                    externalBuildState: Components.Schemas.ExternalBetaState? = nil
                ) {
                    self.autoNotifyEnabled = autoNotifyEnabled
                    self.internalBuildState = internalBuildState
                    self.externalBuildState = externalBuildState
                }
                internal enum CodingKeys: String, CodingKey {
                    case autoNotifyEnabled
                    case internalBuildState
                    case externalBuildState
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/attributes`.
            internal var attributes: Components.Schemas.BuildBetaDetail.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/data/type`.
                        internal var _type: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build/data`.
                    internal var data: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships/build`.
                internal var build: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - build:
                internal init(build: Components.Schemas.BuildBetaDetail.relationshipsPayload.buildPayload? = nil) {
                    self.build = build
                }
                internal enum CodingKeys: String, CodingKey {
                    case build
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/relationships`.
            internal var relationships: Components.Schemas.BuildBetaDetail.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BuildBetaDetail/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildBetaDetail`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildBetaDetail._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildBetaDetail.attributesPayload? = nil,
                relationships: Components.Schemas.BuildBetaDetail.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBetaNotification`.
        internal struct BuildBetaNotification: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotification/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildBetaNotifications = "buildBetaNotifications"
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotification/type`.
            internal var _type: Components.Schemas.BuildBetaNotification._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotification/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotification/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildBetaNotification`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildBetaNotification._typePayload,
                id: Swift.String,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationResponse`.
        internal struct BuildBetaNotificationResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationResponse/data`.
            internal var data: Components.Schemas.BuildBetaNotification
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BuildBetaNotificationResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            internal init(
                data: Components.Schemas.BuildBetaNotification,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest`.
        internal struct BuildBetaNotificationCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case buildBetaNotifications = "buildBetaNotifications"
                }
                /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/type`.
                internal var _type: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build`.
                    internal struct buildPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case builds = "builds"
                            }
                            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build/data/type`.
                            internal var _type: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build/data`.
                        internal var data: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload
                        /// Creates a new `buildPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships/build`.
                    internal var build: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - build:
                    internal init(build: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload.buildPayload) {
                        self.build = build
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case build
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload._typePayload,
                    relationships: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaNotificationCreateRequest/data`.
            internal var data: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload
            /// Creates a new `BuildBetaNotificationCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildBetaNotificationCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize`.
        internal struct BuildBundleFileSize: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildBundleFileSizes = "buildBundleFileSizes"
            }
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/type`.
            internal var _type: Components.Schemas.BuildBundleFileSize._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes/deviceModel`.
                internal var deviceModel: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes/osVersion`.
                internal var osVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes/downloadBytes`.
                internal var downloadBytes: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes/installBytes`.
                internal var installBytes: Swift.Int?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - deviceModel:
                ///   - osVersion:
                ///   - downloadBytes:
                ///   - installBytes:
                internal init(
                    deviceModel: Swift.String? = nil,
                    osVersion: Swift.String? = nil,
                    downloadBytes: Swift.Int? = nil,
                    installBytes: Swift.Int? = nil
                ) {
                    self.deviceModel = deviceModel
                    self.osVersion = osVersion
                    self.downloadBytes = downloadBytes
                    self.installBytes = installBytes
                }
                internal enum CodingKeys: String, CodingKey {
                    case deviceModel
                    case osVersion
                    case downloadBytes
                    case installBytes
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/attributes`.
            internal var attributes: Components.Schemas.BuildBundleFileSize.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSize/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildBundleFileSize`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildBundleFileSize._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildBundleFileSize.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBundleFileSizesResponse`.
        internal struct BuildBundleFileSizesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSizesResponse/data`.
            internal var data: [Components.Schemas.BuildBundleFileSize]
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSizesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BuildBundleFileSizesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BuildBundleFileSizesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.BuildBundleFileSize],
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBundle`.
        internal struct BuildBundle: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBundle/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildBundles = "buildBundles"
            }
            /// - Remark: Generated from `#/components/schemas/BuildBundle/type`.
            internal var _type: Components.Schemas.BuildBundle._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildBundle/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/bundleId`.
                internal var bundleId: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/bundleType`.
                internal var bundleType: Components.Schemas.BuildBundleType?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/sdkBuild`.
                internal var sdkBuild: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/platformBuild`.
                internal var platformBuild: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/fileName`.
                internal var fileName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/hasSirikit`.
                internal var hasSirikit: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/hasOnDemandResources`.
                internal var hasOnDemandResources: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/hasPrerenderedIcon`.
                internal var hasPrerenderedIcon: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/usesLocationServices`.
                internal var usesLocationServices: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/isIosBuildMacAppStoreCompatible`.
                internal var isIosBuildMacAppStoreCompatible: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/includesSymbols`.
                internal var includesSymbols: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/dSYMUrl`.
                internal var dSYMUrl: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/supportedArchitectures`.
                internal var supportedArchitectures: [Swift.String]?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/requiredCapabilities`.
                internal var requiredCapabilities: [Swift.String]?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/deviceProtocols`.
                internal var deviceProtocols: [Swift.String]?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/locales`.
                internal var locales: [Swift.String]?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/entitlements`.
                internal struct entitlementsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/entitlements/additionalProperties`.
                    internal struct additionalPropertiesPayload: Codable, Hashable, Sendable {
                        /// A container of undocumented properties.
                        internal var additionalProperties: [String: Swift.String]
                        /// Creates a new `additionalPropertiesPayload`.
                        ///
                        /// - Parameters:
                        ///   - additionalProperties: A container of undocumented properties.
                        internal init(additionalProperties: [String: Swift.String] = .init()) {
                            self.additionalProperties = additionalProperties
                        }
                        internal init(from decoder: any Decoder) throws {
                            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                        }
                        internal func encode(to encoder: any Encoder) throws {
                            try encoder.encodeAdditionalProperties(additionalProperties)
                        }
                    }
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: Components.Schemas.BuildBundle.attributesPayload.entitlementsPayload.additionalPropertiesPayload]
                    /// Creates a new `entitlementsPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: Components.Schemas.BuildBundle.attributesPayload.entitlementsPayload.additionalPropertiesPayload] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/entitlements`.
                internal var entitlements: Components.Schemas.BuildBundle.attributesPayload.entitlementsPayload?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/baDownloadAllowance`.
                internal var baDownloadAllowance: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes/baMaxInstallSize`.
                internal var baMaxInstallSize: Swift.Int?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - bundleId:
                ///   - bundleType:
                ///   - sdkBuild:
                ///   - platformBuild:
                ///   - fileName:
                ///   - hasSirikit:
                ///   - hasOnDemandResources:
                ///   - hasPrerenderedIcon:
                ///   - usesLocationServices:
                ///   - isIosBuildMacAppStoreCompatible:
                ///   - includesSymbols:
                ///   - dSYMUrl:
                ///   - supportedArchitectures:
                ///   - requiredCapabilities:
                ///   - deviceProtocols:
                ///   - locales:
                ///   - entitlements:
                ///   - baDownloadAllowance:
                ///   - baMaxInstallSize:
                internal init(
                    bundleId: Swift.String? = nil,
                    bundleType: Components.Schemas.BuildBundleType? = nil,
                    sdkBuild: Swift.String? = nil,
                    platformBuild: Swift.String? = nil,
                    fileName: Swift.String? = nil,
                    hasSirikit: Swift.Bool? = nil,
                    hasOnDemandResources: Swift.Bool? = nil,
                    hasPrerenderedIcon: Swift.Bool? = nil,
                    usesLocationServices: Swift.Bool? = nil,
                    isIosBuildMacAppStoreCompatible: Swift.Bool? = nil,
                    includesSymbols: Swift.Bool? = nil,
                    dSYMUrl: Swift.String? = nil,
                    supportedArchitectures: [Swift.String]? = nil,
                    requiredCapabilities: [Swift.String]? = nil,
                    deviceProtocols: [Swift.String]? = nil,
                    locales: [Swift.String]? = nil,
                    entitlements: Components.Schemas.BuildBundle.attributesPayload.entitlementsPayload? = nil,
                    baDownloadAllowance: Swift.Int? = nil,
                    baMaxInstallSize: Swift.Int? = nil
                ) {
                    self.bundleId = bundleId
                    self.bundleType = bundleType
                    self.sdkBuild = sdkBuild
                    self.platformBuild = platformBuild
                    self.fileName = fileName
                    self.hasSirikit = hasSirikit
                    self.hasOnDemandResources = hasOnDemandResources
                    self.hasPrerenderedIcon = hasPrerenderedIcon
                    self.usesLocationServices = usesLocationServices
                    self.isIosBuildMacAppStoreCompatible = isIosBuildMacAppStoreCompatible
                    self.includesSymbols = includesSymbols
                    self.dSYMUrl = dSYMUrl
                    self.supportedArchitectures = supportedArchitectures
                    self.requiredCapabilities = requiredCapabilities
                    self.deviceProtocols = deviceProtocols
                    self.locales = locales
                    self.entitlements = entitlements
                    self.baDownloadAllowance = baDownloadAllowance
                    self.baMaxInstallSize = baMaxInstallSize
                }
                internal enum CodingKeys: String, CodingKey {
                    case bundleId
                    case bundleType
                    case sdkBuild
                    case platformBuild
                    case fileName
                    case hasSirikit
                    case hasOnDemandResources
                    case hasPrerenderedIcon
                    case usesLocationServices
                    case isIosBuildMacAppStoreCompatible
                    case includesSymbols
                    case dSYMUrl
                    case supportedArchitectures
                    case requiredCapabilities
                    case deviceProtocols
                    case locales
                    case entitlements
                    case baDownloadAllowance
                    case baMaxInstallSize
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBundle/attributes`.
            internal var attributes: Components.Schemas.BuildBundle.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus`.
                internal struct appClipDomainCacheStatusPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClipDomainStatuses = "appClipDomainStatuses"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/data/type`.
                        internal var _type: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus/data`.
                    internal var data: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload.dataPayload?
                    /// Creates a new `appClipDomainCacheStatusPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainCacheStatus`.
                internal var appClipDomainCacheStatus: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus`.
                internal struct appClipDomainDebugStatusPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appClipDomainStatuses = "appClipDomainStatuses"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/data/type`.
                        internal var _type: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus/data`.
                    internal var data: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload.dataPayload?
                    /// Creates a new `appClipDomainDebugStatusPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/appClipDomainDebugStatus`.
                internal var appClipDomainDebugStatus: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations`.
                internal struct betaAppClipInvocationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppClipInvocations = "betaAppClipInvocations"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/dataPayload/type`.
                        internal var _type: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/data`.
                    internal typealias dataPayload = [Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations/data`.
                    internal var data: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload.dataPayload?
                    /// Creates a new `betaAppClipInvocationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/betaAppClipInvocations`.
                internal var betaAppClipInvocations: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload?
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes`.
                internal struct buildBundleFileSizesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildBundleFileSizes = "buildBundleFileSizes"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/dataPayload/type`.
                        internal var _type: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/data`.
                    internal typealias dataPayload = [Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes/data`.
                    internal var data: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload.dataPayload?
                    /// Creates a new `buildBundleFileSizesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships/buildBundleFileSizes`.
                internal var buildBundleFileSizes: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - appClipDomainCacheStatus:
                ///   - appClipDomainDebugStatus:
                ///   - betaAppClipInvocations:
                ///   - buildBundleFileSizes:
                internal init(
                    appClipDomainCacheStatus: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainCacheStatusPayload? = nil,
                    appClipDomainDebugStatus: Components.Schemas.BuildBundle.relationshipsPayload.appClipDomainDebugStatusPayload? = nil,
                    betaAppClipInvocations: Components.Schemas.BuildBundle.relationshipsPayload.betaAppClipInvocationsPayload? = nil,
                    buildBundleFileSizes: Components.Schemas.BuildBundle.relationshipsPayload.buildBundleFileSizesPayload? = nil
                ) {
                    self.appClipDomainCacheStatus = appClipDomainCacheStatus
                    self.appClipDomainDebugStatus = appClipDomainDebugStatus
                    self.betaAppClipInvocations = betaAppClipInvocations
                    self.buildBundleFileSizes = buildBundleFileSizes
                }
                internal enum CodingKeys: String, CodingKey {
                    case appClipDomainCacheStatus
                    case appClipDomainDebugStatus
                    case betaAppClipInvocations
                    case buildBundleFileSizes
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBundle/relationships`.
            internal var relationships: Components.Schemas.BuildBundle.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BuildBundle/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildBundle`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildBundle._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildBundle.attributesPayload? = nil,
                relationships: Components.Schemas.BuildBundle.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildIcon`.
        internal struct BuildIcon: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildIcon/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildIcons = "buildIcons"
            }
            /// - Remark: Generated from `#/components/schemas/BuildIcon/type`.
            internal var _type: Components.Schemas.BuildIcon._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildIcon/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes/iconAsset`.
                internal var iconAsset: Components.Schemas.ImageAsset?
                /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes/iconType`.
                internal var iconType: Components.Schemas.IconAssetType?
                /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes/masked`.
                internal var masked: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes/name`.
                internal var name: Swift.String?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - iconAsset:
                ///   - iconType:
                ///   - masked:
                ///   - name:
                internal init(
                    iconAsset: Components.Schemas.ImageAsset? = nil,
                    iconType: Components.Schemas.IconAssetType? = nil,
                    masked: Swift.Bool? = nil,
                    name: Swift.String? = nil
                ) {
                    self.iconAsset = iconAsset
                    self.iconType = iconType
                    self.masked = masked
                    self.name = name
                }
                internal enum CodingKeys: String, CodingKey {
                    case iconAsset
                    case iconType
                    case masked
                    case name
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildIcon/attributes`.
            internal var attributes: Components.Schemas.BuildIcon.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildIcon/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildIcon`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildIcon._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildIcon.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadFile`.
        internal struct BuildUploadFile: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildUploadFiles = "buildUploadFiles"
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/type`.
            internal var _type: Components.Schemas.BuildUploadFile._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/assetDeliveryState`.
                internal var assetDeliveryState: Components.Schemas.AppMediaAssetState?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/assetToken`.
                internal var assetToken: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/assetType`.
                internal enum assetTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case ASSET = "ASSET"
                    case ASSET_DESCRIPTION = "ASSET_DESCRIPTION"
                    case ASSET_SPI = "ASSET_SPI"
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/assetType`.
                internal var assetType: Components.Schemas.BuildUploadFile.attributesPayload.assetTypePayload?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/fileName`.
                internal var fileName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/fileSize`.
                internal var fileSize: Swift.Int64?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/sourceFileChecksums`.
                internal var sourceFileChecksums: Components.Schemas.Checksums?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/uploadOperations`.
                internal var uploadOperations: [Components.Schemas.DeliveryFileUploadOperation]?
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/uti`.
                internal enum utiPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case com_period_apple_period_binary_hyphen_property_hyphen_list = "com.apple.binary-property-list"
                    case com_period_apple_period_ipa = "com.apple.ipa"
                    case com_period_apple_period_pkg = "com.apple.pkg"
                    case com_period_apple_period_xml_hyphen_property_hyphen_list = "com.apple.xml-property-list"
                    case com_period_pkware_period_zip_hyphen_archive = "com.pkware.zip-archive"
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes/uti`.
                internal var uti: Components.Schemas.BuildUploadFile.attributesPayload.utiPayload?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - assetDeliveryState:
                ///   - assetToken:
                ///   - assetType:
                ///   - fileName:
                ///   - fileSize:
                ///   - sourceFileChecksums:
                ///   - uploadOperations:
                ///   - uti:
                internal init(
                    assetDeliveryState: Components.Schemas.AppMediaAssetState? = nil,
                    assetToken: Swift.String? = nil,
                    assetType: Components.Schemas.BuildUploadFile.attributesPayload.assetTypePayload? = nil,
                    fileName: Swift.String? = nil,
                    fileSize: Swift.Int64? = nil,
                    sourceFileChecksums: Components.Schemas.Checksums? = nil,
                    uploadOperations: [Components.Schemas.DeliveryFileUploadOperation]? = nil,
                    uti: Components.Schemas.BuildUploadFile.attributesPayload.utiPayload? = nil
                ) {
                    self.assetDeliveryState = assetDeliveryState
                    self.assetToken = assetToken
                    self.assetType = assetType
                    self.fileName = fileName
                    self.fileSize = fileSize
                    self.sourceFileChecksums = sourceFileChecksums
                    self.uploadOperations = uploadOperations
                    self.uti = uti
                }
                internal enum CodingKeys: String, CodingKey {
                    case assetDeliveryState
                    case assetToken
                    case assetType
                    case fileName
                    case fileSize
                    case sourceFileChecksums
                    case uploadOperations
                    case uti
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/attributes`.
            internal var attributes: Components.Schemas.BuildUploadFile.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildUploadFile/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildUploadFile`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildUploadFile._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildUploadFile.attributesPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadFileResponse`.
        internal struct BuildUploadFileResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileResponse/data`.
            internal var data: Components.Schemas.BuildUploadFile
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BuildUploadFileResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            internal init(
                data: Components.Schemas.BuildUploadFile,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest`.
        internal struct BuildUploadFileCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case buildUploadFiles = "buildUploadFiles"
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/type`.
                internal var _type: Components.Schemas.BuildUploadFileCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/assetType`.
                    internal enum assetTypePayload: String, Codable, Hashable, Sendable, CaseIterable {
                        case ASSET = "ASSET"
                        case ASSET_DESCRIPTION = "ASSET_DESCRIPTION"
                        case ASSET_SPI = "ASSET_SPI"
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/assetType`.
                    internal var assetType: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload.assetTypePayload
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/fileName`.
                    internal var fileName: Swift.String
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/fileSize`.
                    internal var fileSize: Swift.Int64
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/uti`.
                    internal enum utiPayload: String, Codable, Hashable, Sendable, CaseIterable {
                        case com_period_apple_period_binary_hyphen_property_hyphen_list = "com.apple.binary-property-list"
                        case com_period_apple_period_ipa = "com.apple.ipa"
                        case com_period_apple_period_pkg = "com.apple.pkg"
                        case com_period_apple_period_xml_hyphen_property_hyphen_list = "com.apple.xml-property-list"
                        case com_period_pkware_period_zip_hyphen_archive = "com.pkware.zip-archive"
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes/uti`.
                    internal var uti: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload.utiPayload
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - assetType:
                    ///   - fileName:
                    ///   - fileSize:
                    ///   - uti:
                    internal init(
                        assetType: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload.assetTypePayload,
                        fileName: Swift.String,
                        fileSize: Swift.Int64,
                        uti: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload.utiPayload
                    ) {
                        self.assetType = assetType
                        self.fileName = fileName
                        self.fileSize = fileSize
                        self.uti = uti
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case assetType
                        case fileName
                        case fileSize
                        case uti
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload`.
                    internal struct buildUploadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case buildUploads = "buildUploads"
                            }
                            /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload/data/type`.
                            internal var _type: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload/data`.
                        internal var data: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload.dataPayload
                        /// Creates a new `buildUploadPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships/buildUpload`.
                    internal var buildUpload: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - buildUpload:
                    internal init(buildUpload: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload.buildUploadPayload) {
                        self.buildUpload = buildUpload
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case buildUpload
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BuildUploadFileCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.BuildUploadFileCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileCreateRequest/data`.
            internal var data: Components.Schemas.BuildUploadFileCreateRequest.dataPayload
            /// Creates a new `BuildUploadFileCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildUploadFileCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest`.
        internal struct BuildUploadFileUpdateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case buildUploadFiles = "buildUploadFiles"
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/type`.
                internal var _type: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/id`.
                internal var id: Swift.String
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/attributes/sourceFileChecksums`.
                    internal var sourceFileChecksums: Components.Schemas.Checksums?
                    /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/attributes/uploaded`.
                    internal var uploaded: Swift.Bool?
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - sourceFileChecksums:
                    ///   - uploaded:
                    internal init(
                        sourceFileChecksums: Components.Schemas.Checksums? = nil,
                        uploaded: Swift.Bool? = nil
                    ) {
                        self.sourceFileChecksums = sourceFileChecksums
                        self.uploaded = uploaded
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case sourceFileChecksums
                        case uploaded
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload.attributesPayload?
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                ///   - attributes:
                internal init(
                    _type: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload._typePayload,
                    id: Swift.String,
                    attributes: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload.attributesPayload? = nil
                ) {
                    self._type = _type
                    self.id = id
                    self.attributes = attributes
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                    case attributes
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadFileUpdateRequest/data`.
            internal var data: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload
            /// Creates a new `BuildUploadFileUpdateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildUploadFileUpdateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUpload`.
        internal struct BuildUpload: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUpload/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case buildUploads = "buildUploads"
            }
            /// - Remark: Generated from `#/components/schemas/BuildUpload/type`.
            internal var _type: Components.Schemas.BuildUpload._typePayload
            /// - Remark: Generated from `#/components/schemas/BuildUpload/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/cfBundleShortVersionString`.
                internal var cfBundleShortVersionString: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/cfBundleVersion`.
                internal var cfBundleVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/createdDate`.
                internal var createdDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state`.
                internal struct statePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state/errors`.
                    internal var errors: [Components.Schemas.StateDetail]?
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state/warnings`.
                    internal var warnings: [Components.Schemas.StateDetail]?
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state/infos`.
                    internal var infos: [Components.Schemas.StateDetail]?
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state/state`.
                    internal var state: Components.Schemas.BuildUploadState?
                    /// Creates a new `statePayload`.
                    ///
                    /// - Parameters:
                    ///   - errors:
                    ///   - warnings:
                    ///   - infos:
                    ///   - state:
                    internal init(
                        errors: [Components.Schemas.StateDetail]? = nil,
                        warnings: [Components.Schemas.StateDetail]? = nil,
                        infos: [Components.Schemas.StateDetail]? = nil,
                        state: Components.Schemas.BuildUploadState? = nil
                    ) {
                        self.errors = errors
                        self.warnings = warnings
                        self.infos = infos
                        self.state = state
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case errors
                        case warnings
                        case infos
                        case state
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/state`.
                internal var state: Components.Schemas.BuildUpload.attributesPayload.statePayload?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes/uploadedDate`.
                internal var uploadedDate: Foundation.Date?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - cfBundleShortVersionString:
                ///   - cfBundleVersion:
                ///   - createdDate:
                ///   - state:
                ///   - platform:
                ///   - uploadedDate:
                internal init(
                    cfBundleShortVersionString: Swift.String? = nil,
                    cfBundleVersion: Swift.String? = nil,
                    createdDate: Foundation.Date? = nil,
                    state: Components.Schemas.BuildUpload.attributesPayload.statePayload? = nil,
                    platform: Components.Schemas.Platform? = nil,
                    uploadedDate: Foundation.Date? = nil
                ) {
                    self.cfBundleShortVersionString = cfBundleShortVersionString
                    self.cfBundleVersion = cfBundleVersion
                    self.createdDate = createdDate
                    self.state = state
                    self.platform = platform
                    self.uploadedDate = uploadedDate
                }
                internal enum CodingKeys: String, CodingKey {
                    case cfBundleShortVersionString
                    case cfBundleVersion
                    case createdDate
                    case state
                    case platform
                    case uploadedDate
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUpload/attributes`.
            internal var attributes: Components.Schemas.BuildUpload.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build`.
                internal struct buildPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build/data/type`.
                        internal var _type: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build/data`.
                    internal var data: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload.dataPayload?
                    /// Creates a new `buildPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/build`.
                internal var build: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile`.
                internal struct assetFilePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildUploadFiles = "buildUploadFiles"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile/data/type`.
                        internal var _type: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile/data`.
                    internal var data: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload.dataPayload?
                    /// Creates a new `assetFilePayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetFile`.
                internal var assetFile: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile`.
                internal struct assetDescriptionFilePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildUploadFiles = "buildUploadFiles"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile/data/type`.
                        internal var _type: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile/data`.
                    internal var data: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload.dataPayload?
                    /// Creates a new `assetDescriptionFilePayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetDescriptionFile`.
                internal var assetDescriptionFile: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile`.
                internal struct assetSpiFilePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildUploadFiles = "buildUploadFiles"
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile/data/type`.
                        internal var _type: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile/data`.
                    internal var data: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload.dataPayload?
                    /// Creates a new `assetSpiFilePayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/assetSpiFile`.
                internal var assetSpiFile: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload?
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/buildUploadFiles`.
                internal struct buildUploadFilesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/buildUploadFiles/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `buildUploadFilesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships/buildUploadFiles`.
                internal var buildUploadFiles: Components.Schemas.BuildUpload.relationshipsPayload.buildUploadFilesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - build:
                ///   - assetFile:
                ///   - assetDescriptionFile:
                ///   - assetSpiFile:
                ///   - buildUploadFiles:
                internal init(
                    build: Components.Schemas.BuildUpload.relationshipsPayload.buildPayload? = nil,
                    assetFile: Components.Schemas.BuildUpload.relationshipsPayload.assetFilePayload? = nil,
                    assetDescriptionFile: Components.Schemas.BuildUpload.relationshipsPayload.assetDescriptionFilePayload? = nil,
                    assetSpiFile: Components.Schemas.BuildUpload.relationshipsPayload.assetSpiFilePayload? = nil,
                    buildUploadFiles: Components.Schemas.BuildUpload.relationshipsPayload.buildUploadFilesPayload? = nil
                ) {
                    self.build = build
                    self.assetFile = assetFile
                    self.assetDescriptionFile = assetDescriptionFile
                    self.assetSpiFile = assetSpiFile
                    self.buildUploadFiles = buildUploadFiles
                }
                internal enum CodingKeys: String, CodingKey {
                    case build
                    case assetFile
                    case assetDescriptionFile
                    case assetSpiFile
                    case buildUploadFiles
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUpload/relationships`.
            internal var relationships: Components.Schemas.BuildUpload.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/BuildUpload/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `BuildUpload`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.BuildUpload._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.BuildUpload.attributesPayload? = nil,
                relationships: Components.Schemas.BuildUpload.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadResponse`.
        internal struct BuildUploadResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/data`.
            internal var data: Components.Schemas.BuildUpload
            /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/includedPayload/Build`.
                case builds(Components.Schemas.Build)
                /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/includedPayload/BuildUploadFile`.
                case buildUploadFiles(Components.Schemas.BuildUploadFile)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "builds":
                        self = .builds(try .init(from: decoder))
                    case "buildUploadFiles":
                        self = .buildUploadFiles(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .builds(value):
                        try value.encode(to: encoder)
                    case let .buildUploadFiles(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BuildUploadResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/included`.
            internal var included: Components.Schemas.BuildUploadResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BuildUploadResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BuildUploadResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.BuildUpload,
                included: Components.Schemas.BuildUploadResponse.includedPayload? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest`.
        internal struct BuildUploadCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case buildUploads = "buildUploads"
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/type`.
                internal var _type: Components.Schemas.BuildUploadCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/attributes/cfBundleShortVersionString`.
                    internal var cfBundleShortVersionString: Swift.String
                    /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/attributes/cfBundleVersion`.
                    internal var cfBundleVersion: Swift.String
                    /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/attributes/platform`.
                    internal var platform: Components.Schemas.Platform
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - cfBundleShortVersionString:
                    ///   - cfBundleVersion:
                    ///   - platform:
                    internal init(
                        cfBundleShortVersionString: Swift.String,
                        cfBundleVersion: Swift.String,
                        platform: Components.Schemas.Platform
                    ) {
                        self.cfBundleShortVersionString = cfBundleShortVersionString
                        self.cfBundleVersion = cfBundleVersion
                        self.platform = platform
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case cfBundleShortVersionString
                        case cfBundleVersion
                        case platform
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.BuildUploadCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app`.
                    internal struct appPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app/data`.
                        internal struct dataPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app/data/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case apps = "apps"
                            }
                            /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app/data/type`.
                            internal var _type: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app/data/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app/data`.
                        internal var data: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload
                        /// Creates a new `appPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload.dataPayload) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships/app`.
                    internal var app: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - app:
                    internal init(app: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload.appPayload) {
                        self.app = app
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case app
                    }
                }
                /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.BuildUploadCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.BuildUploadCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.BuildUploadCreateRequest.dataPayload.relationshipsPayload
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildUploadCreateRequest/data`.
            internal var data: Components.Schemas.BuildUploadCreateRequest.dataPayload
            /// Creates a new `BuildUploadCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildUploadCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/Build`.
        internal struct Build: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Build/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case builds = "builds"
            }
            /// - Remark: Generated from `#/components/schemas/Build/type`.
            internal var _type: Components.Schemas.Build._typePayload
            /// - Remark: Generated from `#/components/schemas/Build/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/Build/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Build/attributes/version`.
                internal var version: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/uploadedDate`.
                internal var uploadedDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/expirationDate`.
                internal var expirationDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/expired`.
                internal var expired: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/minOsVersion`.
                internal var minOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/lsMinimumSystemVersion`.
                internal var lsMinimumSystemVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/computedMinMacOsVersion`.
                internal var computedMinMacOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/computedMinVisionOsVersion`.
                internal var computedMinVisionOsVersion: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/iconAssetToken`.
                internal var iconAssetToken: Components.Schemas.ImageAsset?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/processingState`.
                internal enum processingStatePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case PROCESSING = "PROCESSING"
                    case FAILED = "FAILED"
                    case INVALID = "INVALID"
                    case VALID = "VALID"
                }
                /// - Remark: Generated from `#/components/schemas/Build/attributes/processingState`.
                internal var processingState: Components.Schemas.Build.attributesPayload.processingStatePayload?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/buildAudienceType`.
                internal var buildAudienceType: Components.Schemas.BuildAudienceType?
                /// - Remark: Generated from `#/components/schemas/Build/attributes/usesNonExemptEncryption`.
                internal var usesNonExemptEncryption: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - version:
                ///   - uploadedDate:
                ///   - expirationDate:
                ///   - expired:
                ///   - minOsVersion:
                ///   - lsMinimumSystemVersion:
                ///   - computedMinMacOsVersion:
                ///   - computedMinVisionOsVersion:
                ///   - iconAssetToken:
                ///   - processingState:
                ///   - buildAudienceType:
                ///   - usesNonExemptEncryption:
                internal init(
                    version: Swift.String? = nil,
                    uploadedDate: Foundation.Date? = nil,
                    expirationDate: Foundation.Date? = nil,
                    expired: Swift.Bool? = nil,
                    minOsVersion: Swift.String? = nil,
                    lsMinimumSystemVersion: Swift.String? = nil,
                    computedMinMacOsVersion: Swift.String? = nil,
                    computedMinVisionOsVersion: Swift.String? = nil,
                    iconAssetToken: Components.Schemas.ImageAsset? = nil,
                    processingState: Components.Schemas.Build.attributesPayload.processingStatePayload? = nil,
                    buildAudienceType: Components.Schemas.BuildAudienceType? = nil,
                    usesNonExemptEncryption: Swift.Bool? = nil
                ) {
                    self.version = version
                    self.uploadedDate = uploadedDate
                    self.expirationDate = expirationDate
                    self.expired = expired
                    self.minOsVersion = minOsVersion
                    self.lsMinimumSystemVersion = lsMinimumSystemVersion
                    self.computedMinMacOsVersion = computedMinMacOsVersion
                    self.computedMinVisionOsVersion = computedMinVisionOsVersion
                    self.iconAssetToken = iconAssetToken
                    self.processingState = processingState
                    self.buildAudienceType = buildAudienceType
                    self.usesNonExemptEncryption = usesNonExemptEncryption
                }
                internal enum CodingKeys: String, CodingKey {
                    case version
                    case uploadedDate
                    case expirationDate
                    case expired
                    case minOsVersion
                    case lsMinimumSystemVersion
                    case computedMinMacOsVersion
                    case computedMinVisionOsVersion
                    case iconAssetToken
                    case processingState
                    case buildAudienceType
                    case usesNonExemptEncryption
                }
            }
            /// - Remark: Generated from `#/components/schemas/Build/attributes`.
            internal var attributes: Components.Schemas.Build.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/Build/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion`.
                internal struct preReleaseVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case preReleaseVersions = "preReleaseVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload?
                    /// Creates a new `preReleaseVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/preReleaseVersion`.
                internal var preReleaseVersion: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters`.
                internal struct individualTestersPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaTesters = "betaTesters"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayload?
                    /// Creates a new `individualTestersPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.individualTestersPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/individualTesters`.
                internal var individualTesters: Components.Schemas.Build.relationshipsPayload.individualTestersPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups`.
                internal struct betaGroupsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaGroups = "betaGroups"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayload?
                    /// Creates a new `betaGroupsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaGroups`.
                internal var betaGroups: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations`.
                internal struct betaBuildLocalizationsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaBuildLocalizations = "betaBuildLocalizations"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayload?
                    /// Creates a new `betaBuildLocalizationsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaBuildLocalizations`.
                internal var betaBuildLocalizations: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration`.
                internal struct appEncryptionDeclarationPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appEncryptionDeclarations = "appEncryptionDeclarations"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload?
                    /// Creates a new `appEncryptionDeclarationPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appEncryptionDeclaration`.
                internal var appEncryptionDeclaration: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission`.
                internal struct betaAppReviewSubmissionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case betaAppReviewSubmissions = "betaAppReviewSubmissions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload?
                    /// Creates a new `betaAppReviewSubmissionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/betaAppReviewSubmission`.
                internal var betaAppReviewSubmission: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/app/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/app`.
                internal var app: Components.Schemas.Build.relationshipsPayload.appPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail`.
                internal struct buildBetaDetailPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildBetaDetails = "buildBetaDetails"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload?
                    /// Creates a new `buildBetaDetailPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBetaDetail`.
                internal var buildBetaDetail: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion`.
                internal struct appStoreVersionPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case appStoreVersions = "appStoreVersions"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload?
                    /// Creates a new `appStoreVersionPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/appStoreVersion`.
                internal var appStoreVersion: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/icons`.
                internal struct iconsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildIcons = "buildIcons"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/icons/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayload?
                    /// Creates a new `iconsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.iconsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/icons`.
                internal var icons: Components.Schemas.Build.relationshipsPayload.iconsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles`.
                internal struct buildBundlesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildBundles = "buildBundles"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/data`.
                    internal typealias dataPayload = [Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayload?
                    /// Creates a new `buildBundlesPayload`.
                    ///
                    /// - Parameters:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload.dataPayload? = nil
                    ) {
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildBundles`.
                internal var buildBundles: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload`.
                internal struct buildUploadPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case buildUploads = "buildUploads"
                        }
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/type`.
                        internal var _type: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload/data`.
                    internal var data: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload?
                    /// Creates a new `buildUploadPayload`.
                    ///
                    /// - Parameters:
                    ///   - data:
                    internal init(data: Components.Schemas.Build.relationshipsPayload.buildUploadPayload.dataPayload? = nil) {
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/buildUpload`.
                internal var buildUpload: Components.Schemas.Build.relationshipsPayload.buildUploadPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics`.
                internal struct perfPowerMetricsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `perfPowerMetricsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/perfPowerMetrics`.
                internal var perfPowerMetrics: Components.Schemas.Build.relationshipsPayload.perfPowerMetricsPayload?
                /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures`.
                internal struct diagnosticSignaturesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// Creates a new `diagnosticSignaturesPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    internal init(links: Components.Schemas.RelationshipLinks? = nil) {
                        self.links = links
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                    }
                }
                /// - Remark: Generated from `#/components/schemas/Build/relationships/diagnosticSignatures`.
                internal var diagnosticSignatures: Components.Schemas.Build.relationshipsPayload.diagnosticSignaturesPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - preReleaseVersion:
                ///   - individualTesters:
                ///   - betaGroups:
                ///   - betaBuildLocalizations:
                ///   - appEncryptionDeclaration:
                ///   - betaAppReviewSubmission:
                ///   - app:
                ///   - buildBetaDetail:
                ///   - appStoreVersion:
                ///   - icons:
                ///   - buildBundles:
                ///   - buildUpload:
                ///   - perfPowerMetrics:
                ///   - diagnosticSignatures:
                internal init(
                    preReleaseVersion: Components.Schemas.Build.relationshipsPayload.preReleaseVersionPayload? = nil,
                    individualTesters: Components.Schemas.Build.relationshipsPayload.individualTestersPayload? = nil,
                    betaGroups: Components.Schemas.Build.relationshipsPayload.betaGroupsPayload? = nil,
                    betaBuildLocalizations: Components.Schemas.Build.relationshipsPayload.betaBuildLocalizationsPayload? = nil,
                    appEncryptionDeclaration: Components.Schemas.Build.relationshipsPayload.appEncryptionDeclarationPayload? = nil,
                    betaAppReviewSubmission: Components.Schemas.Build.relationshipsPayload.betaAppReviewSubmissionPayload? = nil,
                    app: Components.Schemas.Build.relationshipsPayload.appPayload? = nil,
                    buildBetaDetail: Components.Schemas.Build.relationshipsPayload.buildBetaDetailPayload? = nil,
                    appStoreVersion: Components.Schemas.Build.relationshipsPayload.appStoreVersionPayload? = nil,
                    icons: Components.Schemas.Build.relationshipsPayload.iconsPayload? = nil,
                    buildBundles: Components.Schemas.Build.relationshipsPayload.buildBundlesPayload? = nil,
                    buildUpload: Components.Schemas.Build.relationshipsPayload.buildUploadPayload? = nil,
                    perfPowerMetrics: Components.Schemas.Build.relationshipsPayload.perfPowerMetricsPayload? = nil,
                    diagnosticSignatures: Components.Schemas.Build.relationshipsPayload.diagnosticSignaturesPayload? = nil
                ) {
                    self.preReleaseVersion = preReleaseVersion
                    self.individualTesters = individualTesters
                    self.betaGroups = betaGroups
                    self.betaBuildLocalizations = betaBuildLocalizations
                    self.appEncryptionDeclaration = appEncryptionDeclaration
                    self.betaAppReviewSubmission = betaAppReviewSubmission
                    self.app = app
                    self.buildBetaDetail = buildBetaDetail
                    self.appStoreVersion = appStoreVersion
                    self.icons = icons
                    self.buildBundles = buildBundles
                    self.buildUpload = buildUpload
                    self.perfPowerMetrics = perfPowerMetrics
                    self.diagnosticSignatures = diagnosticSignatures
                }
                internal enum CodingKeys: String, CodingKey {
                    case preReleaseVersion
                    case individualTesters
                    case betaGroups
                    case betaBuildLocalizations
                    case appEncryptionDeclaration
                    case betaAppReviewSubmission
                    case app
                    case buildBetaDetail
                    case appStoreVersion
                    case icons
                    case buildBundles
                    case buildUpload
                    case perfPowerMetrics
                    case diagnosticSignatures
                }
            }
            /// - Remark: Generated from `#/components/schemas/Build/relationships`.
            internal var relationships: Components.Schemas.Build.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/Build/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `Build`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.Build._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.Build.attributesPayload? = nil,
                relationships: Components.Schemas.Build.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildsResponse`.
        internal struct BuildsResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/data`.
            internal var data: [Components.Schemas.Build]
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/AppEncryptionDeclaration`.
                case appEncryptionDeclarations(Components.Schemas.AppEncryptionDeclaration)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/AppStoreVersion`.
                case appStoreVersions(Components.Schemas.AppStoreVersion)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BetaAppReviewSubmission`.
                case betaAppReviewSubmissions(Components.Schemas.BetaAppReviewSubmission)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BetaBuildLocalization`.
                case betaBuildLocalizations(Components.Schemas.BetaBuildLocalization)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BetaGroup`.
                case betaGroups(Components.Schemas.BetaGroup)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BetaTester`.
                case betaTesters(Components.Schemas.BetaTester)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BuildBetaDetail`.
                case buildBetaDetails(Components.Schemas.BuildBetaDetail)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BuildBundle`.
                case buildBundles(Components.Schemas.BuildBundle)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BuildIcon`.
                case buildIcons(Components.Schemas.BuildIcon)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/BuildUpload`.
                case buildUploads(Components.Schemas.BuildUpload)
                /// - Remark: Generated from `#/components/schemas/BuildsResponse/includedPayload/PrereleaseVersion`.
                case preReleaseVersions(Components.Schemas.PrereleaseVersion)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "appEncryptionDeclarations":
                        self = .appEncryptionDeclarations(try .init(from: decoder))
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "appStoreVersions":
                        self = .appStoreVersions(try .init(from: decoder))
                    case "betaAppReviewSubmissions":
                        self = .betaAppReviewSubmissions(try .init(from: decoder))
                    case "betaBuildLocalizations":
                        self = .betaBuildLocalizations(try .init(from: decoder))
                    case "betaGroups":
                        self = .betaGroups(try .init(from: decoder))
                    case "betaTesters":
                        self = .betaTesters(try .init(from: decoder))
                    case "buildBetaDetails":
                        self = .buildBetaDetails(try .init(from: decoder))
                    case "buildBundles":
                        self = .buildBundles(try .init(from: decoder))
                    case "buildIcons":
                        self = .buildIcons(try .init(from: decoder))
                    case "buildUploads":
                        self = .buildUploads(try .init(from: decoder))
                    case "preReleaseVersions":
                        self = .preReleaseVersions(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .appEncryptionDeclarations(value):
                        try value.encode(to: encoder)
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .appStoreVersions(value):
                        try value.encode(to: encoder)
                    case let .betaAppReviewSubmissions(value):
                        try value.encode(to: encoder)
                    case let .betaBuildLocalizations(value):
                        try value.encode(to: encoder)
                    case let .betaGroups(value):
                        try value.encode(to: encoder)
                    case let .betaTesters(value):
                        try value.encode(to: encoder)
                    case let .buildBetaDetails(value):
                        try value.encode(to: encoder)
                    case let .buildBundles(value):
                        try value.encode(to: encoder)
                    case let .buildIcons(value):
                        try value.encode(to: encoder)
                    case let .buildUploads(value):
                        try value.encode(to: encoder)
                    case let .preReleaseVersions(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BuildsResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/included`.
            internal var included: Components.Schemas.BuildsResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BuildsResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BuildsResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.Build],
                included: Components.Schemas.BuildsResponse.includedPayload? = nil,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.included = included
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildResponse`.
        internal struct BuildResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildResponse/data`.
            internal var data: Components.Schemas.Build
            /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload`.
            internal enum includedPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/AppEncryptionDeclaration`.
                case appEncryptionDeclarations(Components.Schemas.AppEncryptionDeclaration)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/App`.
                case apps(Components.Schemas.App)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/AppStoreVersion`.
                case appStoreVersions(Components.Schemas.AppStoreVersion)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BetaAppReviewSubmission`.
                case betaAppReviewSubmissions(Components.Schemas.BetaAppReviewSubmission)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BetaBuildLocalization`.
                case betaBuildLocalizations(Components.Schemas.BetaBuildLocalization)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BetaGroup`.
                case betaGroups(Components.Schemas.BetaGroup)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BetaTester`.
                case betaTesters(Components.Schemas.BetaTester)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BuildBetaDetail`.
                case buildBetaDetails(Components.Schemas.BuildBetaDetail)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BuildBundle`.
                case buildBundles(Components.Schemas.BuildBundle)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BuildIcon`.
                case buildIcons(Components.Schemas.BuildIcon)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/BuildUpload`.
                case buildUploads(Components.Schemas.BuildUpload)
                /// - Remark: Generated from `#/components/schemas/BuildResponse/includedPayload/PrereleaseVersion`.
                case preReleaseVersions(Components.Schemas.PrereleaseVersion)
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                }
                internal init(from decoder: any Decoder) throws {
                    let container = try decoder.container(keyedBy: CodingKeys.self)
                    let discriminator = try container.decode(
                        Swift.String.self,
                        forKey: ._type
                    )
                    switch discriminator {
                    case "appEncryptionDeclarations":
                        self = .appEncryptionDeclarations(try .init(from: decoder))
                    case "apps":
                        self = .apps(try .init(from: decoder))
                    case "appStoreVersions":
                        self = .appStoreVersions(try .init(from: decoder))
                    case "betaAppReviewSubmissions":
                        self = .betaAppReviewSubmissions(try .init(from: decoder))
                    case "betaBuildLocalizations":
                        self = .betaBuildLocalizations(try .init(from: decoder))
                    case "betaGroups":
                        self = .betaGroups(try .init(from: decoder))
                    case "betaTesters":
                        self = .betaTesters(try .init(from: decoder))
                    case "buildBetaDetails":
                        self = .buildBetaDetails(try .init(from: decoder))
                    case "buildBundles":
                        self = .buildBundles(try .init(from: decoder))
                    case "buildIcons":
                        self = .buildIcons(try .init(from: decoder))
                    case "buildUploads":
                        self = .buildUploads(try .init(from: decoder))
                    case "preReleaseVersions":
                        self = .preReleaseVersions(try .init(from: decoder))
                    default:
                        throw Swift.DecodingError.unknownOneOfDiscriminator(
                            discriminatorKey: CodingKeys._type,
                            discriminatorValue: discriminator,
                            codingPath: decoder.codingPath
                        )
                    }
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .appEncryptionDeclarations(value):
                        try value.encode(to: encoder)
                    case let .apps(value):
                        try value.encode(to: encoder)
                    case let .appStoreVersions(value):
                        try value.encode(to: encoder)
                    case let .betaAppReviewSubmissions(value):
                        try value.encode(to: encoder)
                    case let .betaBuildLocalizations(value):
                        try value.encode(to: encoder)
                    case let .betaGroups(value):
                        try value.encode(to: encoder)
                    case let .betaTesters(value):
                        try value.encode(to: encoder)
                    case let .buildBetaDetails(value):
                        try value.encode(to: encoder)
                    case let .buildBundles(value):
                        try value.encode(to: encoder)
                    case let .buildIcons(value):
                        try value.encode(to: encoder)
                    case let .buildUploads(value):
                        try value.encode(to: encoder)
                    case let .preReleaseVersions(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildResponse/included`.
            internal typealias includedPayload = [Components.Schemas.BuildResponse.includedPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BuildResponse/included`.
            internal var included: Components.Schemas.BuildResponse.includedPayload?
            /// - Remark: Generated from `#/components/schemas/BuildResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BuildResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.Build,
                included: Components.Schemas.BuildResponse.includedPayload? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion`.
        internal struct PrereleaseVersion: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case preReleaseVersions = "preReleaseVersions"
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/type`.
            internal var _type: Components.Schemas.PrereleaseVersion._typePayload
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes/version`.
                internal var version: Swift.String?
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes/platform`.
                internal var platform: Components.Schemas.Platform?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - version:
                ///   - platform:
                internal init(
                    version: Swift.String? = nil,
                    platform: Components.Schemas.Platform? = nil
                ) {
                    self.version = version
                    self.platform = platform
                }
                internal enum CodingKeys: String, CodingKey {
                    case version
                    case platform
                }
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/attributes`.
            internal var attributes: Components.Schemas.PrereleaseVersion.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds`.
                internal struct buildsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case builds = "builds"
                        }
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/type`.
                        internal var _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/data`.
                    internal typealias dataPayload = [Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds/data`.
                    internal var data: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayload?
                    /// Creates a new `buildsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/builds`.
                internal var builds: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload?
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app`.
                internal struct appPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data`.
                    internal struct dataPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/type`.
                        internal var _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app/data`.
                    internal var data: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload?
                    /// Creates a new `appPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        data: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships/app`.
                internal var app: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - builds:
                ///   - app:
                internal init(
                    builds: Components.Schemas.PrereleaseVersion.relationshipsPayload.buildsPayload? = nil,
                    app: Components.Schemas.PrereleaseVersion.relationshipsPayload.appPayload? = nil
                ) {
                    self.builds = builds
                    self.app = app
                }
                internal enum CodingKeys: String, CodingKey {
                    case builds
                    case app
                }
            }
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/relationships`.
            internal var relationships: Components.Schemas.PrereleaseVersion.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/PrereleaseVersion/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `PrereleaseVersion`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.PrereleaseVersion._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.PrereleaseVersion.attributesPayload? = nil,
                relationships: Components.Schemas.PrereleaseVersion.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserInvitation`.
        internal struct UserInvitation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserInvitation/type`.
            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case userInvitations = "userInvitations"
            }
            /// - Remark: Generated from `#/components/schemas/UserInvitation/type`.
            internal var _type: Components.Schemas.UserInvitation._typePayload
            /// - Remark: Generated from `#/components/schemas/UserInvitation/id`.
            internal var id: Swift.String
            /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes`.
            internal struct attributesPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/email`.
                internal var email: Swift.String?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/firstName`.
                internal var firstName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/lastName`.
                internal var lastName: Swift.String?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/expirationDate`.
                internal var expirationDate: Foundation.Date?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/roles`.
                internal var roles: [Components.Schemas.UserRole]?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/allAppsVisible`.
                internal var allAppsVisible: Swift.Bool?
                /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes/provisioningAllowed`.
                internal var provisioningAllowed: Swift.Bool?
                /// Creates a new `attributesPayload`.
                ///
                /// - Parameters:
                ///   - email:
                ///   - firstName:
                ///   - lastName:
                ///   - expirationDate:
                ///   - roles:
                ///   - allAppsVisible:
                ///   - provisioningAllowed:
                internal init(
                    email: Swift.String? = nil,
                    firstName: Swift.String? = nil,
                    lastName: Swift.String? = nil,
                    expirationDate: Foundation.Date? = nil,
                    roles: [Components.Schemas.UserRole]? = nil,
                    allAppsVisible: Swift.Bool? = nil,
                    provisioningAllowed: Swift.Bool? = nil
                ) {
                    self.email = email
                    self.firstName = firstName
                    self.lastName = lastName
                    self.expirationDate = expirationDate
                    self.roles = roles
                    self.allAppsVisible = allAppsVisible
                    self.provisioningAllowed = provisioningAllowed
                }
                internal enum CodingKeys: String, CodingKey {
                    case email
                    case firstName
                    case lastName
                    case expirationDate
                    case roles
                    case allAppsVisible
                    case provisioningAllowed
                }
            }
            /// - Remark: Generated from `#/components/schemas/UserInvitation/attributes`.
            internal var attributes: Components.Schemas.UserInvitation.attributesPayload?
            /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships`.
            internal struct relationshipsPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps`.
                internal struct visibleAppsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/links`.
                    internal var links: Components.Schemas.RelationshipLinks?
                    /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/meta`.
                    internal var meta: Components.Schemas.PagingInformation?
                    /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/dataPayload`.
                    internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/dataPayload/type`.
                        internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                            case apps = "apps"
                        }
                        /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/dataPayload/type`.
                        internal var _type: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload.dataPayloadPayload._typePayload
                        /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/dataPayload/id`.
                        internal var id: Swift.String
                        /// Creates a new `dataPayloadPayload`.
                        ///
                        /// - Parameters:
                        ///   - _type:
                        ///   - id:
                        internal init(
                            _type: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload.dataPayloadPayload._typePayload,
                            id: Swift.String
                        ) {
                            self._type = _type
                            self.id = id
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case _type = "type"
                            case id
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/data`.
                    internal typealias dataPayload = [Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload.dataPayloadPayload]
                    /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps/data`.
                    internal var data: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload.dataPayload?
                    /// Creates a new `visibleAppsPayload`.
                    ///
                    /// - Parameters:
                    ///   - links:
                    ///   - meta:
                    ///   - data:
                    internal init(
                        links: Components.Schemas.RelationshipLinks? = nil,
                        meta: Components.Schemas.PagingInformation? = nil,
                        data: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload.dataPayload? = nil
                    ) {
                        self.links = links
                        self.meta = meta
                        self.data = data
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case links
                        case meta
                        case data
                    }
                }
                /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships/visibleApps`.
                internal var visibleApps: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload?
                /// Creates a new `relationshipsPayload`.
                ///
                /// - Parameters:
                ///   - visibleApps:
                internal init(visibleApps: Components.Schemas.UserInvitation.relationshipsPayload.visibleAppsPayload? = nil) {
                    self.visibleApps = visibleApps
                }
                internal enum CodingKeys: String, CodingKey {
                    case visibleApps
                }
            }
            /// - Remark: Generated from `#/components/schemas/UserInvitation/relationships`.
            internal var relationships: Components.Schemas.UserInvitation.relationshipsPayload?
            /// - Remark: Generated from `#/components/schemas/UserInvitation/links`.
            internal var links: Components.Schemas.ResourceLinks?
            /// Creates a new `UserInvitation`.
            ///
            /// - Parameters:
            ///   - _type:
            ///   - id:
            ///   - attributes:
            ///   - relationships:
            ///   - links:
            internal init(
                _type: Components.Schemas.UserInvitation._typePayload,
                id: Swift.String,
                attributes: Components.Schemas.UserInvitation.attributesPayload? = nil,
                relationships: Components.Schemas.UserInvitation.relationshipsPayload? = nil,
                links: Components.Schemas.ResourceLinks? = nil
            ) {
                self._type = _type
                self.id = id
                self.attributes = attributes
                self.relationships = relationships
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case _type = "type"
                case id
                case attributes
                case relationships
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserInvitationResponse`.
        internal struct UserInvitationResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserInvitationResponse/data`.
            internal var data: Components.Schemas.UserInvitation
            /// - Remark: Generated from `#/components/schemas/UserInvitationResponse/included`.
            internal var included: [Components.Schemas.App]?
            /// - Remark: Generated from `#/components/schemas/UserInvitationResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `UserInvitationResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - included:
            ///   - links:
            internal init(
                data: Components.Schemas.UserInvitation,
                included: [Components.Schemas.App]? = nil,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.included = included
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case included
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest`.
        internal struct UserInvitationCreateRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case userInvitations = "userInvitations"
                }
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/type`.
                internal var _type: Components.Schemas.UserInvitationCreateRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes`.
                internal struct attributesPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/email`.
                    internal var email: Swift.String
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/firstName`.
                    internal var firstName: Swift.String
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/lastName`.
                    internal var lastName: Swift.String
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/roles`.
                    internal var roles: [Components.Schemas.UserRole]
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/allAppsVisible`.
                    internal var allAppsVisible: Swift.Bool?
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes/provisioningAllowed`.
                    internal var provisioningAllowed: Swift.Bool?
                    /// Creates a new `attributesPayload`.
                    ///
                    /// - Parameters:
                    ///   - email:
                    ///   - firstName:
                    ///   - lastName:
                    ///   - roles:
                    ///   - allAppsVisible:
                    ///   - provisioningAllowed:
                    internal init(
                        email: Swift.String,
                        firstName: Swift.String,
                        lastName: Swift.String,
                        roles: [Components.Schemas.UserRole],
                        allAppsVisible: Swift.Bool? = nil,
                        provisioningAllowed: Swift.Bool? = nil
                    ) {
                        self.email = email
                        self.firstName = firstName
                        self.lastName = lastName
                        self.roles = roles
                        self.allAppsVisible = allAppsVisible
                        self.provisioningAllowed = provisioningAllowed
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case email
                        case firstName
                        case lastName
                        case roles
                        case allAppsVisible
                        case provisioningAllowed
                    }
                }
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/attributes`.
                internal var attributes: Components.Schemas.UserInvitationCreateRequest.dataPayload.attributesPayload
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships`.
                internal struct relationshipsPayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps`.
                    internal struct visibleAppsPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/dataPayload`.
                        internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                            /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/dataPayload/type`.
                            internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                                case apps = "apps"
                            }
                            /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/dataPayload/type`.
                            internal var _type: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload.dataPayloadPayload._typePayload
                            /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/dataPayload/id`.
                            internal var id: Swift.String
                            /// Creates a new `dataPayloadPayload`.
                            ///
                            /// - Parameters:
                            ///   - _type:
                            ///   - id:
                            internal init(
                                _type: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload.dataPayloadPayload._typePayload,
                                id: Swift.String
                            ) {
                                self._type = _type
                                self.id = id
                            }
                            internal enum CodingKeys: String, CodingKey {
                                case _type = "type"
                                case id
                            }
                        }
                        /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/data`.
                        internal typealias dataPayload = [Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload.dataPayloadPayload]
                        /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps/data`.
                        internal var data: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload.dataPayload?
                        /// Creates a new `visibleAppsPayload`.
                        ///
                        /// - Parameters:
                        ///   - data:
                        internal init(data: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload.dataPayload? = nil) {
                            self.data = data
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case data
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships/visibleApps`.
                    internal var visibleApps: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload?
                    /// Creates a new `relationshipsPayload`.
                    ///
                    /// - Parameters:
                    ///   - visibleApps:
                    internal init(visibleApps: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload.visibleAppsPayload? = nil) {
                        self.visibleApps = visibleApps
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case visibleApps
                    }
                }
                /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data/relationships`.
                internal var relationships: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload?
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - attributes:
                ///   - relationships:
                internal init(
                    _type: Components.Schemas.UserInvitationCreateRequest.dataPayload._typePayload,
                    attributes: Components.Schemas.UserInvitationCreateRequest.dataPayload.attributesPayload,
                    relationships: Components.Schemas.UserInvitationCreateRequest.dataPayload.relationshipsPayload? = nil
                ) {
                    self._type = _type
                    self.attributes = attributes
                    self.relationships = relationships
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case attributes
                    case relationships
                }
            }
            /// - Remark: Generated from `#/components/schemas/UserInvitationCreateRequest/data`.
            internal var data: Components.Schemas.UserInvitationCreateRequest.dataPayload
            /// Creates a new `UserInvitationCreateRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.UserInvitationCreateRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse`.
        internal struct BetaGroupBuildsLinkagesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/dataPayload`.
            internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/dataPayload/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/dataPayload/type`.
                internal var _type: Components.Schemas.BetaGroupBuildsLinkagesResponse.dataPayloadPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/dataPayload/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayloadPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BetaGroupBuildsLinkagesResponse.dataPayloadPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/data`.
            internal typealias dataPayload = [Components.Schemas.BetaGroupBuildsLinkagesResponse.dataPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/data`.
            internal var data: Components.Schemas.BetaGroupBuildsLinkagesResponse.dataPayload
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BetaGroupBuildsLinkagesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: Components.Schemas.BetaGroupBuildsLinkagesResponse.dataPayload,
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest`.
        internal struct BetaGroupBuildsLinkagesRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/dataPayload`.
            internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/dataPayload/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/dataPayload/type`.
                internal var _type: Components.Schemas.BetaGroupBuildsLinkagesRequest.dataPayloadPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/dataPayload/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayloadPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BetaGroupBuildsLinkagesRequest.dataPayloadPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/data`.
            internal typealias dataPayload = [Components.Schemas.BetaGroupBuildsLinkagesRequest.dataPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaGroupBuildsLinkagesRequest/data`.
            internal var data: Components.Schemas.BetaGroupBuildsLinkagesRequest.dataPayload
            /// Creates a new `BetaGroupBuildsLinkagesRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaGroupBuildsLinkagesRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest`.
        internal struct BetaTesterBetaGroupsLinkagesRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/dataPayload`.
            internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/dataPayload/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaGroups = "betaGroups"
                }
                /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/dataPayload/type`.
                internal var _type: Components.Schemas.BetaTesterBetaGroupsLinkagesRequest.dataPayloadPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/dataPayload/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayloadPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BetaTesterBetaGroupsLinkagesRequest.dataPayloadPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/data`.
            internal typealias dataPayload = [Components.Schemas.BetaTesterBetaGroupsLinkagesRequest.dataPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BetaTesterBetaGroupsLinkagesRequest/data`.
            internal var data: Components.Schemas.BetaTesterBetaGroupsLinkagesRequest.dataPayload
            /// Creates a new `BetaTesterBetaGroupsLinkagesRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BetaTesterBetaGroupsLinkagesRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse`.
        internal struct BuildAppEncryptionDeclarationLinkageResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                }
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/data/type`.
                internal var _type: Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/data/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse.dataPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/data`.
            internal var data: Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse.dataPayload
            /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageResponse/links`.
            internal var links: Components.Schemas.DocumentLinks
            /// Creates a new `BuildAppEncryptionDeclarationLinkageResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            internal init(
                data: Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse.dataPayload,
                links: Components.Schemas.DocumentLinks
            ) {
                self.data = data
                self.links = links
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest`.
        internal struct BuildAppEncryptionDeclarationLinkageRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest/data`.
            internal struct dataPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest/data/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                }
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest/data/type`.
                internal var _type: Components.Schemas.BuildAppEncryptionDeclarationLinkageRequest.dataPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest/data/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BuildAppEncryptionDeclarationLinkageRequest.dataPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildAppEncryptionDeclarationLinkageRequest/data`.
            internal var data: Components.Schemas.BuildAppEncryptionDeclarationLinkageRequest.dataPayload
            /// Creates a new `BuildAppEncryptionDeclarationLinkageRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildAppEncryptionDeclarationLinkageRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationsWithoutIncludesResponse`.
        internal struct BetaBuildLocalizationsWithoutIncludesResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationsWithoutIncludesResponse/data`.
            internal var data: [Components.Schemas.BetaBuildLocalization]
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationsWithoutIncludesResponse/links`.
            internal var links: Components.Schemas.PagedDocumentLinks
            /// - Remark: Generated from `#/components/schemas/BetaBuildLocalizationsWithoutIncludesResponse/meta`.
            internal var meta: Components.Schemas.PagingInformation?
            /// Creates a new `BetaBuildLocalizationsWithoutIncludesResponse`.
            ///
            /// - Parameters:
            ///   - data:
            ///   - links:
            ///   - meta:
            internal init(
                data: [Components.Schemas.BetaBuildLocalization],
                links: Components.Schemas.PagedDocumentLinks,
                meta: Components.Schemas.PagingInformation? = nil
            ) {
                self.data = data
                self.links = links
                self.meta = meta
            }
            internal enum CodingKeys: String, CodingKey {
                case data
                case links
                case meta
            }
        }
        /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest`.
        internal struct BuildBetaGroupsLinkagesRequest: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/dataPayload`.
            internal struct dataPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/dataPayload/type`.
                internal enum _typePayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaGroups = "betaGroups"
                }
                /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/dataPayload/type`.
                internal var _type: Components.Schemas.BuildBetaGroupsLinkagesRequest.dataPayloadPayload._typePayload
                /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/dataPayload/id`.
                internal var id: Swift.String
                /// Creates a new `dataPayloadPayload`.
                ///
                /// - Parameters:
                ///   - _type:
                ///   - id:
                internal init(
                    _type: Components.Schemas.BuildBetaGroupsLinkagesRequest.dataPayloadPayload._typePayload,
                    id: Swift.String
                ) {
                    self._type = _type
                    self.id = id
                }
                internal enum CodingKeys: String, CodingKey {
                    case _type = "type"
                    case id
                }
            }
            /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/data`.
            internal typealias dataPayload = [Components.Schemas.BuildBetaGroupsLinkagesRequest.dataPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/BuildBetaGroupsLinkagesRequest/data`.
            internal var data: Components.Schemas.BuildBetaGroupsLinkagesRequest.dataPayload
            /// Creates a new `BuildBetaGroupsLinkagesRequest`.
            ///
            /// - Parameters:
            ///   - data:
            internal init(data: Components.Schemas.BuildBetaGroupsLinkagesRequest.dataPayload) {
                self.data = data
            }
            internal enum CodingKeys: String, CodingKey {
                case data
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorResponse`.
        internal struct ErrorResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload`.
            internal struct errorsPayloadPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/id`.
                internal var id: Swift.String?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/status`.
                internal var status: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/code`.
                internal var code: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/title`.
                internal var title: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/detail`.
                internal var detail: Swift.String
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal enum sourcePayload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case1`.
                    case ErrorSourcePointer(Components.Schemas.ErrorSourcePointer)
                    /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source/case2`.
                    case ErrorSourceParameter(Components.Schemas.ErrorSourceParameter)
                    internal init(from decoder: any Decoder) throws {
                        var errors: [any Error] = []
                        do {
                            self = .ErrorSourcePointer(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        do {
                            self = .ErrorSourceParameter(try .init(from: decoder))
                            return
                        } catch {
                            errors.append(error)
                        }
                        throw Swift.DecodingError.failedToDecodeOneOfSchema(
                            type: Self.self,
                            codingPath: decoder.codingPath,
                            errors: errors
                        )
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        switch self {
                        case let .ErrorSourcePointer(value):
                            try value.encode(to: encoder)
                        case let .ErrorSourceParameter(value):
                            try value.encode(to: encoder)
                        }
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/source`.
                internal var source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/links`.
                internal var links: Components.Schemas.ErrorLinks?
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal struct metaPayload: Codable, Hashable, Sendable {
                    /// A container of undocumented properties.
                    internal var additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer]
                    /// Creates a new `metaPayload`.
                    ///
                    /// - Parameters:
                    ///   - additionalProperties: A container of undocumented properties.
                    internal init(additionalProperties: [String: OpenAPIRuntime.OpenAPIValueContainer] = .init()) {
                        self.additionalProperties = additionalProperties
                    }
                    internal init(from decoder: any Decoder) throws {
                        additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
                    }
                    internal func encode(to encoder: any Encoder) throws {
                        try encoder.encodeAdditionalProperties(additionalProperties)
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorResponse/errorsPayload/meta`.
                internal var meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload?
                /// Creates a new `errorsPayloadPayload`.
                ///
                /// - Parameters:
                ///   - id:
                ///   - status:
                ///   - code:
                ///   - title:
                ///   - detail:
                ///   - source:
                ///   - links:
                ///   - meta:
                internal init(
                    id: Swift.String? = nil,
                    status: Swift.String,
                    code: Swift.String,
                    title: Swift.String,
                    detail: Swift.String,
                    source: Components.Schemas.ErrorResponse.errorsPayloadPayload.sourcePayload? = nil,
                    links: Components.Schemas.ErrorLinks? = nil,
                    meta: Components.Schemas.ErrorResponse.errorsPayloadPayload.metaPayload? = nil
                ) {
                    self.id = id
                    self.status = status
                    self.code = code
                    self.title = title
                    self.detail = detail
                    self.source = source
                    self.links = links
                    self.meta = meta
                }
                internal enum CodingKeys: String, CodingKey {
                    case id
                    case status
                    case code
                    case title
                    case detail
                    case source
                    case links
                    case meta
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal typealias errorsPayload = [Components.Schemas.ErrorResponse.errorsPayloadPayload]
            /// - Remark: Generated from `#/components/schemas/ErrorResponse/errors`.
            internal var errors: Components.Schemas.ErrorResponse.errorsPayload?
            /// Creates a new `ErrorResponse`.
            ///
            /// - Parameters:
            ///   - errors:
            internal init(errors: Components.Schemas.ErrorResponse.errorsPayload? = nil) {
                self.errors = errors
            }
            internal enum CodingKeys: String, CodingKey {
                case errors
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter`.
        internal struct ErrorSourceParameter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourceParameter/parameter`.
            internal var parameter: Swift.String
            /// Creates a new `ErrorSourceParameter`.
            ///
            /// - Parameters:
            ///   - parameter:
            internal init(parameter: Swift.String) {
                self.parameter = parameter
            }
            internal enum CodingKeys: String, CodingKey {
                case parameter
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer`.
        internal struct ErrorSourcePointer: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorSourcePointer/pointer`.
            internal var pointer: Swift.String
            /// Creates a new `ErrorSourcePointer`.
            ///
            /// - Parameters:
            ///   - pointer:
            internal init(pointer: Swift.String) {
                self.pointer = pointer
            }
            internal enum CodingKeys: String, CodingKey {
                case pointer
            }
        }
        /// - Remark: Generated from `#/components/schemas/ErrorLinks`.
        internal struct ErrorLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/about`.
            internal var about: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal enum associatedPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case1`.
                case case1(Swift.String)
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                internal struct Case2Payload: Codable, Hashable, Sendable {
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/href`.
                    internal var href: Swift.String?
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal struct metaPayload: Codable, Hashable, Sendable {
                        /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta/source`.
                        internal var source: Swift.String?
                        /// Creates a new `metaPayload`.
                        ///
                        /// - Parameters:
                        ///   - source:
                        internal init(source: Swift.String? = nil) {
                            self.source = source
                        }
                        internal enum CodingKeys: String, CodingKey {
                            case source
                        }
                    }
                    /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2/meta`.
                    internal var meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload?
                    /// Creates a new `Case2Payload`.
                    ///
                    /// - Parameters:
                    ///   - href:
                    ///   - meta:
                    internal init(
                        href: Swift.String? = nil,
                        meta: Components.Schemas.ErrorLinks.associatedPayload.Case2Payload.metaPayload? = nil
                    ) {
                        self.href = href
                        self.meta = meta
                    }
                    internal enum CodingKeys: String, CodingKey {
                        case href
                        case meta
                    }
                }
                /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated/case2`.
                case case2(Components.Schemas.ErrorLinks.associatedPayload.Case2Payload)
                internal init(from decoder: any Decoder) throws {
                    var errors: [any Error] = []
                    do {
                        self = .case1(try decoder.decodeFromSingleValueContainer())
                        return
                    } catch {
                        errors.append(error)
                    }
                    do {
                        self = .case2(try .init(from: decoder))
                        return
                    } catch {
                        errors.append(error)
                    }
                    throw Swift.DecodingError.failedToDecodeOneOfSchema(
                        type: Self.self,
                        codingPath: decoder.codingPath,
                        errors: errors
                    )
                }
                internal func encode(to encoder: any Encoder) throws {
                    switch self {
                    case let .case1(value):
                        try encoder.encodeToSingleValueContainer(value)
                    case let .case2(value):
                        try value.encode(to: encoder)
                    }
                }
            }
            /// - Remark: Generated from `#/components/schemas/ErrorLinks/associated`.
            internal var associated: Components.Schemas.ErrorLinks.associatedPayload?
            /// Creates a new `ErrorLinks`.
            ///
            /// - Parameters:
            ///   - about:
            ///   - associated:
            internal init(
                about: Swift.String? = nil,
                associated: Components.Schemas.ErrorLinks.associatedPayload? = nil
            ) {
                self.about = about
                self.associated = associated
            }
            internal enum CodingKeys: String, CodingKey {
                case about
                case associated
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks`.
        internal struct PagedDocumentLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/self`.
            internal var _self: Swift.String
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/first`.
            internal var first: Swift.String?
            /// - Remark: Generated from `#/components/schemas/PagedDocumentLinks/next`.
            internal var next: Swift.String?
            /// Creates a new `PagedDocumentLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            ///   - first:
            ///   - next:
            internal init(
                _self: Swift.String,
                first: Swift.String? = nil,
                next: Swift.String? = nil
            ) {
                self._self = _self
                self.first = first
                self.next = next
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
                case first
                case next
            }
        }
        /// - Remark: Generated from `#/components/schemas/PagingInformation`.
        internal struct PagingInformation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal struct pagingPayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/total`.
                internal var total: Swift.Int?
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/limit`.
                internal var limit: Swift.Int
                /// - Remark: Generated from `#/components/schemas/PagingInformation/paging/nextCursor`.
                internal var nextCursor: Swift.String?
                /// Creates a new `pagingPayload`.
                ///
                /// - Parameters:
                ///   - total:
                ///   - limit:
                ///   - nextCursor:
                internal init(
                    total: Swift.Int? = nil,
                    limit: Swift.Int,
                    nextCursor: Swift.String? = nil
                ) {
                    self.total = total
                    self.limit = limit
                    self.nextCursor = nextCursor
                }
                internal enum CodingKeys: String, CodingKey {
                    case total
                    case limit
                    case nextCursor
                }
            }
            /// - Remark: Generated from `#/components/schemas/PagingInformation/paging`.
            internal var paging: Components.Schemas.PagingInformation.pagingPayload
            /// Creates a new `PagingInformation`.
            ///
            /// - Parameters:
            ///   - paging:
            internal init(paging: Components.Schemas.PagingInformation.pagingPayload) {
                self.paging = paging
            }
            internal enum CodingKeys: String, CodingKey {
                case paging
            }
        }
        /// - Remark: Generated from `#/components/schemas/DocumentLinks`.
        internal struct DocumentLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DocumentLinks/self`.
            internal var _self: Swift.String
            /// Creates a new `DocumentLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            internal init(_self: Swift.String) {
                self._self = _self
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
            }
        }
        /// - Remark: Generated from `#/components/schemas/ResourceLinks`.
        internal struct ResourceLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ResourceLinks/self`.
            internal var _self: Swift.String?
            /// Creates a new `ResourceLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            internal init(_self: Swift.String? = nil) {
                self._self = _self
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
            }
        }
        /// - Remark: Generated from `#/components/schemas/RelationshipLinks`.
        internal struct RelationshipLinks: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/RelationshipLinks/self`.
            internal var _self: Swift.String?
            /// - Remark: Generated from `#/components/schemas/RelationshipLinks/related`.
            internal var related: Swift.String?
            /// Creates a new `RelationshipLinks`.
            ///
            /// - Parameters:
            ///   - _self:
            ///   - related:
            internal init(
                _self: Swift.String? = nil,
                related: Swift.String? = nil
            ) {
                self._self = _self
                self.related = related
            }
            internal enum CodingKeys: String, CodingKey {
                case _self = "self"
                case related
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppEncryptionDeclarationState`.
        internal enum AppEncryptionDeclarationState: String, Codable, Hashable, Sendable, CaseIterable {
            case CREATED = "CREATED"
            case IN_REVIEW = "IN_REVIEW"
            case APPROVED = "APPROVED"
            case REJECTED = "REJECTED"
            case INVALID = "INVALID"
            case EXPIRED = "EXPIRED"
        }
        /// - Remark: Generated from `#/components/schemas/AppMediaAssetState`.
        internal struct AppMediaAssetState: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppMediaAssetState/errors`.
            internal var errors: [Components.Schemas.AppMediaStateError]?
            /// - Remark: Generated from `#/components/schemas/AppMediaAssetState/warnings`.
            internal var warnings: [Components.Schemas.AppMediaStateError]?
            /// - Remark: Generated from `#/components/schemas/AppMediaAssetState/state`.
            internal enum statePayload: String, Codable, Hashable, Sendable, CaseIterable {
                case AWAITING_UPLOAD = "AWAITING_UPLOAD"
                case UPLOAD_COMPLETE = "UPLOAD_COMPLETE"
                case COMPLETE = "COMPLETE"
                case FAILED = "FAILED"
            }
            /// - Remark: Generated from `#/components/schemas/AppMediaAssetState/state`.
            internal var state: Components.Schemas.AppMediaAssetState.statePayload?
            /// Creates a new `AppMediaAssetState`.
            ///
            /// - Parameters:
            ///   - errors:
            ///   - warnings:
            ///   - state:
            internal init(
                errors: [Components.Schemas.AppMediaStateError]? = nil,
                warnings: [Components.Schemas.AppMediaStateError]? = nil,
                state: Components.Schemas.AppMediaAssetState.statePayload? = nil
            ) {
                self.errors = errors
                self.warnings = warnings
                self.state = state
            }
            internal enum CodingKeys: String, CodingKey {
                case errors
                case warnings
                case state
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppMediaStateError`.
        internal struct AppMediaStateError: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/AppMediaStateError/code`.
            internal var code: Swift.String?
            /// - Remark: Generated from `#/components/schemas/AppMediaStateError/description`.
            internal var description: Swift.String?
            /// Creates a new `AppMediaStateError`.
            ///
            /// - Parameters:
            ///   - code:
            ///   - description:
            internal init(
                code: Swift.String? = nil,
                description: Swift.String? = nil
            ) {
                self.code = code
                self.description = description
            }
            internal enum CodingKeys: String, CodingKey {
                case code
                case description
            }
        }
        /// - Remark: Generated from `#/components/schemas/AppStoreVersionState`.
        internal enum AppStoreVersionState: String, Codable, Hashable, Sendable, CaseIterable {
            case ACCEPTED = "ACCEPTED"
            case DEVELOPER_REMOVED_FROM_SALE = "DEVELOPER_REMOVED_FROM_SALE"
            case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
            case IN_REVIEW = "IN_REVIEW"
            case INVALID_BINARY = "INVALID_BINARY"
            case METADATA_REJECTED = "METADATA_REJECTED"
            case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
            case PENDING_CONTRACT = "PENDING_CONTRACT"
            case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
            case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
            case PREORDER_READY_FOR_SALE = "PREORDER_READY_FOR_SALE"
            case PROCESSING_FOR_APP_STORE = "PROCESSING_FOR_APP_STORE"
            case READY_FOR_REVIEW = "READY_FOR_REVIEW"
            case READY_FOR_SALE = "READY_FOR_SALE"
            case REJECTED = "REJECTED"
            case REMOVED_FROM_SALE = "REMOVED_FROM_SALE"
            case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
            case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
            case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
            case NOT_APPLICABLE = "NOT_APPLICABLE"
        }
        /// - Remark: Generated from `#/components/schemas/AppVersionState`.
        internal enum AppVersionState: String, Codable, Hashable, Sendable, CaseIterable {
            case ACCEPTED = "ACCEPTED"
            case DEVELOPER_REJECTED = "DEVELOPER_REJECTED"
            case IN_REVIEW = "IN_REVIEW"
            case INVALID_BINARY = "INVALID_BINARY"
            case METADATA_REJECTED = "METADATA_REJECTED"
            case PENDING_APPLE_RELEASE = "PENDING_APPLE_RELEASE"
            case PENDING_DEVELOPER_RELEASE = "PENDING_DEVELOPER_RELEASE"
            case PREPARE_FOR_SUBMISSION = "PREPARE_FOR_SUBMISSION"
            case PROCESSING_FOR_DISTRIBUTION = "PROCESSING_FOR_DISTRIBUTION"
            case READY_FOR_DISTRIBUTION = "READY_FOR_DISTRIBUTION"
            case READY_FOR_REVIEW = "READY_FOR_REVIEW"
            case REJECTED = "REJECTED"
            case REPLACED_WITH_NEW_VERSION = "REPLACED_WITH_NEW_VERSION"
            case WAITING_FOR_EXPORT_COMPLIANCE = "WAITING_FOR_EXPORT_COMPLIANCE"
            case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
        }
        /// - Remark: Generated from `#/components/schemas/BetaInviteType`.
        internal enum BetaInviteType: String, Codable, Hashable, Sendable, CaseIterable {
            case EMAIL = "EMAIL"
            case PUBLIC_LINK = "PUBLIC_LINK"
        }
        /// - Remark: Generated from `#/components/schemas/BetaReviewState`.
        internal enum BetaReviewState: String, Codable, Hashable, Sendable, CaseIterable {
            case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
            case IN_REVIEW = "IN_REVIEW"
            case REJECTED = "REJECTED"
            case APPROVED = "APPROVED"
        }
        /// - Remark: Generated from `#/components/schemas/BetaTesterState`.
        internal enum BetaTesterState: String, Codable, Hashable, Sendable, CaseIterable {
            case NOT_INVITED = "NOT_INVITED"
            case INVITED = "INVITED"
            case ACCEPTED = "ACCEPTED"
            case INSTALLED = "INSTALLED"
            case REVOKED = "REVOKED"
        }
        /// - Remark: Generated from `#/components/schemas/BuildAudienceType`.
        internal enum BuildAudienceType: String, Codable, Hashable, Sendable, CaseIterable {
            case INTERNAL_ONLY = "INTERNAL_ONLY"
            case APP_STORE_ELIGIBLE = "APP_STORE_ELIGIBLE"
        }
        /// - Remark: Generated from `#/components/schemas/BuildBundleType`.
        internal enum BuildBundleType: String, Codable, Hashable, Sendable, CaseIterable {
            case APP = "APP"
            case APP_CLIP = "APP_CLIP"
        }
        /// - Remark: Generated from `#/components/schemas/BuildUploadState`.
        internal enum BuildUploadState: String, Codable, Hashable, Sendable, CaseIterable {
            case AWAITING_UPLOAD = "AWAITING_UPLOAD"
            case PROCESSING = "PROCESSING"
            case FAILED = "FAILED"
            case COMPLETE = "COMPLETE"
        }
        /// - Remark: Generated from `#/components/schemas/ChecksumAlgorithm`.
        internal enum ChecksumAlgorithm: String, Codable, Hashable, Sendable, CaseIterable {
            case MD5 = "MD5"
            case SHA_256 = "SHA_256"
        }
        /// - Remark: Generated from `#/components/schemas/Checksums`.
        internal struct Checksums: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/Checksums/file`.
            internal struct filePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Checksums/file/hash`.
                internal var hash: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Checksums/file/algorithm`.
                internal var algorithm: Components.Schemas.ChecksumAlgorithm?
                /// Creates a new `filePayload`.
                ///
                /// - Parameters:
                ///   - hash:
                ///   - algorithm:
                internal init(
                    hash: Swift.String? = nil,
                    algorithm: Components.Schemas.ChecksumAlgorithm? = nil
                ) {
                    self.hash = hash
                    self.algorithm = algorithm
                }
                internal enum CodingKeys: String, CodingKey {
                    case hash
                    case algorithm
                }
            }
            /// - Remark: Generated from `#/components/schemas/Checksums/file`.
            internal var file: Components.Schemas.Checksums.filePayload?
            /// - Remark: Generated from `#/components/schemas/Checksums/composite`.
            internal struct compositePayload: Codable, Hashable, Sendable {
                /// - Remark: Generated from `#/components/schemas/Checksums/composite/hash`.
                internal var hash: Swift.String?
                /// - Remark: Generated from `#/components/schemas/Checksums/composite/algorithm`.
                internal enum algorithmPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case MD5 = "MD5"
                }
                /// - Remark: Generated from `#/components/schemas/Checksums/composite/algorithm`.
                internal var algorithm: Components.Schemas.Checksums.compositePayload.algorithmPayload?
                /// Creates a new `compositePayload`.
                ///
                /// - Parameters:
                ///   - hash:
                ///   - algorithm:
                internal init(
                    hash: Swift.String? = nil,
                    algorithm: Components.Schemas.Checksums.compositePayload.algorithmPayload? = nil
                ) {
                    self.hash = hash
                    self.algorithm = algorithm
                }
                internal enum CodingKeys: String, CodingKey {
                    case hash
                    case algorithm
                }
            }
            /// - Remark: Generated from `#/components/schemas/Checksums/composite`.
            internal var composite: Components.Schemas.Checksums.compositePayload?
            /// Creates a new `Checksums`.
            ///
            /// - Parameters:
            ///   - file:
            ///   - composite:
            internal init(
                file: Components.Schemas.Checksums.filePayload? = nil,
                composite: Components.Schemas.Checksums.compositePayload? = nil
            ) {
                self.file = file
                self.composite = composite
            }
            internal enum CodingKeys: String, CodingKey {
                case file
                case composite
            }
        }
        /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation`.
        internal struct DeliveryFileUploadOperation: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/method`.
            internal var method: Swift.String?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/url`.
            internal var url: Swift.String?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/length`.
            internal var length: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/offset`.
            internal var offset: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/requestHeaders`.
            internal var requestHeaders: [Components.Schemas.HttpHeader]?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/expiration`.
            internal var expiration: Foundation.Date?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/partNumber`.
            internal var partNumber: Swift.Int64?
            /// - Remark: Generated from `#/components/schemas/DeliveryFileUploadOperation/entityTag`.
            internal var entityTag: Swift.String?
            /// Creates a new `DeliveryFileUploadOperation`.
            ///
            /// - Parameters:
            ///   - method:
            ///   - url:
            ///   - length:
            ///   - offset:
            ///   - requestHeaders:
            ///   - expiration:
            ///   - partNumber:
            ///   - entityTag:
            internal init(
                method: Swift.String? = nil,
                url: Swift.String? = nil,
                length: Swift.Int64? = nil,
                offset: Swift.Int64? = nil,
                requestHeaders: [Components.Schemas.HttpHeader]? = nil,
                expiration: Foundation.Date? = nil,
                partNumber: Swift.Int64? = nil,
                entityTag: Swift.String? = nil
            ) {
                self.method = method
                self.url = url
                self.length = length
                self.offset = offset
                self.requestHeaders = requestHeaders
                self.expiration = expiration
                self.partNumber = partNumber
                self.entityTag = entityTag
            }
            internal enum CodingKeys: String, CodingKey {
                case method
                case url
                case length
                case offset
                case requestHeaders
                case expiration
                case partNumber
                case entityTag
            }
        }
        /// - Remark: Generated from `#/components/schemas/DeviceFamily`.
        internal enum DeviceFamily: String, Codable, Hashable, Sendable, CaseIterable {
            case IPHONE = "IPHONE"
            case IPAD = "IPAD"
            case APPLE_TV = "APPLE_TV"
            case APPLE_WATCH = "APPLE_WATCH"
            case MAC = "MAC"
            case VISION = "VISION"
        }
        /// - Remark: Generated from `#/components/schemas/DeviceFamilyOsVersionFilter`.
        internal struct DeviceFamilyOsVersionFilter: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/DeviceFamilyOsVersionFilter/deviceFamily`.
            internal var deviceFamily: Components.Schemas.DeviceFamily?
            /// - Remark: Generated from `#/components/schemas/DeviceFamilyOsVersionFilter/minimumOsInclusive`.
            internal var minimumOsInclusive: Swift.String?
            /// - Remark: Generated from `#/components/schemas/DeviceFamilyOsVersionFilter/maximumOsInclusive`.
            internal var maximumOsInclusive: Swift.String?
            /// Creates a new `DeviceFamilyOsVersionFilter`.
            ///
            /// - Parameters:
            ///   - deviceFamily:
            ///   - minimumOsInclusive:
            ///   - maximumOsInclusive:
            internal init(
                deviceFamily: Components.Schemas.DeviceFamily? = nil,
                minimumOsInclusive: Swift.String? = nil,
                maximumOsInclusive: Swift.String? = nil
            ) {
                self.deviceFamily = deviceFamily
                self.minimumOsInclusive = minimumOsInclusive
                self.maximumOsInclusive = maximumOsInclusive
            }
            internal enum CodingKeys: String, CodingKey {
                case deviceFamily
                case minimumOsInclusive
                case maximumOsInclusive
            }
        }
        /// - Remark: Generated from `#/components/schemas/ExternalBetaState`.
        internal enum ExternalBetaState: String, Codable, Hashable, Sendable, CaseIterable {
            case PROCESSING = "PROCESSING"
            case PROCESSING_EXCEPTION = "PROCESSING_EXCEPTION"
            case MISSING_EXPORT_COMPLIANCE = "MISSING_EXPORT_COMPLIANCE"
            case READY_FOR_BETA_TESTING = "READY_FOR_BETA_TESTING"
            case IN_BETA_TESTING = "IN_BETA_TESTING"
            case EXPIRED = "EXPIRED"
            case READY_FOR_BETA_SUBMISSION = "READY_FOR_BETA_SUBMISSION"
            case IN_EXPORT_COMPLIANCE_REVIEW = "IN_EXPORT_COMPLIANCE_REVIEW"
            case WAITING_FOR_BETA_REVIEW = "WAITING_FOR_BETA_REVIEW"
            case IN_BETA_REVIEW = "IN_BETA_REVIEW"
            case BETA_REJECTED = "BETA_REJECTED"
            case BETA_APPROVED = "BETA_APPROVED"
            case NOT_APPLICABLE = "NOT_APPLICABLE"
        }
        /// - Remark: Generated from `#/components/schemas/HttpHeader`.
        internal struct HttpHeader: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/HttpHeader/name`.
            internal var name: Swift.String?
            /// - Remark: Generated from `#/components/schemas/HttpHeader/value`.
            internal var value: Swift.String?
            /// Creates a new `HttpHeader`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - value:
            internal init(
                name: Swift.String? = nil,
                value: Swift.String? = nil
            ) {
                self.name = name
                self.value = value
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case value
            }
        }
        /// - Remark: Generated from `#/components/schemas/IconAssetType`.
        internal enum IconAssetType: String, Codable, Hashable, Sendable, CaseIterable {
            case APP_STORE = "APP_STORE"
            case MESSAGES_APP_STORE = "MESSAGES_APP_STORE"
            case WATCH_APP_STORE = "WATCH_APP_STORE"
            case TV_OS_HOME_SCREEN = "TV_OS_HOME_SCREEN"
            case TV_OS_TOP_SHELF = "TV_OS_TOP_SHELF"
            case ALTERNATE_EXPERIMENT = "ALTERNATE_EXPERIMENT"
        }
        /// - Remark: Generated from `#/components/schemas/ImageAsset`.
        internal struct ImageAsset: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/ImageAsset/templateUrl`.
            internal var templateUrl: Swift.String?
            /// - Remark: Generated from `#/components/schemas/ImageAsset/width`.
            internal var width: Swift.Int?
            /// - Remark: Generated from `#/components/schemas/ImageAsset/height`.
            internal var height: Swift.Int?
            /// Creates a new `ImageAsset`.
            ///
            /// - Parameters:
            ///   - templateUrl:
            ///   - width:
            ///   - height:
            internal init(
                templateUrl: Swift.String? = nil,
                width: Swift.Int? = nil,
                height: Swift.Int? = nil
            ) {
                self.templateUrl = templateUrl
                self.width = width
                self.height = height
            }
            internal enum CodingKeys: String, CodingKey {
                case templateUrl
                case width
                case height
            }
        }
        /// - Remark: Generated from `#/components/schemas/InternalBetaState`.
        internal enum InternalBetaState: String, Codable, Hashable, Sendable, CaseIterable {
            case PROCESSING = "PROCESSING"
            case PROCESSING_EXCEPTION = "PROCESSING_EXCEPTION"
            case MISSING_EXPORT_COMPLIANCE = "MISSING_EXPORT_COMPLIANCE"
            case READY_FOR_BETA_TESTING = "READY_FOR_BETA_TESTING"
            case IN_BETA_TESTING = "IN_BETA_TESTING"
            case EXPIRED = "EXPIRED"
            case IN_EXPORT_COMPLIANCE_REVIEW = "IN_EXPORT_COMPLIANCE_REVIEW"
        }
        /// - Remark: Generated from `#/components/schemas/Platform`.
        internal enum Platform: String, Codable, Hashable, Sendable, CaseIterable {
            case IOS = "IOS"
            case MAC_OS = "MAC_OS"
            case TV_OS = "TV_OS"
            case VISION_OS = "VISION_OS"
        }
        /// - Remark: Generated from `#/components/schemas/StateDetail`.
        internal struct StateDetail: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/StateDetail/code`.
            internal var code: Swift.String?
            /// - Remark: Generated from `#/components/schemas/StateDetail/description`.
            internal var description: Swift.String?
            /// Creates a new `StateDetail`.
            ///
            /// - Parameters:
            ///   - code:
            ///   - description:
            internal init(
                code: Swift.String? = nil,
                description: Swift.String? = nil
            ) {
                self.code = code
                self.description = description
            }
            internal enum CodingKeys: String, CodingKey {
                case code
                case description
            }
        }
        /// - Remark: Generated from `#/components/schemas/SubscriptionStatusUrlVersion`.
        internal enum SubscriptionStatusUrlVersion: String, Codable, Hashable, Sendable, CaseIterable {
            case V1 = "V1"
            case V2 = "V2"
        }
        /// - Remark: Generated from `#/components/schemas/UserRole`.
        internal enum UserRole: String, Codable, Hashable, Sendable, CaseIterable {
            case ADMIN = "ADMIN"
            case FINANCE = "FINANCE"
            case ACCOUNT_HOLDER = "ACCOUNT_HOLDER"
            case SALES = "SALES"
            case MARKETING = "MARKETING"
            case APP_MANAGER = "APP_MANAGER"
            case DEVELOPER = "DEVELOPER"
            case ACCESS_TO_REPORTS = "ACCESS_TO_REPORTS"
            case CUSTOMER_SUPPORT = "CUSTOMER_SUPPORT"
            case CREATE_APPS = "CREATE_APPS"
            case CLOUD_MANAGED_DEVELOPER_ID = "CLOUD_MANAGED_DEVELOPER_ID"
            case CLOUD_MANAGED_APP_DISTRIBUTION = "CLOUD_MANAGED_APP_DISTRIBUTION"
            case GENERATE_INDIVIDUAL_KEYS = "GENERATE_INDIVIDUAL_KEYS"
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// - Remark: HTTP `POST /v1/betaAppReviewSubmissions`.
    /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)`.
    internal enum betaAppReviewSubmissions_createInstance {
        internal static let id: Swift.String = "betaAppReviewSubmissions_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaAppReviewSubmissions_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaAppReviewSubmissions_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaAppReviewSubmissions_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaAppReviewSubmissionCreateRequest)
            }
            internal var body: Operations.betaAppReviewSubmissions_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.betaAppReviewSubmissions_createInstance.Input.Headers = .init(),
                body: Operations.betaAppReviewSubmissions_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaAppReviewSubmissions_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaAppReviewSubmissions_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaAppReviewSubmissions_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaAppReviewSubmissions_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaAppReviewSubmissions_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaAppReviewSubmissions_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaAppReviewSubmissions_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaAppReviewSubmissions_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BetaAppReviewSubmissionResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaAppReviewSubmissionResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BetaAppReviewSubmission
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.betaAppReviewSubmissions_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.betaAppReviewSubmissions_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaAppReviewSubmissions_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaAppReviewSubmissions_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaAppReviewSubmissions/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaAppReviewSubmissions_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaAppReviewSubmissions_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaAppReviewSubmissions/post(betaAppReviewSubmissions_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaAppReviewSubmissions_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaAppReviewSubmissions_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)`.
    internal enum betaBuildLocalizations_createInstance {
        internal static let id: Swift.String = "betaBuildLocalizations_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaBuildLocalizations_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaBuildLocalizationCreateRequest)
            }
            internal var body: Operations.betaBuildLocalizations_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.betaBuildLocalizations_createInstance.Input.Headers = .init(),
                body: Operations.betaBuildLocalizations_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaBuildLocalizations_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaBuildLocalizations_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaBuildLocalizations_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaBuildLocalizations_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaBuildLocalizations_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaBuildLocalizations_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaBuildLocalizations_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaBuildLocalizations_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BetaBuildLocalizationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaBuildLocalizationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BetaBuildLocalization
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.betaBuildLocalizations_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.betaBuildLocalizations_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaBuildLocalizations_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaBuildLocalizations_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/post(betaBuildLocalizations_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaBuildLocalizations_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaBuildLocalizations_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)`.
    internal enum betaBuildLocalizations_getInstance {
        internal static let id: Swift.String = "betaBuildLocalizations_getInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaBuildLocalizations_getInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields_lbrack_betaBuildLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case whatsNew = "whatsNew"
                    case locale = "locale"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields[betaBuildLocalizations]`.
                internal typealias fields_lbrack_betaBuildLocalizations_rbrack_Payload = [Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaBuildLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields[betaBuildLocalizations]`.
                internal var fields_lbrack_betaBuildLocalizations_rbrack_: Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/include`.
                internal typealias includePayload = [Operations.betaBuildLocalizations_getInstance.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/query/include`.
                internal var include: Operations.betaBuildLocalizations_getInstance.Input.Query.includePayload?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_betaBuildLocalizations_rbrack_: the fields to include for returned resources of type betaBuildLocalizations
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - include: comma-separated list of relationships to include
                internal init(
                    fields_lbrack_betaBuildLocalizations_rbrack_: Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.betaBuildLocalizations_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    include: Operations.betaBuildLocalizations_getInstance.Input.Query.includePayload? = nil
                ) {
                    self.fields_lbrack_betaBuildLocalizations_rbrack_ = fields_lbrack_betaBuildLocalizations_rbrack_
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.include = include
                }
            }
            internal var query: Operations.betaBuildLocalizations_getInstance.Input.Query
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_getInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_getInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaBuildLocalizations_getInstance.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.betaBuildLocalizations_getInstance.Input.Path,
                query: Operations.betaBuildLocalizations_getInstance.Input.Query = .init(),
                headers: Operations.betaBuildLocalizations_getInstance.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaBuildLocalizations_getInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaBuildLocalizations_getInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaBuildLocalizations_getInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaBuildLocalizations_getInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaBuildLocalizations_getInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaBuildLocalizations_getInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaBuildLocalizations_getInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaBuildLocalizations_getInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaBuildLocalizationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaBuildLocalizationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single BetaBuildLocalization
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaBuildLocalizations_getInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaBuildLocalizations_getInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_getInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_getInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/get(betaBuildLocalizations_getInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaBuildLocalizations_getInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaBuildLocalizations_getInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /v1/betaBuildLocalizations/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)`.
    internal enum betaBuildLocalizations_updateInstance {
        internal static let id: Swift.String = "betaBuildLocalizations_updateInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaBuildLocalizations_updateInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_updateInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaBuildLocalizations_updateInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaBuildLocalizations_updateInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaBuildLocalizationUpdateRequest)
            }
            internal var body: Operations.betaBuildLocalizations_updateInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.betaBuildLocalizations_updateInstance.Input.Path,
                headers: Operations.betaBuildLocalizations_updateInstance.Input.Headers = .init(),
                body: Operations.betaBuildLocalizations_updateInstance.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaBuildLocalizations_updateInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaBuildLocalizations_updateInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaBuildLocalizations_updateInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaBuildLocalizations_updateInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaBuildLocalizations_updateInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaBuildLocalizations_updateInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaBuildLocalizations_updateInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaBuildLocalizations_updateInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaBuildLocalizations_updateInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaBuildLocalizations_updateInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaBuildLocalizationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaBuildLocalizationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single BetaBuildLocalization
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaBuildLocalizations_updateInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaBuildLocalizations_updateInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaBuildLocalizations_updateInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaBuildLocalizations_updateInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaBuildLocalizations/{id}/PATCH/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaBuildLocalizations_updateInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaBuildLocalizations_updateInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaBuildLocalizations/{id}/patch(betaBuildLocalizations_updateInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaBuildLocalizations_updateInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaBuildLocalizations_updateInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)`.
    internal enum betaGroups_getCollection {
        internal static let id: Swift.String = "betaGroups_getCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// filter by attribute 'name'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[name]`.
                internal var filter_lbrack_name_rbrack_: [Swift.String]?
                /// filter by attribute 'isInternalGroup'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[isInternalGroup]`.
                internal var filter_lbrack_isInternalGroup_rbrack_: [Swift.String]?
                /// filter by attribute 'publicLinkEnabled'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[publicLinkEnabled]`.
                internal var filter_lbrack_publicLinkEnabled_rbrack_: [Swift.String]?
                /// filter by attribute 'publicLinkLimitEnabled'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[publicLinkLimitEnabled]`.
                internal var filter_lbrack_publicLinkLimitEnabled_rbrack_: [Swift.String]?
                /// filter by attribute 'publicLink'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[publicLink]`.
                internal var filter_lbrack_publicLink_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'app'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[app]`.
                internal var filter_lbrack_app_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'builds'
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[builds]`.
                internal var filter_lbrack_builds_rbrack_: [Swift.String]?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case _hyphen_name = "-name"
                    case createdDate = "createdDate"
                    case _hyphen_createdDate = "-createdDate"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case _hyphen_publicLinkEnabled = "-publicLinkEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case _hyphen_publicLinkLimit = "-publicLinkLimit"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/sort`.
                internal typealias sortPayload = [Operations.betaGroups_getCollection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/sort`.
                internal var sort: Operations.betaGroups_getCollection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.betaGroups_getCollection.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.betaGroups_getCollection.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields_lbrack_betaRecruitmentCriteria_rbrack_Payload`.
                internal enum fields_lbrack_betaRecruitmentCriteria_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case lastModifiedDate = "lastModifiedDate"
                    case deviceFamilyOsVersionFilters = "deviceFamilyOsVersionFilters"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaRecruitmentCriteria]`.
                internal typealias fields_lbrack_betaRecruitmentCriteria_rbrack_Payload = [Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaRecruitmentCriteria
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/fields[betaRecruitmentCriteria]`.
                internal var fields_lbrack_betaRecruitmentCriteria_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/limit`.
                internal var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/include`.
                internal typealias includePayload = [Operations.betaGroups_getCollection.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/include`.
                internal var include: Operations.betaGroups_getCollection.Input.Query.includePayload?
                /// maximum number of related betaTesters returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/limit[betaTesters]`.
                internal var limit_lbrack_betaTesters_rbrack_: Swift.Int?
                /// maximum number of related builds returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/query/limit[builds]`.
                internal var limit_lbrack_builds_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_name_rbrack_: filter by attribute 'name'
                ///   - filter_lbrack_isInternalGroup_rbrack_: filter by attribute 'isInternalGroup'
                ///   - filter_lbrack_publicLinkEnabled_rbrack_: filter by attribute 'publicLinkEnabled'
                ///   - filter_lbrack_publicLinkLimitEnabled_rbrack_: filter by attribute 'publicLinkLimitEnabled'
                ///   - filter_lbrack_publicLink_rbrack_: filter by attribute 'publicLink'
                ///   - filter_lbrack_app_rbrack_: filter by id(s) of related 'app'
                ///   - filter_lbrack_builds_rbrack_: filter by id(s) of related 'builds'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_betaRecruitmentCriteria_rbrack_: the fields to include for returned resources of type betaRecruitmentCriteria
                ///   - limit: maximum resources per page
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_betaTesters_rbrack_: maximum number of related betaTesters returned (when they are included)
                ///   - limit_lbrack_builds_rbrack_: maximum number of related builds returned (when they are included)
                internal init(
                    filter_lbrack_name_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_isInternalGroup_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_publicLinkEnabled_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_publicLinkLimitEnabled_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_publicLink_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_app_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_builds_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    sort: Operations.betaGroups_getCollection.Input.Query.sortPayload? = nil,
                    fields_lbrack_betaGroups_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_betaRecruitmentCriteria_rbrack_: Operations.betaGroups_getCollection.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil,
                    include: Operations.betaGroups_getCollection.Input.Query.includePayload? = nil,
                    limit_lbrack_betaTesters_rbrack_: Swift.Int? = nil,
                    limit_lbrack_builds_rbrack_: Swift.Int? = nil
                ) {
                    self.filter_lbrack_name_rbrack_ = filter_lbrack_name_rbrack_
                    self.filter_lbrack_isInternalGroup_rbrack_ = filter_lbrack_isInternalGroup_rbrack_
                    self.filter_lbrack_publicLinkEnabled_rbrack_ = filter_lbrack_publicLinkEnabled_rbrack_
                    self.filter_lbrack_publicLinkLimitEnabled_rbrack_ = filter_lbrack_publicLinkLimitEnabled_rbrack_
                    self.filter_lbrack_publicLink_rbrack_ = filter_lbrack_publicLink_rbrack_
                    self.filter_lbrack_app_rbrack_ = filter_lbrack_app_rbrack_
                    self.filter_lbrack_builds_rbrack_ = filter_lbrack_builds_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.sort = sort
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_betaRecruitmentCriteria_rbrack_ = fields_lbrack_betaRecruitmentCriteria_rbrack_
                    self.limit = limit
                    self.include = include
                    self.limit_lbrack_betaTesters_rbrack_ = limit_lbrack_betaTesters_rbrack_
                    self.limit_lbrack_builds_rbrack_ = limit_lbrack_builds_rbrack_
                }
            }
            internal var query: Operations.betaGroups_getCollection.Input.Query
            /// - Remark: Generated from `#/paths/v1/betaGroups/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_getCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_getCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaGroups_getCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.betaGroups_getCollection.Input.Query = .init(),
                headers: Operations.betaGroups_getCollection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaGroups_getCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaGroups_getCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaGroups_getCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaGroups_getCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getCollection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getCollection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaGroups_getCollection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaGroups_getCollection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaGroupsResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaGroupsResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of BetaGroups
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaGroups_getCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaGroups_getCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getCollection.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getCollection.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/get(betaGroups_getCollection)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaGroups_getCollection.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaGroups_getCollection.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/betaGroups/{id}`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)`.
    internal enum betaGroups_getInstance {
        internal static let id: Swift.String = "betaGroups_getInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaGroups_getInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.betaGroups_getInstance.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.betaGroups_getInstance.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields_lbrack_betaRecruitmentCriteria_rbrack_Payload`.
                internal enum fields_lbrack_betaRecruitmentCriteria_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case lastModifiedDate = "lastModifiedDate"
                    case deviceFamilyOsVersionFilters = "deviceFamilyOsVersionFilters"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaRecruitmentCriteria]`.
                internal typealias fields_lbrack_betaRecruitmentCriteria_rbrack_Payload = [Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaRecruitmentCriteria
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/fields[betaRecruitmentCriteria]`.
                internal var fields_lbrack_betaRecruitmentCriteria_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                }
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/include`.
                internal typealias includePayload = [Operations.betaGroups_getInstance.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/include`.
                internal var include: Operations.betaGroups_getInstance.Input.Query.includePayload?
                /// maximum number of related betaTesters returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/limit[betaTesters]`.
                internal var limit_lbrack_betaTesters_rbrack_: Swift.Int?
                /// maximum number of related builds returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/query/limit[builds]`.
                internal var limit_lbrack_builds_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_betaRecruitmentCriteria_rbrack_: the fields to include for returned resources of type betaRecruitmentCriteria
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_betaTesters_rbrack_: maximum number of related betaTesters returned (when they are included)
                ///   - limit_lbrack_builds_rbrack_: maximum number of related builds returned (when they are included)
                internal init(
                    fields_lbrack_betaGroups_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_betaRecruitmentCriteria_rbrack_: Operations.betaGroups_getInstance.Input.Query.fields_lbrack_betaRecruitmentCriteria_rbrack_Payload? = nil,
                    include: Operations.betaGroups_getInstance.Input.Query.includePayload? = nil,
                    limit_lbrack_betaTesters_rbrack_: Swift.Int? = nil,
                    limit_lbrack_builds_rbrack_: Swift.Int? = nil
                ) {
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_betaRecruitmentCriteria_rbrack_ = fields_lbrack_betaRecruitmentCriteria_rbrack_
                    self.include = include
                    self.limit_lbrack_betaTesters_rbrack_ = limit_lbrack_betaTesters_rbrack_
                    self.limit_lbrack_builds_rbrack_ = limit_lbrack_builds_rbrack_
                }
            }
            internal var query: Operations.betaGroups_getInstance.Input.Query
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_getInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_getInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaGroups_getInstance.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.betaGroups_getInstance.Input.Path,
                query: Operations.betaGroups_getInstance.Input.Query = .init(),
                headers: Operations.betaGroups_getInstance.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaGroups_getInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaGroups_getInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaGroups_getInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaGroups_getInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaGroups_getInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaGroups_getInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaGroups_getInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaGroups_getInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaGroupResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaGroupResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single BetaGroup
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaGroups_getInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaGroups_getInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_getInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_getInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/get(betaGroups_getInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaGroups_getInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaGroups_getInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/betaTesterInvitations`.
    /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)`.
    internal enum betaTesterInvitations_createInstance {
        internal static let id: Swift.String = "betaTesterInvitations_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesterInvitations_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesterInvitations_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaTesterInvitations_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaTesterInvitationCreateRequest)
            }
            internal var body: Operations.betaTesterInvitations_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.betaTesterInvitations_createInstance.Input.Headers = .init(),
                body: Operations.betaTesterInvitations_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaTesterInvitations_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaTesterInvitations_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaTesterInvitations_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaTesterInvitations_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaTesterInvitations_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaTesterInvitations_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaTesterInvitations_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaTesterInvitations_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BetaTesterInvitationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaTesterInvitationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BetaTesterInvitation
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.betaTesterInvitations_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.betaTesterInvitations_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaTesterInvitations_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaTesterInvitations_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesterInvitations/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesterInvitations_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesterInvitations_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesterInvitations/post(betaTesterInvitations_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaTesterInvitations_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaTesterInvitations_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)`.
    internal enum betaTesters_getCollection {
        internal static let id: Swift.String = "betaTesters_getCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// filter by attribute 'firstName'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[firstName]`.
                internal var filter_lbrack_firstName_rbrack_: [Swift.String]?
                /// filter by attribute 'lastName'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[lastName]`.
                internal var filter_lbrack_lastName_rbrack_: [Swift.String]?
                /// filter by attribute 'email'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[email]`.
                internal var filter_lbrack_email_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter_lbrack_inviteType_rbrack_Payload`.
                internal enum filter_lbrack_inviteType_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case EMAIL = "EMAIL"
                    case PUBLIC_LINK = "PUBLIC_LINK"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[inviteType]`.
                internal typealias filter_lbrack_inviteType_rbrack_Payload = [Operations.betaTesters_getCollection.Input.Query.filter_lbrack_inviteType_rbrack_PayloadPayload]
                /// filter by attribute 'inviteType'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[inviteType]`.
                internal var filter_lbrack_inviteType_rbrack_: Operations.betaTesters_getCollection.Input.Query.filter_lbrack_inviteType_rbrack_Payload?
                /// filter by id(s) of related 'apps'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[apps]`.
                internal var filter_lbrack_apps_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'betaGroups'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[betaGroups]`.
                internal var filter_lbrack_betaGroups_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'builds'
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[builds]`.
                internal var filter_lbrack_builds_rbrack_: [Swift.String]?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case _hyphen_firstName = "-firstName"
                    case lastName = "lastName"
                    case _hyphen_lastName = "-lastName"
                    case email = "email"
                    case _hyphen_email = "-email"
                    case inviteType = "inviteType"
                    case _hyphen_inviteType = "-inviteType"
                    case state = "state"
                    case _hyphen_state = "-state"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/sort`.
                internal typealias sortPayload = [Operations.betaTesters_getCollection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/sort`.
                internal var sort: Operations.betaTesters_getCollection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.betaTesters_getCollection.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.betaTesters_getCollection.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/limit`.
                internal var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/include`.
                internal typealias includePayload = [Operations.betaTesters_getCollection.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/include`.
                internal var include: Operations.betaTesters_getCollection.Input.Query.includePayload?
                /// maximum number of related apps returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/limit[apps]`.
                internal var limit_lbrack_apps_rbrack_: Swift.Int?
                /// maximum number of related betaGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/limit[betaGroups]`.
                internal var limit_lbrack_betaGroups_rbrack_: Swift.Int?
                /// maximum number of related builds returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/query/limit[builds]`.
                internal var limit_lbrack_builds_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_firstName_rbrack_: filter by attribute 'firstName'
                ///   - filter_lbrack_lastName_rbrack_: filter by attribute 'lastName'
                ///   - filter_lbrack_email_rbrack_: filter by attribute 'email'
                ///   - filter_lbrack_inviteType_rbrack_: filter by attribute 'inviteType'
                ///   - filter_lbrack_apps_rbrack_: filter by id(s) of related 'apps'
                ///   - filter_lbrack_betaGroups_rbrack_: filter by id(s) of related 'betaGroups'
                ///   - filter_lbrack_builds_rbrack_: filter by id(s) of related 'builds'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - limit: maximum resources per page
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_apps_rbrack_: maximum number of related apps returned (when they are included)
                ///   - limit_lbrack_betaGroups_rbrack_: maximum number of related betaGroups returned (when they are included)
                ///   - limit_lbrack_builds_rbrack_: maximum number of related builds returned (when they are included)
                internal init(
                    filter_lbrack_firstName_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_lastName_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_email_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_inviteType_rbrack_: Operations.betaTesters_getCollection.Input.Query.filter_lbrack_inviteType_rbrack_Payload? = nil,
                    filter_lbrack_apps_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_betaGroups_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_builds_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    sort: Operations.betaTesters_getCollection.Input.Query.sortPayload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_betaGroups_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.betaTesters_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil,
                    include: Operations.betaTesters_getCollection.Input.Query.includePayload? = nil,
                    limit_lbrack_apps_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaGroups_rbrack_: Swift.Int? = nil,
                    limit_lbrack_builds_rbrack_: Swift.Int? = nil
                ) {
                    self.filter_lbrack_firstName_rbrack_ = filter_lbrack_firstName_rbrack_
                    self.filter_lbrack_lastName_rbrack_ = filter_lbrack_lastName_rbrack_
                    self.filter_lbrack_email_rbrack_ = filter_lbrack_email_rbrack_
                    self.filter_lbrack_inviteType_rbrack_ = filter_lbrack_inviteType_rbrack_
                    self.filter_lbrack_apps_rbrack_ = filter_lbrack_apps_rbrack_
                    self.filter_lbrack_betaGroups_rbrack_ = filter_lbrack_betaGroups_rbrack_
                    self.filter_lbrack_builds_rbrack_ = filter_lbrack_builds_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.sort = sort
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.limit = limit
                    self.include = include
                    self.limit_lbrack_apps_rbrack_ = limit_lbrack_apps_rbrack_
                    self.limit_lbrack_betaGroups_rbrack_ = limit_lbrack_betaGroups_rbrack_
                    self.limit_lbrack_builds_rbrack_ = limit_lbrack_builds_rbrack_
                }
            }
            internal var query: Operations.betaTesters_getCollection.Input.Query
            /// - Remark: Generated from `#/paths/v1/betaTesters/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_getCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_getCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaTesters_getCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.betaTesters_getCollection.Input.Query = .init(),
                headers: Operations.betaTesters_getCollection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_getCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_getCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaTesters_getCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaTesters_getCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_getCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_getCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaTesters_getCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaTesters_getCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_getCollection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_getCollection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaTesters_getCollection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaTesters_getCollection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaTestersResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaTestersResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_getCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_getCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of BetaTesters
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaTesters_getCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaTesters_getCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_getCollection.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_getCollection.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/get(betaTesters_getCollection)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaTesters_getCollection.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaTesters_getCollection.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/betaTesters`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)`.
    internal enum betaTesters_createInstance {
        internal static let id: Swift.String = "betaTesters_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaTesters/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaTesters_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaTesters/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaTesterCreateRequest)
            }
            internal var body: Operations.betaTesters_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.betaTesters_createInstance.Input.Headers = .init(),
                body: Operations.betaTesters_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaTesters_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaTesters_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaTesters_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaTesters_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaTesters_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaTesters_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaTesters_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaTesters_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BetaTesterResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaTesterResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BetaTester
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.betaTesters_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.betaTesters_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaTesters_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaTesters_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/post(betaTesters_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaTesters_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaTesters_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/buildBetaNotifications`.
    /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)`.
    internal enum buildBetaNotifications_createInstance {
        internal static let id: Swift.String = "buildBetaNotifications_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBetaNotifications_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBetaNotifications_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildBetaNotifications_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildBetaNotificationCreateRequest)
            }
            internal var body: Operations.buildBetaNotifications_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.buildBetaNotifications_createInstance.Input.Headers = .init(),
                body: Operations.buildBetaNotifications_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildBetaNotifications_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildBetaNotifications_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildBetaNotifications_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildBetaNotifications_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildBetaNotifications_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildBetaNotifications_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.buildBetaNotifications_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.buildBetaNotifications_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BuildBetaNotificationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildBetaNotificationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BuildBetaNotification
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.buildBetaNotifications_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.buildBetaNotifications_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.buildBetaNotifications_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.buildBetaNotifications_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaNotifications/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaNotifications_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaNotifications_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaNotifications/post(buildBetaNotifications_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildBetaNotifications_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildBetaNotifications_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/buildUploadFiles`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)`.
    internal enum buildUploadFiles_createInstance {
        internal static let id: Swift.String = "buildUploadFiles_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploadFiles_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploadFiles_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildUploadFiles_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildUploadFileCreateRequest)
            }
            internal var body: Operations.buildUploadFiles_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.buildUploadFiles_createInstance.Input.Headers = .init(),
                body: Operations.buildUploadFiles_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildUploadFiles_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildUploadFiles_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildUploadFiles_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildUploadFiles_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildUploadFiles_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildUploadFiles_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.buildUploadFiles_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.buildUploadFiles_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BuildUploadFileResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildUploadFileResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BuildUploadFile
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.buildUploadFiles_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.buildUploadFiles_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.buildUploadFiles_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.buildUploadFiles_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/post(buildUploadFiles_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildUploadFiles_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildUploadFiles_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /v1/buildUploadFiles/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)`.
    internal enum buildUploadFiles_updateInstance {
        internal static let id: Swift.String = "buildUploadFiles_updateInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.buildUploadFiles_updateInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploadFiles_updateInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploadFiles_updateInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildUploadFiles_updateInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildUploadFileUpdateRequest)
            }
            internal var body: Operations.buildUploadFiles_updateInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.buildUploadFiles_updateInstance.Input.Path,
                headers: Operations.buildUploadFiles_updateInstance.Input.Headers = .init(),
                body: Operations.buildUploadFiles_updateInstance.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildUploadFiles_updateInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildUploadFiles_updateInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildUploadFiles_updateInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildUploadFiles_updateInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildUploadFiles_updateInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildUploadFiles_updateInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildUploadFiles_updateInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.buildUploadFiles_updateInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.buildUploadFiles_updateInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.buildUploadFiles_updateInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildUploadFileResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildUploadFileResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single BuildUploadFile
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildUploadFiles_updateInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.buildUploadFiles_updateInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.buildUploadFiles_updateInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.buildUploadFiles_updateInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploadFiles/{id}/PATCH/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploadFiles_updateInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploadFiles_updateInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploadFiles/{id}/patch(buildUploadFiles_updateInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildUploadFiles_updateInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildUploadFiles_updateInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/buildUploads`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)`.
    internal enum buildUploads_createInstance {
        internal static let id: Swift.String = "buildUploads_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildUploads/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploads_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploads_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildUploads_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/buildUploads/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildUploadCreateRequest)
            }
            internal var body: Operations.buildUploads_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.buildUploads_createInstance.Input.Headers = .init(),
                body: Operations.buildUploads_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildUploads_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildUploads_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildUploads_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildUploads_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildUploads_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildUploads_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.buildUploads_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.buildUploads_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.BuildUploadResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildUploadResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single BuildUpload
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.buildUploads_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.buildUploads_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.buildUploads_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.buildUploads_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/post(buildUploads_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildUploads_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildUploads_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/buildUploads/{id}`.
    /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)`.
    internal enum buildUploads_getInstance {
        internal static let id: Swift.String = "buildUploads_getInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.buildUploads_getInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/fields_lbrack_buildUploads_rbrack_Payload`.
                internal enum fields_lbrack_buildUploads_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case cfBundleShortVersionString = "cfBundleShortVersionString"
                    case cfBundleVersion = "cfBundleVersion"
                    case createdDate = "createdDate"
                    case state = "state"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case build = "build"
                    case assetFile = "assetFile"
                    case assetDescriptionFile = "assetDescriptionFile"
                    case assetSpiFile = "assetSpiFile"
                    case buildUploadFiles = "buildUploadFiles"
                }
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/fields[buildUploads]`.
                internal typealias fields_lbrack_buildUploads_rbrack_Payload = [Operations.buildUploads_getInstance.Input.Query.fields_lbrack_buildUploads_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildUploads
                ///
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/fields[buildUploads]`.
                internal var fields_lbrack_buildUploads_rbrack_: Operations.buildUploads_getInstance.Input.Query.fields_lbrack_buildUploads_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case build = "build"
                    case assetFile = "assetFile"
                    case assetDescriptionFile = "assetDescriptionFile"
                    case assetSpiFile = "assetSpiFile"
                }
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/include`.
                internal typealias includePayload = [Operations.buildUploads_getInstance.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/query/include`.
                internal var include: Operations.buildUploads_getInstance.Input.Query.includePayload?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_buildUploads_rbrack_: the fields to include for returned resources of type buildUploads
                ///   - include: comma-separated list of relationships to include
                internal init(
                    fields_lbrack_buildUploads_rbrack_: Operations.buildUploads_getInstance.Input.Query.fields_lbrack_buildUploads_rbrack_Payload? = nil,
                    include: Operations.buildUploads_getInstance.Input.Query.includePayload? = nil
                ) {
                    self.fields_lbrack_buildUploads_rbrack_ = fields_lbrack_buildUploads_rbrack_
                    self.include = include
                }
            }
            internal var query: Operations.buildUploads_getInstance.Input.Query
            /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploads_getInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildUploads_getInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildUploads_getInstance.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.buildUploads_getInstance.Input.Path,
                query: Operations.buildUploads_getInstance.Input.Query = .init(),
                headers: Operations.buildUploads_getInstance.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildUploads_getInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildUploads_getInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildUploads_getInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildUploads_getInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildUploads_getInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildUploads_getInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildUploads_getInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.buildUploads_getInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildUploadResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildUploadResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single BuildUpload
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildUploads_getInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.buildUploads_getInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildUploads/{id}/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildUploads_getInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildUploads_getInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildUploads/{id}/get(buildUploads_getInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildUploads_getInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildUploads_getInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/builds`.
    /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)`.
    internal enum builds_getCollection {
        internal static let id: Swift.String = "builds_getCollection"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// filter by attribute 'version'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[version]`.
                internal var filter_lbrack_version_rbrack_: [Swift.String]?
                /// filter by attribute 'expired'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[expired]`.
                internal var filter_lbrack_expired_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter_lbrack_processingState_rbrack_Payload`.
                internal enum filter_lbrack_processingState_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case PROCESSING = "PROCESSING"
                    case FAILED = "FAILED"
                    case INVALID = "INVALID"
                    case VALID = "VALID"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[processingState]`.
                internal typealias filter_lbrack_processingState_rbrack_Payload = [Operations.builds_getCollection.Input.Query.filter_lbrack_processingState_rbrack_PayloadPayload]
                /// filter by attribute 'processingState'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[processingState]`.
                internal var filter_lbrack_processingState_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_processingState_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_Payload`.
                internal enum filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case WAITING_FOR_REVIEW = "WAITING_FOR_REVIEW"
                    case IN_REVIEW = "IN_REVIEW"
                    case REJECTED = "REJECTED"
                    case APPROVED = "APPROVED"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[betaAppReviewSubmission.betaReviewState]`.
                internal typealias filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_Payload = [Operations.builds_getCollection.Input.Query.filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_PayloadPayload]
                /// filter by attribute 'betaAppReviewSubmission.betaReviewState'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[betaAppReviewSubmission.betaReviewState]`.
                internal var filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_Payload?
                /// filter by attribute 'usesNonExemptEncryption'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[usesNonExemptEncryption]`.
                internal var filter_lbrack_usesNonExemptEncryption_rbrack_: [Swift.String]?
                /// filter by attribute 'preReleaseVersion.version'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[preReleaseVersion.version]`.
                internal var filter_lbrack_preReleaseVersion_period_version_rbrack_: [Swift.String]?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter_lbrack_preReleaseVersion_period_platform_rbrack_Payload`.
                internal enum filter_lbrack_preReleaseVersion_period_platform_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case IOS = "IOS"
                    case MAC_OS = "MAC_OS"
                    case TV_OS = "TV_OS"
                    case VISION_OS = "VISION_OS"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[preReleaseVersion.platform]`.
                internal typealias filter_lbrack_preReleaseVersion_period_platform_rbrack_Payload = [Operations.builds_getCollection.Input.Query.filter_lbrack_preReleaseVersion_period_platform_rbrack_PayloadPayload]
                /// filter by attribute 'preReleaseVersion.platform'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[preReleaseVersion.platform]`.
                internal var filter_lbrack_preReleaseVersion_period_platform_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_preReleaseVersion_period_platform_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter_lbrack_buildAudienceType_rbrack_Payload`.
                internal enum filter_lbrack_buildAudienceType_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case INTERNAL_ONLY = "INTERNAL_ONLY"
                    case APP_STORE_ELIGIBLE = "APP_STORE_ELIGIBLE"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[buildAudienceType]`.
                internal typealias filter_lbrack_buildAudienceType_rbrack_Payload = [Operations.builds_getCollection.Input.Query.filter_lbrack_buildAudienceType_rbrack_PayloadPayload]
                /// filter by attribute 'buildAudienceType'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[buildAudienceType]`.
                internal var filter_lbrack_buildAudienceType_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_buildAudienceType_rbrack_Payload?
                /// filter by id(s) of related 'preReleaseVersion'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[preReleaseVersion]`.
                internal var filter_lbrack_preReleaseVersion_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'app'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[app]`.
                internal var filter_lbrack_app_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'betaGroups'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[betaGroups]`.
                internal var filter_lbrack_betaGroups_rbrack_: [Swift.String]?
                /// filter by id(s) of related 'appStoreVersion'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[appStoreVersion]`.
                internal var filter_lbrack_appStoreVersion_rbrack_: [Swift.String]?
                /// filter by id(s)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/filter[id]`.
                internal var filter_lbrack_id_rbrack_: [Swift.String]?
                /// filter by attribute 'usesNonExemptEncryption'
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/exists[usesNonExemptEncryption]`.
                internal var exists_lbrack_usesNonExemptEncryption_rbrack_: Swift.Bool?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/sortPayload`.
                internal enum sortPayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case _hyphen_version = "-version"
                    case uploadedDate = "uploadedDate"
                    case _hyphen_uploadedDate = "-uploadedDate"
                    case preReleaseVersion = "preReleaseVersion"
                    case _hyphen_preReleaseVersion = "-preReleaseVersion"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/sort`.
                internal typealias sortPayload = [Operations.builds_getCollection.Input.Query.sortPayloadPayload]
                /// comma-separated list of sort expressions; resources will be sorted as specified
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/sort`.
                internal var sort: Operations.builds_getCollection.Input.Query.sortPayload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_preReleaseVersions_rbrack_Payload`.
                internal enum fields_lbrack_preReleaseVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case platform = "platform"
                    case builds = "builds"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[preReleaseVersions]`.
                internal typealias fields_lbrack_preReleaseVersions_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type preReleaseVersions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[preReleaseVersions]`.
                internal var fields_lbrack_preReleaseVersions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_betaBuildLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case whatsNew = "whatsNew"
                    case locale = "locale"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaBuildLocalizations]`.
                internal typealias fields_lbrack_betaBuildLocalizations_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaBuildLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaBuildLocalizations]`.
                internal var fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_appEncryptionDeclarations_rbrack_Payload`.
                internal enum fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appDescription = "appDescription"
                    case createdDate = "createdDate"
                    case usesEncryption = "usesEncryption"
                    case exempt = "exempt"
                    case containsProprietaryCryptography = "containsProprietaryCryptography"
                    case containsThirdPartyCryptography = "containsThirdPartyCryptography"
                    case availableOnFrenchStore = "availableOnFrenchStore"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case documentUrl = "documentUrl"
                    case documentName = "documentName"
                    case documentType = "documentType"
                    case appEncryptionDeclarationState = "appEncryptionDeclarationState"
                    case codeValue = "codeValue"
                    case app = "app"
                    case builds = "builds"
                    case appEncryptionDeclarationDocument = "appEncryptionDeclarationDocument"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[appEncryptionDeclarations]`.
                internal typealias fields_lbrack_appEncryptionDeclarations_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appEncryptionDeclarations
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[appEncryptionDeclarations]`.
                internal var fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_betaAppReviewSubmissions_rbrack_Payload`.
                internal enum fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaReviewState = "betaReviewState"
                    case submittedDate = "submittedDate"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaAppReviewSubmissions]`.
                internal typealias fields_lbrack_betaAppReviewSubmissions_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaAppReviewSubmissions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[betaAppReviewSubmissions]`.
                internal var fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_buildBetaDetails_rbrack_Payload`.
                internal enum fields_lbrack_buildBetaDetails_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case autoNotifyEnabled = "autoNotifyEnabled"
                    case internalBuildState = "internalBuildState"
                    case externalBuildState = "externalBuildState"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[buildBetaDetails]`.
                internal typealias fields_lbrack_buildBetaDetails_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_buildBetaDetails_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildBetaDetails
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[buildBetaDetails]`.
                internal var fields_lbrack_buildBetaDetails_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_appStoreVersions_rbrack_Payload`.
                internal enum fields_lbrack_appStoreVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case versionString = "versionString"
                    case appStoreState = "appStoreState"
                    case appVersionState = "appVersionState"
                    case copyright = "copyright"
                    case reviewType = "reviewType"
                    case releaseType = "releaseType"
                    case earliestReleaseDate = "earliestReleaseDate"
                    case usesIdfa = "usesIdfa"
                    case downloadable = "downloadable"
                    case createdDate = "createdDate"
                    case app = "app"
                    case ageRatingDeclaration = "ageRatingDeclaration"
                    case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                    case build = "build"
                    case appStoreVersionPhasedRelease = "appStoreVersionPhasedRelease"
                    case gameCenterAppVersion = "gameCenterAppVersion"
                    case routingAppCoverage = "routingAppCoverage"
                    case appStoreReviewDetail = "appStoreReviewDetail"
                    case appStoreVersionSubmission = "appStoreVersionSubmission"
                    case appClipDefaultExperience = "appClipDefaultExperience"
                    case appStoreVersionExperiments = "appStoreVersionExperiments"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case customerReviews = "customerReviews"
                    case alternativeDistributionPackage = "alternativeDistributionPackage"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[appStoreVersions]`.
                internal typealias fields_lbrack_appStoreVersions_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appStoreVersions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[appStoreVersions]`.
                internal var fields_lbrack_appStoreVersions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields_lbrack_buildIcons_rbrack_Payload`.
                internal enum fields_lbrack_buildIcons_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case iconAsset = "iconAsset"
                    case iconType = "iconType"
                    case masked = "masked"
                    case name = "name"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[buildIcons]`.
                internal typealias fields_lbrack_buildIcons_rbrack_Payload = [Operations.builds_getCollection.Input.Query.fields_lbrack_buildIcons_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildIcons
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/fields[buildIcons]`.
                internal var fields_lbrack_buildIcons_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_buildIcons_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit`.
                internal var limit: Swift.Int?
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                }
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/include`.
                internal typealias includePayload = [Operations.builds_getCollection.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/include`.
                internal var include: Operations.builds_getCollection.Input.Query.includePayload?
                /// maximum number of related betaBuildLocalizations returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit[betaBuildLocalizations]`.
                internal var limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int?
                /// maximum number of related betaGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit[betaGroups]`.
                internal var limit_lbrack_betaGroups_rbrack_: Swift.Int?
                /// maximum number of related buildBundles returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit[buildBundles]`.
                internal var limit_lbrack_buildBundles_rbrack_: Swift.Int?
                /// maximum number of related icons returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit[icons]`.
                internal var limit_lbrack_icons_rbrack_: Swift.Int?
                /// maximum number of related individualTesters returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/GET/query/limit[individualTesters]`.
                internal var limit_lbrack_individualTesters_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - filter_lbrack_version_rbrack_: filter by attribute 'version'
                ///   - filter_lbrack_expired_rbrack_: filter by attribute 'expired'
                ///   - filter_lbrack_processingState_rbrack_: filter by attribute 'processingState'
                ///   - filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_: filter by attribute 'betaAppReviewSubmission.betaReviewState'
                ///   - filter_lbrack_usesNonExemptEncryption_rbrack_: filter by attribute 'usesNonExemptEncryption'
                ///   - filter_lbrack_preReleaseVersion_period_version_rbrack_: filter by attribute 'preReleaseVersion.version'
                ///   - filter_lbrack_preReleaseVersion_period_platform_rbrack_: filter by attribute 'preReleaseVersion.platform'
                ///   - filter_lbrack_buildAudienceType_rbrack_: filter by attribute 'buildAudienceType'
                ///   - filter_lbrack_preReleaseVersion_rbrack_: filter by id(s) of related 'preReleaseVersion'
                ///   - filter_lbrack_app_rbrack_: filter by id(s) of related 'app'
                ///   - filter_lbrack_betaGroups_rbrack_: filter by id(s) of related 'betaGroups'
                ///   - filter_lbrack_appStoreVersion_rbrack_: filter by id(s) of related 'appStoreVersion'
                ///   - filter_lbrack_id_rbrack_: filter by id(s)
                ///   - exists_lbrack_usesNonExemptEncryption_rbrack_: filter by attribute 'usesNonExemptEncryption'
                ///   - sort: comma-separated list of sort expressions; resources will be sorted as specified
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_preReleaseVersions_rbrack_: the fields to include for returned resources of type preReleaseVersions
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_betaBuildLocalizations_rbrack_: the fields to include for returned resources of type betaBuildLocalizations
                ///   - fields_lbrack_appEncryptionDeclarations_rbrack_: the fields to include for returned resources of type appEncryptionDeclarations
                ///   - fields_lbrack_betaAppReviewSubmissions_rbrack_: the fields to include for returned resources of type betaAppReviewSubmissions
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_buildBetaDetails_rbrack_: the fields to include for returned resources of type buildBetaDetails
                ///   - fields_lbrack_appStoreVersions_rbrack_: the fields to include for returned resources of type appStoreVersions
                ///   - fields_lbrack_buildIcons_rbrack_: the fields to include for returned resources of type buildIcons
                ///   - limit: maximum resources per page
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_betaBuildLocalizations_rbrack_: maximum number of related betaBuildLocalizations returned (when they are included)
                ///   - limit_lbrack_betaGroups_rbrack_: maximum number of related betaGroups returned (when they are included)
                ///   - limit_lbrack_buildBundles_rbrack_: maximum number of related buildBundles returned (when they are included)
                ///   - limit_lbrack_icons_rbrack_: maximum number of related icons returned (when they are included)
                ///   - limit_lbrack_individualTesters_rbrack_: maximum number of related individualTesters returned (when they are included)
                internal init(
                    filter_lbrack_version_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_expired_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_processingState_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_processingState_rbrack_Payload? = nil,
                    filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_Payload? = nil,
                    filter_lbrack_usesNonExemptEncryption_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_preReleaseVersion_period_version_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_preReleaseVersion_period_platform_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_preReleaseVersion_period_platform_rbrack_Payload? = nil,
                    filter_lbrack_buildAudienceType_rbrack_: Operations.builds_getCollection.Input.Query.filter_lbrack_buildAudienceType_rbrack_Payload? = nil,
                    filter_lbrack_preReleaseVersion_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_app_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_betaGroups_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_appStoreVersion_rbrack_: [Swift.String]? = nil,
                    filter_lbrack_id_rbrack_: [Swift.String]? = nil,
                    exists_lbrack_usesNonExemptEncryption_rbrack_: Swift.Bool? = nil,
                    sort: Operations.builds_getCollection.Input.Query.sortPayload? = nil,
                    fields_lbrack_builds_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_preReleaseVersions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload? = nil,
                    fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload? = nil,
                    fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_buildBetaDetails_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload? = nil,
                    fields_lbrack_appStoreVersions_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload? = nil,
                    fields_lbrack_buildIcons_rbrack_: Operations.builds_getCollection.Input.Query.fields_lbrack_buildIcons_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil,
                    include: Operations.builds_getCollection.Input.Query.includePayload? = nil,
                    limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaGroups_rbrack_: Swift.Int? = nil,
                    limit_lbrack_buildBundles_rbrack_: Swift.Int? = nil,
                    limit_lbrack_icons_rbrack_: Swift.Int? = nil,
                    limit_lbrack_individualTesters_rbrack_: Swift.Int? = nil
                ) {
                    self.filter_lbrack_version_rbrack_ = filter_lbrack_version_rbrack_
                    self.filter_lbrack_expired_rbrack_ = filter_lbrack_expired_rbrack_
                    self.filter_lbrack_processingState_rbrack_ = filter_lbrack_processingState_rbrack_
                    self.filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_ = filter_lbrack_betaAppReviewSubmission_period_betaReviewState_rbrack_
                    self.filter_lbrack_usesNonExemptEncryption_rbrack_ = filter_lbrack_usesNonExemptEncryption_rbrack_
                    self.filter_lbrack_preReleaseVersion_period_version_rbrack_ = filter_lbrack_preReleaseVersion_period_version_rbrack_
                    self.filter_lbrack_preReleaseVersion_period_platform_rbrack_ = filter_lbrack_preReleaseVersion_period_platform_rbrack_
                    self.filter_lbrack_buildAudienceType_rbrack_ = filter_lbrack_buildAudienceType_rbrack_
                    self.filter_lbrack_preReleaseVersion_rbrack_ = filter_lbrack_preReleaseVersion_rbrack_
                    self.filter_lbrack_app_rbrack_ = filter_lbrack_app_rbrack_
                    self.filter_lbrack_betaGroups_rbrack_ = filter_lbrack_betaGroups_rbrack_
                    self.filter_lbrack_appStoreVersion_rbrack_ = filter_lbrack_appStoreVersion_rbrack_
                    self.filter_lbrack_id_rbrack_ = filter_lbrack_id_rbrack_
                    self.exists_lbrack_usesNonExemptEncryption_rbrack_ = exists_lbrack_usesNonExemptEncryption_rbrack_
                    self.sort = sort
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_preReleaseVersions_rbrack_ = fields_lbrack_preReleaseVersions_rbrack_
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_betaBuildLocalizations_rbrack_ = fields_lbrack_betaBuildLocalizations_rbrack_
                    self.fields_lbrack_appEncryptionDeclarations_rbrack_ = fields_lbrack_appEncryptionDeclarations_rbrack_
                    self.fields_lbrack_betaAppReviewSubmissions_rbrack_ = fields_lbrack_betaAppReviewSubmissions_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_buildBetaDetails_rbrack_ = fields_lbrack_buildBetaDetails_rbrack_
                    self.fields_lbrack_appStoreVersions_rbrack_ = fields_lbrack_appStoreVersions_rbrack_
                    self.fields_lbrack_buildIcons_rbrack_ = fields_lbrack_buildIcons_rbrack_
                    self.limit = limit
                    self.include = include
                    self.limit_lbrack_betaBuildLocalizations_rbrack_ = limit_lbrack_betaBuildLocalizations_rbrack_
                    self.limit_lbrack_betaGroups_rbrack_ = limit_lbrack_betaGroups_rbrack_
                    self.limit_lbrack_buildBundles_rbrack_ = limit_lbrack_buildBundles_rbrack_
                    self.limit_lbrack_icons_rbrack_ = limit_lbrack_icons_rbrack_
                    self.limit_lbrack_individualTesters_rbrack_ = limit_lbrack_individualTesters_rbrack_
                }
            }
            internal var query: Operations.builds_getCollection.Input.Query
            /// - Remark: Generated from `#/paths/v1/builds/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_getCollection.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_getCollection.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_getCollection.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - query:
            ///   - headers:
            internal init(
                query: Operations.builds_getCollection.Input.Query = .init(),
                headers: Operations.builds_getCollection.Input.Headers = .init()
            ) {
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getCollection.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getCollection.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.builds_getCollection.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.builds_getCollection.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getCollection.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getCollection.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_getCollection.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_getCollection.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getCollection.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getCollection.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_getCollection.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_getCollection.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildsResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildsResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getCollection.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getCollection.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of Builds
            ///
            /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.builds_getCollection.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.builds_getCollection.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getCollection.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getCollection.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/get(builds_getCollection)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_getCollection.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_getCollection.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/builds/{id}`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)`.
    internal enum builds_getInstance {
        internal static let id: Swift.String = "builds_getInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.builds_getInstance.Input.Path
            /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_preReleaseVersions_rbrack_Payload`.
                internal enum fields_lbrack_preReleaseVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case platform = "platform"
                    case builds = "builds"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[preReleaseVersions]`.
                internal typealias fields_lbrack_preReleaseVersions_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_preReleaseVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type preReleaseVersions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[preReleaseVersions]`.
                internal var fields_lbrack_preReleaseVersions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_betaBuildLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case whatsNew = "whatsNew"
                    case locale = "locale"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaBuildLocalizations]`.
                internal typealias fields_lbrack_betaBuildLocalizations_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaBuildLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaBuildLocalizations]`.
                internal var fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_appEncryptionDeclarations_rbrack_Payload`.
                internal enum fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appDescription = "appDescription"
                    case createdDate = "createdDate"
                    case usesEncryption = "usesEncryption"
                    case exempt = "exempt"
                    case containsProprietaryCryptography = "containsProprietaryCryptography"
                    case containsThirdPartyCryptography = "containsThirdPartyCryptography"
                    case availableOnFrenchStore = "availableOnFrenchStore"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case documentUrl = "documentUrl"
                    case documentName = "documentName"
                    case documentType = "documentType"
                    case appEncryptionDeclarationState = "appEncryptionDeclarationState"
                    case codeValue = "codeValue"
                    case app = "app"
                    case builds = "builds"
                    case appEncryptionDeclarationDocument = "appEncryptionDeclarationDocument"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[appEncryptionDeclarations]`.
                internal typealias fields_lbrack_appEncryptionDeclarations_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appEncryptionDeclarations
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[appEncryptionDeclarations]`.
                internal var fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_betaAppReviewSubmissions_rbrack_Payload`.
                internal enum fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaReviewState = "betaReviewState"
                    case submittedDate = "submittedDate"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaAppReviewSubmissions]`.
                internal typealias fields_lbrack_betaAppReviewSubmissions_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaAppReviewSubmissions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[betaAppReviewSubmissions]`.
                internal var fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_buildBetaDetails_rbrack_Payload`.
                internal enum fields_lbrack_buildBetaDetails_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case autoNotifyEnabled = "autoNotifyEnabled"
                    case internalBuildState = "internalBuildState"
                    case externalBuildState = "externalBuildState"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[buildBetaDetails]`.
                internal typealias fields_lbrack_buildBetaDetails_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_buildBetaDetails_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildBetaDetails
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[buildBetaDetails]`.
                internal var fields_lbrack_buildBetaDetails_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_appStoreVersions_rbrack_Payload`.
                internal enum fields_lbrack_appStoreVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case versionString = "versionString"
                    case appStoreState = "appStoreState"
                    case appVersionState = "appVersionState"
                    case copyright = "copyright"
                    case reviewType = "reviewType"
                    case releaseType = "releaseType"
                    case earliestReleaseDate = "earliestReleaseDate"
                    case usesIdfa = "usesIdfa"
                    case downloadable = "downloadable"
                    case createdDate = "createdDate"
                    case app = "app"
                    case ageRatingDeclaration = "ageRatingDeclaration"
                    case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                    case build = "build"
                    case appStoreVersionPhasedRelease = "appStoreVersionPhasedRelease"
                    case gameCenterAppVersion = "gameCenterAppVersion"
                    case routingAppCoverage = "routingAppCoverage"
                    case appStoreReviewDetail = "appStoreReviewDetail"
                    case appStoreVersionSubmission = "appStoreVersionSubmission"
                    case appClipDefaultExperience = "appClipDefaultExperience"
                    case appStoreVersionExperiments = "appStoreVersionExperiments"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case customerReviews = "customerReviews"
                    case alternativeDistributionPackage = "alternativeDistributionPackage"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[appStoreVersions]`.
                internal typealias fields_lbrack_appStoreVersions_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_appStoreVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appStoreVersions
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[appStoreVersions]`.
                internal var fields_lbrack_appStoreVersions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields_lbrack_buildIcons_rbrack_Payload`.
                internal enum fields_lbrack_buildIcons_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case iconAsset = "iconAsset"
                    case iconType = "iconType"
                    case masked = "masked"
                    case name = "name"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[buildIcons]`.
                internal typealias fields_lbrack_buildIcons_rbrack_Payload = [Operations.builds_getInstance.Input.Query.fields_lbrack_buildIcons_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildIcons
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/fields[buildIcons]`.
                internal var fields_lbrack_buildIcons_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_buildIcons_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/include`.
                internal typealias includePayload = [Operations.builds_getInstance.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/include`.
                internal var include: Operations.builds_getInstance.Input.Query.includePayload?
                /// maximum number of related betaBuildLocalizations returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/limit[betaBuildLocalizations]`.
                internal var limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int?
                /// maximum number of related betaGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/limit[betaGroups]`.
                internal var limit_lbrack_betaGroups_rbrack_: Swift.Int?
                /// maximum number of related buildBundles returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/limit[buildBundles]`.
                internal var limit_lbrack_buildBundles_rbrack_: Swift.Int?
                /// maximum number of related icons returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/limit[icons]`.
                internal var limit_lbrack_icons_rbrack_: Swift.Int?
                /// maximum number of related individualTesters returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/query/limit[individualTesters]`.
                internal var limit_lbrack_individualTesters_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_preReleaseVersions_rbrack_: the fields to include for returned resources of type preReleaseVersions
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_betaBuildLocalizations_rbrack_: the fields to include for returned resources of type betaBuildLocalizations
                ///   - fields_lbrack_appEncryptionDeclarations_rbrack_: the fields to include for returned resources of type appEncryptionDeclarations
                ///   - fields_lbrack_betaAppReviewSubmissions_rbrack_: the fields to include for returned resources of type betaAppReviewSubmissions
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_buildBetaDetails_rbrack_: the fields to include for returned resources of type buildBetaDetails
                ///   - fields_lbrack_appStoreVersions_rbrack_: the fields to include for returned resources of type appStoreVersions
                ///   - fields_lbrack_buildIcons_rbrack_: the fields to include for returned resources of type buildIcons
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_betaBuildLocalizations_rbrack_: maximum number of related betaBuildLocalizations returned (when they are included)
                ///   - limit_lbrack_betaGroups_rbrack_: maximum number of related betaGroups returned (when they are included)
                ///   - limit_lbrack_buildBundles_rbrack_: maximum number of related buildBundles returned (when they are included)
                ///   - limit_lbrack_icons_rbrack_: maximum number of related icons returned (when they are included)
                ///   - limit_lbrack_individualTesters_rbrack_: maximum number of related individualTesters returned (when they are included)
                internal init(
                    fields_lbrack_builds_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_preReleaseVersions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload? = nil,
                    fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload? = nil,
                    fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_buildBetaDetails_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload? = nil,
                    fields_lbrack_appStoreVersions_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload? = nil,
                    fields_lbrack_buildIcons_rbrack_: Operations.builds_getInstance.Input.Query.fields_lbrack_buildIcons_rbrack_Payload? = nil,
                    include: Operations.builds_getInstance.Input.Query.includePayload? = nil,
                    limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaGroups_rbrack_: Swift.Int? = nil,
                    limit_lbrack_buildBundles_rbrack_: Swift.Int? = nil,
                    limit_lbrack_icons_rbrack_: Swift.Int? = nil,
                    limit_lbrack_individualTesters_rbrack_: Swift.Int? = nil
                ) {
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_preReleaseVersions_rbrack_ = fields_lbrack_preReleaseVersions_rbrack_
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_betaBuildLocalizations_rbrack_ = fields_lbrack_betaBuildLocalizations_rbrack_
                    self.fields_lbrack_appEncryptionDeclarations_rbrack_ = fields_lbrack_appEncryptionDeclarations_rbrack_
                    self.fields_lbrack_betaAppReviewSubmissions_rbrack_ = fields_lbrack_betaAppReviewSubmissions_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_buildBetaDetails_rbrack_ = fields_lbrack_buildBetaDetails_rbrack_
                    self.fields_lbrack_appStoreVersions_rbrack_ = fields_lbrack_appStoreVersions_rbrack_
                    self.fields_lbrack_buildIcons_rbrack_ = fields_lbrack_buildIcons_rbrack_
                    self.include = include
                    self.limit_lbrack_betaBuildLocalizations_rbrack_ = limit_lbrack_betaBuildLocalizations_rbrack_
                    self.limit_lbrack_betaGroups_rbrack_ = limit_lbrack_betaGroups_rbrack_
                    self.limit_lbrack_buildBundles_rbrack_ = limit_lbrack_buildBundles_rbrack_
                    self.limit_lbrack_icons_rbrack_ = limit_lbrack_icons_rbrack_
                    self.limit_lbrack_individualTesters_rbrack_ = limit_lbrack_individualTesters_rbrack_
                }
            }
            internal var query: Operations.builds_getInstance.Input.Query
            /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_getInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_getInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_getInstance.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.builds_getInstance.Input.Path,
                query: Operations.builds_getInstance.Input.Query = .init(),
                headers: Operations.builds_getInstance.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.builds_getInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.builds_getInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_getInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_getInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_getInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_getInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.builds_getInstance.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.builds_getInstance.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single Build
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.builds_getInstance.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.builds_getInstance.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_getInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_getInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/get(builds_getInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_getInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_getInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/userInvitations`.
    /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)`.
    internal enum userInvitations_createInstance {
        internal static let id: Swift.String = "userInvitations_createInstance"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/userInvitations/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userInvitations_createInstance.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.userInvitations_createInstance.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.userInvitations_createInstance.Input.Headers
            /// - Remark: Generated from `#/paths/v1/userInvitations/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.UserInvitationCreateRequest)
            }
            internal var body: Operations.userInvitations_createInstance.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.userInvitations_createInstance.Input.Headers = .init(),
                body: Operations.userInvitations_createInstance.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.userInvitations_createInstance.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.userInvitations_createInstance.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.userInvitations_createInstance.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.userInvitations_createInstance.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.userInvitations_createInstance.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.userInvitations_createInstance.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.userInvitations_createInstance.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.userInvitations_createInstance.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/201/content/application\/json`.
                    case json(Components.Schemas.UserInvitationResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.UserInvitationResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.Created.Body) {
                    self.body = body
                }
            }
            /// Single UserInvitation
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.userInvitations_createInstance.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.userInvitations_createInstance.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.userInvitations_createInstance.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.userInvitations_createInstance.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/userInvitations/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.userInvitations_createInstance.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.userInvitations_createInstance.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/userInvitations/post(userInvitations_createInstance)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.userInvitations_createInstance.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.userInvitations_createInstance.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)`.
    internal enum betaGroups_builds_getToManyRelationship {
        internal static let id: Swift.String = "betaGroups_builds_getToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaGroups_builds_getToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - limit: maximum resources per page
                internal init(limit: Swift.Int? = nil) {
                    self.limit = limit
                }
            }
            internal var query: Operations.betaGroups_builds_getToManyRelationship.Input.Query
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_getToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_getToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaGroups_builds_getToManyRelationship.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.betaGroups_builds_getToManyRelationship.Input.Path,
                query: Operations.betaGroups_builds_getToManyRelationship.Input.Query = .init(),
                headers: Operations.betaGroups_builds_getToManyRelationship.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.betaGroups_builds_getToManyRelationship.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.betaGroups_builds_getToManyRelationship.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaGroups_builds_getToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaGroups_builds_getToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaGroups_builds_getToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaGroups_builds_getToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaGroups_builds_getToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaGroups_builds_getToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaGroupBuildsLinkagesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaGroupBuildsLinkagesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of related linkages
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.betaGroups_builds_getToManyRelationship.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.betaGroups_builds_getToManyRelationship.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_getToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_getToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/get(betaGroups_builds_getToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaGroups_builds_getToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaGroups_builds_getToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)`.
    internal enum betaGroups_builds_createToManyRelationship {
        internal static let id: Swift.String = "betaGroups_builds_createToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaGroups_builds_createToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_createToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_createToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaGroups_builds_createToManyRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaGroupBuildsLinkagesRequest)
            }
            internal var body: Operations.betaGroups_builds_createToManyRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.betaGroups_builds_createToManyRelationship.Input.Path,
                headers: Operations.betaGroups_builds_createToManyRelationship.Input.Headers = .init(),
                body: Operations.betaGroups_builds_createToManyRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaGroups_builds_createToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaGroups_builds_createToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaGroups_builds_createToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaGroups_builds_createToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaGroups_builds_createToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaGroups_builds_createToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaGroups_builds_createToManyRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaGroups_builds_createToManyRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaGroups_builds_createToManyRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaGroups_builds_createToManyRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.betaGroups_builds_createToManyRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.betaGroups_builds_createToManyRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_createToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_createToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/post(betaGroups_builds_createToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaGroups_builds_createToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaGroups_builds_createToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /v1/betaGroups/{id}/relationships/builds`.
    /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)`.
    internal enum betaGroups_builds_deleteToManyRelationship {
        internal static let id: Swift.String = "betaGroups_builds_deleteToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaGroups_builds_deleteToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_deleteToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaGroups_builds_deleteToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaGroups_builds_deleteToManyRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaGroupBuildsLinkagesRequest)
            }
            internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.betaGroups_builds_deleteToManyRelationship.Input.Path,
                headers: Operations.betaGroups_builds_deleteToManyRelationship.Input.Headers = .init(),
                body: Operations.betaGroups_builds_deleteToManyRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaGroups_builds_deleteToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaGroups_builds_deleteToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaGroups_builds_deleteToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaGroups_builds_deleteToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaGroups_builds_deleteToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaGroups_builds_deleteToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaGroups_builds_deleteToManyRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaGroups_builds_deleteToManyRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaGroups_builds_deleteToManyRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaGroups_builds_deleteToManyRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.betaGroups_builds_deleteToManyRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.betaGroups_builds_deleteToManyRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaGroups/{id}/relationships/builds/DELETE/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaGroups_builds_deleteToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaGroups_builds_deleteToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaGroups/{id}/relationships/builds/delete(betaGroups_builds_deleteToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaGroups_builds_deleteToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaGroups_builds_deleteToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)`.
    internal enum betaTesters_betaGroups_createToManyRelationship {
        internal static let id: Swift.String = "betaTesters_betaGroups_createToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_betaGroups_createToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_betaGroups_createToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaTesterBetaGroupsLinkagesRequest)
            }
            internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Path,
                headers: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Headers = .init(),
                body: Operations.betaTesters_betaGroups_createToManyRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaTesters_betaGroups_createToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaTesters_betaGroups_createToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaTesters_betaGroups_createToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaTesters_betaGroups_createToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaTesters_betaGroups_createToManyRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaTesters_betaGroups_createToManyRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaTesters_betaGroups_createToManyRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaTesters_betaGroups_createToManyRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.betaTesters_betaGroups_createToManyRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.betaTesters_betaGroups_createToManyRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_createToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/post(betaTesters_betaGroups_createToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaTesters_betaGroups_createToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaTesters_betaGroups_createToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `DELETE /v1/betaTesters/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)`.
    internal enum betaTesters_betaGroups_deleteToManyRelationship {
        internal static let id: Swift.String = "betaTesters_betaGroups_deleteToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_betaGroups_deleteToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.betaTesters_betaGroups_deleteToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/requestBody/content/application\/json`.
                case json(Components.Schemas.BetaTesterBetaGroupsLinkagesRequest)
            }
            internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Path,
                headers: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Headers = .init(),
                body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/betaTesters/{id}/relationships/betaGroups/DELETE/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/betaTesters/{id}/relationships/betaGroups/delete(betaTesters_betaGroups_deleteToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.betaTesters_betaGroups_deleteToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/buildBetaDetails/{id}/build`.
    /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)`.
    internal enum buildBetaDetails_build_getToOneRelated {
        internal static let id: Swift.String = "buildBetaDetails_build_getToOneRelated"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.buildBetaDetails_build_getToOneRelated.Input.Path
            /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_builds_rbrack_Payload`.
                internal enum fields_lbrack_builds_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case uploadedDate = "uploadedDate"
                    case expirationDate = "expirationDate"
                    case expired = "expired"
                    case minOsVersion = "minOsVersion"
                    case lsMinimumSystemVersion = "lsMinimumSystemVersion"
                    case computedMinMacOsVersion = "computedMinMacOsVersion"
                    case computedMinVisionOsVersion = "computedMinVisionOsVersion"
                    case iconAssetToken = "iconAssetToken"
                    case processingState = "processingState"
                    case buildAudienceType = "buildAudienceType"
                    case usesNonExemptEncryption = "usesNonExemptEncryption"
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case diagnosticSignatures = "diagnosticSignatures"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[builds]`.
                internal typealias fields_lbrack_builds_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_builds_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type builds
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[builds]`.
                internal var fields_lbrack_builds_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_builds_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_preReleaseVersions_rbrack_Payload`.
                internal enum fields_lbrack_preReleaseVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case version = "version"
                    case platform = "platform"
                    case builds = "builds"
                    case app = "app"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[preReleaseVersions]`.
                internal typealias fields_lbrack_preReleaseVersions_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_preReleaseVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type preReleaseVersions
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[preReleaseVersions]`.
                internal var fields_lbrack_preReleaseVersions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_betaTesters_rbrack_Payload`.
                internal enum fields_lbrack_betaTesters_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case firstName = "firstName"
                    case lastName = "lastName"
                    case email = "email"
                    case inviteType = "inviteType"
                    case state = "state"
                    case apps = "apps"
                    case betaGroups = "betaGroups"
                    case builds = "builds"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaTesters]`.
                internal typealias fields_lbrack_betaTesters_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaTesters_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaTesters
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaTesters]`.
                internal var fields_lbrack_betaTesters_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaTesters_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_betaGroups_rbrack_Payload`.
                internal enum fields_lbrack_betaGroups_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case name = "name"
                    case createdDate = "createdDate"
                    case isInternalGroup = "isInternalGroup"
                    case hasAccessToAllBuilds = "hasAccessToAllBuilds"
                    case publicLinkEnabled = "publicLinkEnabled"
                    case publicLinkId = "publicLinkId"
                    case publicLinkLimitEnabled = "publicLinkLimitEnabled"
                    case publicLinkLimit = "publicLinkLimit"
                    case publicLink = "publicLink"
                    case feedbackEnabled = "feedbackEnabled"
                    case iosBuildsAvailableForAppleSiliconMac = "iosBuildsAvailableForAppleSiliconMac"
                    case iosBuildsAvailableForAppleVision = "iosBuildsAvailableForAppleVision"
                    case app = "app"
                    case builds = "builds"
                    case betaTesters = "betaTesters"
                    case betaRecruitmentCriteria = "betaRecruitmentCriteria"
                    case betaRecruitmentCriterionCompatibleBuildCheck = "betaRecruitmentCriterionCompatibleBuildCheck"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaGroups]`.
                internal typealias fields_lbrack_betaGroups_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaGroups_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaGroups
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaGroups]`.
                internal var fields_lbrack_betaGroups_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaGroups_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_betaBuildLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case whatsNew = "whatsNew"
                    case locale = "locale"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaBuildLocalizations]`.
                internal typealias fields_lbrack_betaBuildLocalizations_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaBuildLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaBuildLocalizations]`.
                internal var fields_lbrack_betaBuildLocalizations_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_appEncryptionDeclarations_rbrack_Payload`.
                internal enum fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case appDescription = "appDescription"
                    case createdDate = "createdDate"
                    case usesEncryption = "usesEncryption"
                    case exempt = "exempt"
                    case containsProprietaryCryptography = "containsProprietaryCryptography"
                    case containsThirdPartyCryptography = "containsThirdPartyCryptography"
                    case availableOnFrenchStore = "availableOnFrenchStore"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case documentUrl = "documentUrl"
                    case documentName = "documentName"
                    case documentType = "documentType"
                    case appEncryptionDeclarationState = "appEncryptionDeclarationState"
                    case codeValue = "codeValue"
                    case app = "app"
                    case builds = "builds"
                    case appEncryptionDeclarationDocument = "appEncryptionDeclarationDocument"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[appEncryptionDeclarations]`.
                internal typealias fields_lbrack_appEncryptionDeclarations_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appEncryptionDeclarations
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[appEncryptionDeclarations]`.
                internal var fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_betaAppReviewSubmissions_rbrack_Payload`.
                internal enum fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case betaReviewState = "betaReviewState"
                    case submittedDate = "submittedDate"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaAppReviewSubmissions]`.
                internal typealias fields_lbrack_betaAppReviewSubmissions_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaAppReviewSubmissions
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[betaAppReviewSubmissions]`.
                internal var fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_apps_rbrack_Payload`.
                internal enum fields_lbrack_apps_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case accessibilityUrl = "accessibilityUrl"
                    case name = "name"
                    case bundleId = "bundleId"
                    case sku = "sku"
                    case primaryLocale = "primaryLocale"
                    case isOrEverWasMadeForKids = "isOrEverWasMadeForKids"
                    case subscriptionStatusUrl = "subscriptionStatusUrl"
                    case subscriptionStatusUrlVersion = "subscriptionStatusUrlVersion"
                    case subscriptionStatusUrlForSandbox = "subscriptionStatusUrlForSandbox"
                    case subscriptionStatusUrlVersionForSandbox = "subscriptionStatusUrlVersionForSandbox"
                    case contentRightsDeclaration = "contentRightsDeclaration"
                    case streamlinedPurchasingEnabled = "streamlinedPurchasingEnabled"
                    case accessibilityDeclarations = "accessibilityDeclarations"
                    case appEncryptionDeclarations = "appEncryptionDeclarations"
                    case ciProduct = "ciProduct"
                    case betaTesters = "betaTesters"
                    case betaGroups = "betaGroups"
                    case appStoreVersions = "appStoreVersions"
                    case appTags = "appTags"
                    case preReleaseVersions = "preReleaseVersions"
                    case betaAppLocalizations = "betaAppLocalizations"
                    case builds = "builds"
                    case betaLicenseAgreement = "betaLicenseAgreement"
                    case betaAppReviewDetail = "betaAppReviewDetail"
                    case appInfos = "appInfos"
                    case appClips = "appClips"
                    case appPricePoints = "appPricePoints"
                    case endUserLicenseAgreement = "endUserLicenseAgreement"
                    case appPriceSchedule = "appPriceSchedule"
                    case appAvailabilityV2 = "appAvailabilityV2"
                    case inAppPurchases = "inAppPurchases"
                    case subscriptionGroups = "subscriptionGroups"
                    case gameCenterEnabledVersions = "gameCenterEnabledVersions"
                    case perfPowerMetrics = "perfPowerMetrics"
                    case appCustomProductPages = "appCustomProductPages"
                    case inAppPurchasesV2 = "inAppPurchasesV2"
                    case promotedPurchases = "promotedPurchases"
                    case appEvents = "appEvents"
                    case reviewSubmissions = "reviewSubmissions"
                    case subscriptionGracePeriod = "subscriptionGracePeriod"
                    case customerReviews = "customerReviews"
                    case customerReviewSummarizations = "customerReviewSummarizations"
                    case gameCenterDetail = "gameCenterDetail"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case alternativeDistributionKey = "alternativeDistributionKey"
                    case analyticsReportRequests = "analyticsReportRequests"
                    case marketplaceSearchDetail = "marketplaceSearchDetail"
                    case buildUploads = "buildUploads"
                    case backgroundAssets = "backgroundAssets"
                    case betaFeedbackScreenshotSubmissions = "betaFeedbackScreenshotSubmissions"
                    case betaFeedbackCrashSubmissions = "betaFeedbackCrashSubmissions"
                    case searchKeywords = "searchKeywords"
                    case webhooks = "webhooks"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[apps]`.
                internal typealias fields_lbrack_apps_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_apps_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type apps
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[apps]`.
                internal var fields_lbrack_apps_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_apps_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_buildBetaDetails_rbrack_Payload`.
                internal enum fields_lbrack_buildBetaDetails_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case autoNotifyEnabled = "autoNotifyEnabled"
                    case internalBuildState = "internalBuildState"
                    case externalBuildState = "externalBuildState"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildBetaDetails]`.
                internal typealias fields_lbrack_buildBetaDetails_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBetaDetails_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildBetaDetails
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildBetaDetails]`.
                internal var fields_lbrack_buildBetaDetails_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_appStoreVersions_rbrack_Payload`.
                internal enum fields_lbrack_appStoreVersions_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case platform = "platform"
                    case versionString = "versionString"
                    case appStoreState = "appStoreState"
                    case appVersionState = "appVersionState"
                    case copyright = "copyright"
                    case reviewType = "reviewType"
                    case releaseType = "releaseType"
                    case earliestReleaseDate = "earliestReleaseDate"
                    case usesIdfa = "usesIdfa"
                    case downloadable = "downloadable"
                    case createdDate = "createdDate"
                    case app = "app"
                    case ageRatingDeclaration = "ageRatingDeclaration"
                    case appStoreVersionLocalizations = "appStoreVersionLocalizations"
                    case build = "build"
                    case appStoreVersionPhasedRelease = "appStoreVersionPhasedRelease"
                    case gameCenterAppVersion = "gameCenterAppVersion"
                    case routingAppCoverage = "routingAppCoverage"
                    case appStoreReviewDetail = "appStoreReviewDetail"
                    case appStoreVersionSubmission = "appStoreVersionSubmission"
                    case appClipDefaultExperience = "appClipDefaultExperience"
                    case appStoreVersionExperiments = "appStoreVersionExperiments"
                    case appStoreVersionExperimentsV2 = "appStoreVersionExperimentsV2"
                    case customerReviews = "customerReviews"
                    case alternativeDistributionPackage = "alternativeDistributionPackage"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[appStoreVersions]`.
                internal typealias fields_lbrack_appStoreVersions_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appStoreVersions_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type appStoreVersions
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[appStoreVersions]`.
                internal var fields_lbrack_appStoreVersions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_buildIcons_rbrack_Payload`.
                internal enum fields_lbrack_buildIcons_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case iconAsset = "iconAsset"
                    case iconType = "iconType"
                    case masked = "masked"
                    case name = "name"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildIcons]`.
                internal typealias fields_lbrack_buildIcons_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildIcons_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildIcons
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildIcons]`.
                internal var fields_lbrack_buildIcons_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildIcons_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_buildBundles_rbrack_Payload`.
                internal enum fields_lbrack_buildBundles_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case bundleId = "bundleId"
                    case bundleType = "bundleType"
                    case sdkBuild = "sdkBuild"
                    case platformBuild = "platformBuild"
                    case fileName = "fileName"
                    case hasSirikit = "hasSirikit"
                    case hasOnDemandResources = "hasOnDemandResources"
                    case hasPrerenderedIcon = "hasPrerenderedIcon"
                    case usesLocationServices = "usesLocationServices"
                    case isIosBuildMacAppStoreCompatible = "isIosBuildMacAppStoreCompatible"
                    case includesSymbols = "includesSymbols"
                    case dSYMUrl = "dSYMUrl"
                    case supportedArchitectures = "supportedArchitectures"
                    case requiredCapabilities = "requiredCapabilities"
                    case deviceProtocols = "deviceProtocols"
                    case locales = "locales"
                    case entitlements = "entitlements"
                    case baDownloadAllowance = "baDownloadAllowance"
                    case baMaxInstallSize = "baMaxInstallSize"
                    case appClipDomainCacheStatus = "appClipDomainCacheStatus"
                    case appClipDomainDebugStatus = "appClipDomainDebugStatus"
                    case betaAppClipInvocations = "betaAppClipInvocations"
                    case buildBundleFileSizes = "buildBundleFileSizes"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildBundles]`.
                internal typealias fields_lbrack_buildBundles_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBundles_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildBundles
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildBundles]`.
                internal var fields_lbrack_buildBundles_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBundles_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields_lbrack_buildUploads_rbrack_Payload`.
                internal enum fields_lbrack_buildUploads_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case cfBundleShortVersionString = "cfBundleShortVersionString"
                    case cfBundleVersion = "cfBundleVersion"
                    case createdDate = "createdDate"
                    case state = "state"
                    case platform = "platform"
                    case uploadedDate = "uploadedDate"
                    case build = "build"
                    case assetFile = "assetFile"
                    case assetDescriptionFile = "assetDescriptionFile"
                    case assetSpiFile = "assetSpiFile"
                    case buildUploadFiles = "buildUploadFiles"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildUploads]`.
                internal typealias fields_lbrack_buildUploads_rbrack_Payload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildUploads_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildUploads
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/fields[buildUploads]`.
                internal var fields_lbrack_buildUploads_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildUploads_rbrack_Payload?
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/includePayload`.
                internal enum includePayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case preReleaseVersion = "preReleaseVersion"
                    case individualTesters = "individualTesters"
                    case betaGroups = "betaGroups"
                    case betaBuildLocalizations = "betaBuildLocalizations"
                    case appEncryptionDeclaration = "appEncryptionDeclaration"
                    case betaAppReviewSubmission = "betaAppReviewSubmission"
                    case app = "app"
                    case buildBetaDetail = "buildBetaDetail"
                    case appStoreVersion = "appStoreVersion"
                    case icons = "icons"
                    case buildBundles = "buildBundles"
                    case buildUpload = "buildUpload"
                }
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/include`.
                internal typealias includePayload = [Operations.buildBetaDetails_build_getToOneRelated.Input.Query.includePayloadPayload]
                /// comma-separated list of relationships to include
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/include`.
                internal var include: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.includePayload?
                /// maximum number of related individualTesters returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/limit[individualTesters]`.
                internal var limit_lbrack_individualTesters_rbrack_: Swift.Int?
                /// maximum number of related betaGroups returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/limit[betaGroups]`.
                internal var limit_lbrack_betaGroups_rbrack_: Swift.Int?
                /// maximum number of related betaBuildLocalizations returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/limit[betaBuildLocalizations]`.
                internal var limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int?
                /// maximum number of related icons returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/limit[icons]`.
                internal var limit_lbrack_icons_rbrack_: Swift.Int?
                /// maximum number of related buildBundles returned (when they are included)
                ///
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/query/limit[buildBundles]`.
                internal var limit_lbrack_buildBundles_rbrack_: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_builds_rbrack_: the fields to include for returned resources of type builds
                ///   - fields_lbrack_preReleaseVersions_rbrack_: the fields to include for returned resources of type preReleaseVersions
                ///   - fields_lbrack_betaTesters_rbrack_: the fields to include for returned resources of type betaTesters
                ///   - fields_lbrack_betaGroups_rbrack_: the fields to include for returned resources of type betaGroups
                ///   - fields_lbrack_betaBuildLocalizations_rbrack_: the fields to include for returned resources of type betaBuildLocalizations
                ///   - fields_lbrack_appEncryptionDeclarations_rbrack_: the fields to include for returned resources of type appEncryptionDeclarations
                ///   - fields_lbrack_betaAppReviewSubmissions_rbrack_: the fields to include for returned resources of type betaAppReviewSubmissions
                ///   - fields_lbrack_apps_rbrack_: the fields to include for returned resources of type apps
                ///   - fields_lbrack_buildBetaDetails_rbrack_: the fields to include for returned resources of type buildBetaDetails
                ///   - fields_lbrack_appStoreVersions_rbrack_: the fields to include for returned resources of type appStoreVersions
                ///   - fields_lbrack_buildIcons_rbrack_: the fields to include for returned resources of type buildIcons
                ///   - fields_lbrack_buildBundles_rbrack_: the fields to include for returned resources of type buildBundles
                ///   - fields_lbrack_buildUploads_rbrack_: the fields to include for returned resources of type buildUploads
                ///   - include: comma-separated list of relationships to include
                ///   - limit_lbrack_individualTesters_rbrack_: maximum number of related individualTesters returned (when they are included)
                ///   - limit_lbrack_betaGroups_rbrack_: maximum number of related betaGroups returned (when they are included)
                ///   - limit_lbrack_betaBuildLocalizations_rbrack_: maximum number of related betaBuildLocalizations returned (when they are included)
                ///   - limit_lbrack_icons_rbrack_: maximum number of related icons returned (when they are included)
                ///   - limit_lbrack_buildBundles_rbrack_: maximum number of related buildBundles returned (when they are included)
                internal init(
                    fields_lbrack_builds_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_builds_rbrack_Payload? = nil,
                    fields_lbrack_preReleaseVersions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_preReleaseVersions_rbrack_Payload? = nil,
                    fields_lbrack_betaTesters_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaTesters_rbrack_Payload? = nil,
                    fields_lbrack_betaGroups_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaGroups_rbrack_Payload? = nil,
                    fields_lbrack_betaBuildLocalizations_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload? = nil,
                    fields_lbrack_appEncryptionDeclarations_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appEncryptionDeclarations_rbrack_Payload? = nil,
                    fields_lbrack_betaAppReviewSubmissions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_betaAppReviewSubmissions_rbrack_Payload? = nil,
                    fields_lbrack_apps_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_apps_rbrack_Payload? = nil,
                    fields_lbrack_buildBetaDetails_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBetaDetails_rbrack_Payload? = nil,
                    fields_lbrack_appStoreVersions_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_appStoreVersions_rbrack_Payload? = nil,
                    fields_lbrack_buildIcons_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildIcons_rbrack_Payload? = nil,
                    fields_lbrack_buildBundles_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildBundles_rbrack_Payload? = nil,
                    fields_lbrack_buildUploads_rbrack_: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.fields_lbrack_buildUploads_rbrack_Payload? = nil,
                    include: Operations.buildBetaDetails_build_getToOneRelated.Input.Query.includePayload? = nil,
                    limit_lbrack_individualTesters_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaGroups_rbrack_: Swift.Int? = nil,
                    limit_lbrack_betaBuildLocalizations_rbrack_: Swift.Int? = nil,
                    limit_lbrack_icons_rbrack_: Swift.Int? = nil,
                    limit_lbrack_buildBundles_rbrack_: Swift.Int? = nil
                ) {
                    self.fields_lbrack_builds_rbrack_ = fields_lbrack_builds_rbrack_
                    self.fields_lbrack_preReleaseVersions_rbrack_ = fields_lbrack_preReleaseVersions_rbrack_
                    self.fields_lbrack_betaTesters_rbrack_ = fields_lbrack_betaTesters_rbrack_
                    self.fields_lbrack_betaGroups_rbrack_ = fields_lbrack_betaGroups_rbrack_
                    self.fields_lbrack_betaBuildLocalizations_rbrack_ = fields_lbrack_betaBuildLocalizations_rbrack_
                    self.fields_lbrack_appEncryptionDeclarations_rbrack_ = fields_lbrack_appEncryptionDeclarations_rbrack_
                    self.fields_lbrack_betaAppReviewSubmissions_rbrack_ = fields_lbrack_betaAppReviewSubmissions_rbrack_
                    self.fields_lbrack_apps_rbrack_ = fields_lbrack_apps_rbrack_
                    self.fields_lbrack_buildBetaDetails_rbrack_ = fields_lbrack_buildBetaDetails_rbrack_
                    self.fields_lbrack_appStoreVersions_rbrack_ = fields_lbrack_appStoreVersions_rbrack_
                    self.fields_lbrack_buildIcons_rbrack_ = fields_lbrack_buildIcons_rbrack_
                    self.fields_lbrack_buildBundles_rbrack_ = fields_lbrack_buildBundles_rbrack_
                    self.fields_lbrack_buildUploads_rbrack_ = fields_lbrack_buildUploads_rbrack_
                    self.include = include
                    self.limit_lbrack_individualTesters_rbrack_ = limit_lbrack_individualTesters_rbrack_
                    self.limit_lbrack_betaGroups_rbrack_ = limit_lbrack_betaGroups_rbrack_
                    self.limit_lbrack_betaBuildLocalizations_rbrack_ = limit_lbrack_betaBuildLocalizations_rbrack_
                    self.limit_lbrack_icons_rbrack_ = limit_lbrack_icons_rbrack_
                    self.limit_lbrack_buildBundles_rbrack_ = limit_lbrack_buildBundles_rbrack_
                }
            }
            internal var query: Operations.buildBetaDetails_build_getToOneRelated.Input.Query
            /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBetaDetails_build_getToOneRelated.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBetaDetails_build_getToOneRelated.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildBetaDetails_build_getToOneRelated.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.buildBetaDetails_build_getToOneRelated.Input.Path,
                query: Operations.buildBetaDetails_build_getToOneRelated.Input.Query = .init(),
                headers: Operations.buildBetaDetails_build_getToOneRelated.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildBetaDetails_build_getToOneRelated.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildBetaDetails_build_getToOneRelated.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildBetaDetails_build_getToOneRelated.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildBetaDetails_build_getToOneRelated.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildBetaDetails_build_getToOneRelated.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildBetaDetails_build_getToOneRelated.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildBetaDetails_build_getToOneRelated.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.buildBetaDetails_build_getToOneRelated.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Single Build
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildBetaDetails_build_getToOneRelated.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.buildBetaDetails_build_getToOneRelated.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBetaDetails/{id}/build/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBetaDetails_build_getToOneRelated.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBetaDetails_build_getToOneRelated.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBetaDetails/{id}/build/get(buildBetaDetails_build_getToOneRelated)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildBetaDetails_build_getToOneRelated.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildBetaDetails_build_getToOneRelated.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/buildBundles/{id}/buildBundleFileSizes`.
    /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)`.
    internal enum buildBundles_buildBundleFileSizes_getToManyRelated {
        internal static let id: Swift.String = "buildBundles_buildBundleFileSizes_getToManyRelated"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Path
            /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/query/fields_lbrack_buildBundleFileSizes_rbrack_Payload`.
                internal enum fields_lbrack_buildBundleFileSizes_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case deviceModel = "deviceModel"
                    case osVersion = "osVersion"
                    case downloadBytes = "downloadBytes"
                    case installBytes = "installBytes"
                }
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/query/fields[buildBundleFileSizes]`.
                internal typealias fields_lbrack_buildBundleFileSizes_rbrack_Payload = [Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query.fields_lbrack_buildBundleFileSizes_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type buildBundleFileSizes
                ///
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/query/fields[buildBundleFileSizes]`.
                internal var fields_lbrack_buildBundleFileSizes_rbrack_: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query.fields_lbrack_buildBundleFileSizes_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_buildBundleFileSizes_rbrack_: the fields to include for returned resources of type buildBundleFileSizes
                ///   - limit: maximum resources per page
                internal init(
                    fields_lbrack_buildBundleFileSizes_rbrack_: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query.fields_lbrack_buildBundleFileSizes_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.fields_lbrack_buildBundleFileSizes_rbrack_ = fields_lbrack_buildBundleFileSizes_rbrack_
                    self.limit = limit
                }
            }
            internal var query: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query
            /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBundles_buildBundleFileSizes_getToManyRelated.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.buildBundles_buildBundleFileSizes_getToManyRelated.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Path,
                query: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Query = .init(),
                headers: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildBundleFileSizesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildBundleFileSizesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of BuildBundleFileSizes
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/buildBundles/{id}/buildBundleFileSizes/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/buildBundles/{id}/buildBundleFileSizes/get(buildBundles_buildBundleFileSizes_getToManyRelated)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.buildBundles_buildBundleFileSizes_getToManyRelated.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)`.
    internal enum builds_appEncryptionDeclaration_getToOneRelationship {
        internal static let id: Swift.String = "builds_appEncryptionDeclaration_getToOneRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_appEncryptionDeclaration_getToOneRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_appEncryptionDeclaration_getToOneRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Path,
                headers: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BuildAppEncryptionDeclarationLinkageResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Related linkage
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/get(builds_appEncryptionDeclaration_getToOneRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_appEncryptionDeclaration_getToOneRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `PATCH /v1/builds/{id}/relationships/appEncryptionDeclaration`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)`.
    internal enum builds_appEncryptionDeclaration_updateToOneRelationship {
        internal static let id: Swift.String = "builds_appEncryptionDeclaration_updateToOneRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_appEncryptionDeclaration_updateToOneRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_appEncryptionDeclaration_updateToOneRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildAppEncryptionDeclarationLinkageRequest)
            }
            internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Path,
                headers: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Headers = .init(),
                body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/appEncryptionDeclaration/PATCH/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/appEncryptionDeclaration/patch(builds_appEncryptionDeclaration_updateToOneRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_appEncryptionDeclaration_updateToOneRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `GET /v1/builds/{id}/betaBuildLocalizations`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)`.
    internal enum builds_betaBuildLocalizations_getToManyRelated {
        internal static let id: Swift.String = "builds_betaBuildLocalizations_getToManyRelated"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Path
            /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/query`.
            internal struct Query: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/query/fields_lbrack_betaBuildLocalizations_rbrack_Payload`.
                internal enum fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload: String, Codable, Hashable, Sendable, CaseIterable {
                    case whatsNew = "whatsNew"
                    case locale = "locale"
                    case build = "build"
                }
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/query/fields[betaBuildLocalizations]`.
                internal typealias fields_lbrack_betaBuildLocalizations_rbrack_Payload = [Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_PayloadPayload]
                /// the fields to include for returned resources of type betaBuildLocalizations
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/query/fields[betaBuildLocalizations]`.
                internal var fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload?
                /// maximum resources per page
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/query/limit`.
                internal var limit: Swift.Int?
                /// Creates a new `Query`.
                ///
                /// - Parameters:
                ///   - fields_lbrack_betaBuildLocalizations_rbrack_: the fields to include for returned resources of type betaBuildLocalizations
                ///   - limit: maximum resources per page
                internal init(
                    fields_lbrack_betaBuildLocalizations_rbrack_: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query.fields_lbrack_betaBuildLocalizations_rbrack_Payload? = nil,
                    limit: Swift.Int? = nil
                ) {
                    self.fields_lbrack_betaBuildLocalizations_rbrack_ = fields_lbrack_betaBuildLocalizations_rbrack_
                    self.limit = limit
                }
            }
            internal var query: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query
            /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_betaBuildLocalizations_getToManyRelated.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_betaBuildLocalizations_getToManyRelated.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - query:
            ///   - headers:
            internal init(
                path: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Path,
                query: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Query = .init(),
                headers: Operations.builds_betaBuildLocalizations_getToManyRelated.Input.Headers = .init()
            ) {
                self.path = path
                self.query = query
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct BadRequest: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/400/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/400/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.BadRequest.Body
                /// Creates a new `BadRequest`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.BadRequest.Body) {
                    self.body = body
                }
            }
            /// Parameter error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/400`.
            ///
            /// HTTP response code: `400 badRequest`.
            case badRequest(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.BadRequest)
            /// The associated value of the enum case if `self` is `.badRequest`.
            ///
            /// - Throws: An error if `self` is not `.badRequest`.
            /// - SeeAlso: `.badRequest`.
            internal var badRequest: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.BadRequest {
                get throws {
                    switch self {
                    case let .badRequest(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "badRequest",
                            response: self
                        )
                    }
                }
            }
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.BetaBuildLocalizationsWithoutIncludesResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.BetaBuildLocalizationsWithoutIncludesResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// List of BetaBuildLocalizations with get
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/betaBuildLocalizations/GET/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/betaBuildLocalizations/get(builds_betaBuildLocalizations_getToManyRelated)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_betaBuildLocalizations_getToManyRelated.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_betaBuildLocalizations_getToManyRelated.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// - Remark: HTTP `POST /v1/builds/{id}/relationships/betaGroups`.
    /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)`.
    internal enum builds_betaGroups_createToManyRelationship {
        internal static let id: Swift.String = "builds_betaGroups_createToManyRelationship"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/path`.
            internal struct Path: Sendable, Hashable {
                /// the id of the requested resource
                ///
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id: the id of the requested resource
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.builds_betaGroups_createToManyRelationship.Input.Path
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_betaGroups_createToManyRelationship.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.builds_betaGroups_createToManyRelationship.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.builds_betaGroups_createToManyRelationship.Input.Headers
            /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.BuildBetaGroupsLinkagesRequest)
            }
            internal var body: Operations.builds_betaGroups_createToManyRelationship.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.builds_betaGroups_createToManyRelationship.Input.Path,
                headers: Operations.builds_betaGroups_createToManyRelationship.Input.Headers = .init(),
                body: Operations.builds_betaGroups_createToManyRelationship.Input.Body
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Unauthorized: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/401/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/401/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.Unauthorized.Body
                /// Creates a new `Unauthorized`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.Unauthorized.Body) {
                    self.body = body
                }
            }
            /// Unauthorized error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/401`.
            ///
            /// HTTP response code: `401 unauthorized`.
            case unauthorized(Operations.builds_betaGroups_createToManyRelationship.Output.Unauthorized)
            /// The associated value of the enum case if `self` is `.unauthorized`.
            ///
            /// - Throws: An error if `self` is not `.unauthorized`.
            /// - SeeAlso: `.unauthorized`.
            internal var unauthorized: Operations.builds_betaGroups_createToManyRelationship.Output.Unauthorized {
                get throws {
                    switch self {
                    case let .unauthorized(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unauthorized",
                            response: self
                        )
                    }
                }
            }
            internal struct Forbidden: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/403/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/403/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.Forbidden.Body
                /// Creates a new `Forbidden`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.Forbidden.Body) {
                    self.body = body
                }
            }
            /// Forbidden error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/403`.
            ///
            /// HTTP response code: `403 forbidden`.
            case forbidden(Operations.builds_betaGroups_createToManyRelationship.Output.Forbidden)
            /// The associated value of the enum case if `self` is `.forbidden`.
            ///
            /// - Throws: An error if `self` is not `.forbidden`.
            /// - SeeAlso: `.forbidden`.
            internal var forbidden: Operations.builds_betaGroups_createToManyRelationship.Output.Forbidden {
                get throws {
                    switch self {
                    case let .forbidden(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "forbidden",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/404/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/404/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.NotFound.Body
                /// Creates a new `NotFound`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.NotFound.Body) {
                    self.body = body
                }
            }
            /// Not found error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.builds_betaGroups_createToManyRelationship.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.builds_betaGroups_createToManyRelationship.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct UnprocessableContent: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/422/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/422/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.UnprocessableContent.Body
                /// Creates a new `UnprocessableContent`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.UnprocessableContent.Body) {
                    self.body = body
                }
            }
            /// Unprocessable request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/422`.
            ///
            /// HTTP response code: `422 unprocessableContent`.
            case unprocessableContent(Operations.builds_betaGroups_createToManyRelationship.Output.UnprocessableContent)
            /// The associated value of the enum case if `self` is `.unprocessableContent`.
            ///
            /// - Throws: An error if `self` is not `.unprocessableContent`.
            /// - SeeAlso: `.unprocessableContent`.
            internal var unprocessableContent: Operations.builds_betaGroups_createToManyRelationship.Output.UnprocessableContent {
                get throws {
                    switch self {
                    case let .unprocessableContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "unprocessableContent",
                            response: self
                        )
                    }
                }
            }
            internal struct Conflict: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/409/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/409/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.Conflict.Body
                /// Creates a new `Conflict`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.Conflict.Body) {
                    self.body = body
                }
            }
            /// Request entity error(s)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/409`.
            ///
            /// HTTP response code: `409 conflict`.
            case conflict(Operations.builds_betaGroups_createToManyRelationship.Output.Conflict)
            /// The associated value of the enum case if `self` is `.conflict`.
            ///
            /// - Throws: An error if `self` is not `.conflict`.
            /// - SeeAlso: `.conflict`.
            internal var conflict: Operations.builds_betaGroups_createToManyRelationship.Output.Conflict {
                get throws {
                    switch self {
                    case let .conflict(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "conflict",
                            response: self
                        )
                    }
                }
            }
            internal struct NoContent: Sendable, Hashable {
                /// Creates a new `NoContent`.
                internal init() {}
            }
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            case noContent(Operations.builds_betaGroups_createToManyRelationship.Output.NoContent)
            /// Success (no content)
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/204`.
            ///
            /// HTTP response code: `204 noContent`.
            internal static var noContent: Self {
                .noContent(.init())
            }
            /// The associated value of the enum case if `self` is `.noContent`.
            ///
            /// - Throws: An error if `self` is not `.noContent`.
            /// - SeeAlso: `.noContent`.
            internal var noContent: Operations.builds_betaGroups_createToManyRelationship.Output.NoContent {
                get throws {
                    switch self {
                    case let .noContent(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "noContent",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/429/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/v1/builds/{id}/relationships/betaGroups/POST/responses/429/content/application\/json`.
                    case json(Components.Schemas.ErrorResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.ErrorResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.builds_betaGroups_createToManyRelationship.Output.TooManyRequests.Body
                /// Creates a new `TooManyRequests`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.builds_betaGroups_createToManyRelationship.Output.TooManyRequests.Body) {
                    self.body = body
                }
            }
            /// Rate limit exceeded error
            ///
            /// - Remark: Generated from `#/paths//v1/builds/{id}/relationships/betaGroups/post(builds_betaGroups_createToManyRelationship)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.builds_betaGroups_createToManyRelationship.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.builds_betaGroups_createToManyRelationship.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
